/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2024-10-28T15:36:53.860+05:30
  3.47.0.99999
  
  Standalone prediction code with sample test data for GBMModel named gbm_25157373_b68d_4e31_9220_2b54919ba728

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://172.16.0.18:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://172.16.0.18:54321/3/Models.java/gbm-25157373-b68d-4e31-9220-2b54919ba728 > gbm_25157373_b68d_4e31_9220_2b54919ba728.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m gbm_25157373_b68d_4e31_9220_2b54919ba728.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
package com.intense.mlapi.models;
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="gbm_25157373_b68d_4e31_9220_2b54919ba728", algorithm="gbm")
public class gbm_25157373_b68d_4e31_9220_2b54919ba728 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Regression; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 109; }
  public int nclasses() { return 1; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_gbm_25157373_b68d_4e31_9220_2b54919ba728.VALUES;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* policy_state_IN */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_0.VALUES,
    /* policy_state_OH */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_1.VALUES,
    /* collision_type_Rear Collision */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_2.VALUES,
    /* collision_type_Side Collision */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_3.VALUES,
    /* collision_type_undocumented */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_4.VALUES,
    /* insured_relationship_not-in-family */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_5.VALUES,
    /* insured_relationship_other-relative */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_6.VALUES,
    /* insured_relationship_own-child */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_7.VALUES,
    /* insured_relationship_unmarried */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_8.VALUES,
    /* insured_relationship_wife */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_9.VALUES,
    /* incident_city_Columbus */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_10.VALUES,
    /* incident_city_Hillsdale */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_11.VALUES,
    /* incident_city_Northbend */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_12.VALUES,
    /* incident_city_Northbrook */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_13.VALUES,
    /* incident_city_Riverwood */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_14.VALUES,
    /* incident_city_Springfield */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_15.VALUES,
    /* police_report_available_YES */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_16.VALUES,
    /* police_report_available_undocumented */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_17.VALUES,
    /* incident_type_Parked Car */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_18.VALUES,
    /* incident_type_Single Vehicle Collision */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_19.VALUES,
    /* incident_type_Vehicle Theft */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_20.VALUES,
    /* insured_occupation_armed-forces */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_21.VALUES,
    /* insured_occupation_craft-repair */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_22.VALUES,
    /* insured_occupation_exec-managerial */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_23.VALUES,
    /* insured_occupation_farming-fishing */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_24.VALUES,
    /* insured_occupation_handlers-cleaners */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_25.VALUES,
    /* insured_occupation_machine-op-inspct */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_26.VALUES,
    /* insured_occupation_other-service */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_27.VALUES,
    /* insured_occupation_priv-house-serv */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_28.VALUES,
    /* insured_occupation_prof-specialty */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_29.VALUES,
    /* insured_occupation_protective-serv */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_30.VALUES,
    /* insured_occupation_sales */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_31.VALUES,
    /* insured_occupation_tech-support */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_32.VALUES,
    /* insured_occupation_transport-moving */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_33.VALUES,
    /* property_damage_YES */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_34.VALUES,
    /* property_damage_undocumented */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_35.VALUES,
    /* incident_state_NY */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_36.VALUES,
    /* incident_state_OH */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_37.VALUES,
    /* incident_state_PA */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_38.VALUES,
    /* incident_state_SC */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_39.VALUES,
    /* incident_state_VA */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_40.VALUES,
    /* incident_state_WV */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_41.VALUES,
    /* authorities_contacted_Fire */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_42.VALUES,
    /* authorities_contacted_Other */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_43.VALUES,
    /* authorities_contacted_Police */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_44.VALUES,
    /* auto_make_Audi */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_45.VALUES,
    /* auto_make_BMW */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_46.VALUES,
    /* auto_make_Chevrolet */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_47.VALUES,
    /* auto_make_Dodge */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_48.VALUES,
    /* auto_make_Ford */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_49.VALUES,
    /* auto_make_Honda */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_50.VALUES,
    /* auto_make_Jeep */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_51.VALUES,
    /* auto_make_Mercedes */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_52.VALUES,
    /* auto_make_Nissan */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_53.VALUES,
    /* auto_make_Saab */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_54.VALUES,
    /* auto_make_Subaru */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_55.VALUES,
    /* auto_make_Toyota */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_56.VALUES,
    /* auto_make_Volkswagen */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_57.VALUES,
    /* insured_education_level_College */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_58.VALUES,
    /* insured_education_level_High School */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_59.VALUES,
    /* insured_education_level_JD */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_60.VALUES,
    /* insured_education_level_MD */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_61.VALUES,
    /* insured_education_level_Masters */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_62.VALUES,
    /* insured_education_level_PhD */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_63.VALUES,
    /* policy_csl_250/500 */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_64.VALUES,
    /* policy_csl_500/1000 */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_65.VALUES,
    /* insured_hobbies_basketball */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_66.VALUES,
    /* insured_hobbies_board-games */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_67.VALUES,
    /* insured_hobbies_bungie-jumping */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_68.VALUES,
    /* insured_hobbies_camping */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_69.VALUES,
    /* insured_hobbies_chess */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_70.VALUES,
    /* insured_hobbies_cross-fit */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_71.VALUES,
    /* insured_hobbies_dancing */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_72.VALUES,
    /* insured_hobbies_exercise */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_73.VALUES,
    /* insured_hobbies_golf */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_74.VALUES,
    /* insured_hobbies_hiking */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_75.VALUES,
    /* insured_hobbies_kayaking */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_76.VALUES,
    /* insured_hobbies_movies */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_77.VALUES,
    /* insured_hobbies_paintball */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_78.VALUES,
    /* insured_hobbies_polo */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_79.VALUES,
    /* insured_hobbies_reading */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_80.VALUES,
    /* insured_hobbies_skydiving */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_81.VALUES,
    /* insured_hobbies_sleeping */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_82.VALUES,
    /* insured_hobbies_video-games */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_83.VALUES,
    /* insured_hobbies_yachting */ gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_84.VALUES,
    /* months_as_customer */ null,
    /* age */ null,
    /* policy_deductable */ null,
    /* policy_annual_premium */ null,
    /* umbrella_limit */ null,
    /* capital-gains */ null,
    /* capital-loss */ null,
    /* incident_severity */ null,
    /* incident_hour_of_the_day */ null,
    /* number_of_vehicles_involved */ null,
    /* bodily_injuries */ null,
    /* witnesses */ null,
    /* total_claim_amount */ null,
    /* injury_claim */ null,
    /* property_claim */ null,
    /* vehicle_claim */ null,
    /* auto_year */ null,
    /* policy_bind_year */ null,
    /* pclaim_severity_int */ null,
    /* vclaim_severity_int */ null,
    /* iclaim_severity_int */ null,
    /* tclaim_severity_int */ null,
    /* prem_claim_int */ null,
    /* umlimit_tclaim_int */ null,
    /* fraud_reported */ null
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {1.0};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {1.0};

  public gbm_25157373_b68d_4e31_9220_2b54919ba728() { super(NAMES,DOMAINS,"fraud_reported"); }
  public String getUUID() { return Long.toString(6209989201763428472L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_0.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_1.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_2.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_3.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_4.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_5.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_6.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_7.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_8.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_9.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_10.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_11.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_12.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_13.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_14.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_15.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_16.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_17.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_18.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_19.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_20.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_21.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_22.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_23.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_24.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_25.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_26.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_27.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_28.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_29.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_30.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_31.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_32.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_33.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_34.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_35.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_36.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_37.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_38.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_39.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_40.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_41.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_42.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_43.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_44.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_45.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_46.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_47.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_48.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_49.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_50.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_51.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_52.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_53.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_54.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_55.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_56.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_57.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_58.score0(data,preds);
    gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_59.score0(data,preds);
    preds[0] += 0.25474254742547425;
    preds[0] = preds[0];
    return preds;
  }
}
// The class representing training column names
class NamesHolder_gbm_25157373_b68d_4e31_9220_2b54919ba728 implements java.io.Serializable {
  public static final String[] VALUES = new String[109];
  static {
    NamesHolder_gbm_25157373_b68d_4e31_9220_2b54919ba728_0.fill(VALUES);
  }
  static final class NamesHolder_gbm_25157373_b68d_4e31_9220_2b54919ba728_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "policy_state_IN";
      sa[1] = "policy_state_OH";
      sa[2] = "collision_type_Rear Collision";
      sa[3] = "collision_type_Side Collision";
      sa[4] = "collision_type_undocumented";
      sa[5] = "insured_relationship_not-in-family";
      sa[6] = "insured_relationship_other-relative";
      sa[7] = "insured_relationship_own-child";
      sa[8] = "insured_relationship_unmarried";
      sa[9] = "insured_relationship_wife";
      sa[10] = "incident_city_Columbus";
      sa[11] = "incident_city_Hillsdale";
      sa[12] = "incident_city_Northbend";
      sa[13] = "incident_city_Northbrook";
      sa[14] = "incident_city_Riverwood";
      sa[15] = "incident_city_Springfield";
      sa[16] = "police_report_available_YES";
      sa[17] = "police_report_available_undocumented";
      sa[18] = "incident_type_Parked Car";
      sa[19] = "incident_type_Single Vehicle Collision";
      sa[20] = "incident_type_Vehicle Theft";
      sa[21] = "insured_occupation_armed-forces";
      sa[22] = "insured_occupation_craft-repair";
      sa[23] = "insured_occupation_exec-managerial";
      sa[24] = "insured_occupation_farming-fishing";
      sa[25] = "insured_occupation_handlers-cleaners";
      sa[26] = "insured_occupation_machine-op-inspct";
      sa[27] = "insured_occupation_other-service";
      sa[28] = "insured_occupation_priv-house-serv";
      sa[29] = "insured_occupation_prof-specialty";
      sa[30] = "insured_occupation_protective-serv";
      sa[31] = "insured_occupation_sales";
      sa[32] = "insured_occupation_tech-support";
      sa[33] = "insured_occupation_transport-moving";
      sa[34] = "property_damage_YES";
      sa[35] = "property_damage_undocumented";
      sa[36] = "incident_state_NY";
      sa[37] = "incident_state_OH";
      sa[38] = "incident_state_PA";
      sa[39] = "incident_state_SC";
      sa[40] = "incident_state_VA";
      sa[41] = "incident_state_WV";
      sa[42] = "authorities_contacted_Fire";
      sa[43] = "authorities_contacted_Other";
      sa[44] = "authorities_contacted_Police";
      sa[45] = "auto_make_Audi";
      sa[46] = "auto_make_BMW";
      sa[47] = "auto_make_Chevrolet";
      sa[48] = "auto_make_Dodge";
      sa[49] = "auto_make_Ford";
      sa[50] = "auto_make_Honda";
      sa[51] = "auto_make_Jeep";
      sa[52] = "auto_make_Mercedes";
      sa[53] = "auto_make_Nissan";
      sa[54] = "auto_make_Saab";
      sa[55] = "auto_make_Subaru";
      sa[56] = "auto_make_Toyota";
      sa[57] = "auto_make_Volkswagen";
      sa[58] = "insured_education_level_College";
      sa[59] = "insured_education_level_High School";
      sa[60] = "insured_education_level_JD";
      sa[61] = "insured_education_level_MD";
      sa[62] = "insured_education_level_Masters";
      sa[63] = "insured_education_level_PhD";
      sa[64] = "policy_csl_250/500";
      sa[65] = "policy_csl_500/1000";
      sa[66] = "insured_hobbies_basketball";
      sa[67] = "insured_hobbies_board-games";
      sa[68] = "insured_hobbies_bungie-jumping";
      sa[69] = "insured_hobbies_camping";
      sa[70] = "insured_hobbies_chess";
      sa[71] = "insured_hobbies_cross-fit";
      sa[72] = "insured_hobbies_dancing";
      sa[73] = "insured_hobbies_exercise";
      sa[74] = "insured_hobbies_golf";
      sa[75] = "insured_hobbies_hiking";
      sa[76] = "insured_hobbies_kayaking";
      sa[77] = "insured_hobbies_movies";
      sa[78] = "insured_hobbies_paintball";
      sa[79] = "insured_hobbies_polo";
      sa[80] = "insured_hobbies_reading";
      sa[81] = "insured_hobbies_skydiving";
      sa[82] = "insured_hobbies_sleeping";
      sa[83] = "insured_hobbies_video-games";
      sa[84] = "insured_hobbies_yachting";
      sa[85] = "months_as_customer";
      sa[86] = "age";
      sa[87] = "policy_deductable";
      sa[88] = "policy_annual_premium";
      sa[89] = "umbrella_limit";
      sa[90] = "capital-gains";
      sa[91] = "capital-loss";
      sa[92] = "incident_severity";
      sa[93] = "incident_hour_of_the_day";
      sa[94] = "number_of_vehicles_involved";
      sa[95] = "bodily_injuries";
      sa[96] = "witnesses";
      sa[97] = "total_claim_amount";
      sa[98] = "injury_claim";
      sa[99] = "property_claim";
      sa[100] = "vehicle_claim";
      sa[101] = "auto_year";
      sa[102] = "policy_bind_year";
      sa[103] = "pclaim_severity_int";
      sa[104] = "vclaim_severity_int";
      sa[105] = "iclaim_severity_int";
      sa[106] = "tclaim_severity_int";
      sa[107] = "prem_claim_int";
      sa[108] = "umlimit_tclaim_int";
    }
  }
}
// The class representing column policy_state_IN
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_0 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_0_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_0_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column policy_state_OH
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_1 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_1_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_1_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column collision_type_Rear Collision
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_2 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_2_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_2_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column collision_type_Side Collision
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_3 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_3_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_3_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column collision_type_undocumented
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_4 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_4_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_4_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_relationship_not-in-family
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_5 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_5_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_5_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_relationship_other-relative
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_6 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_6_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_6_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_relationship_own-child
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_7 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_7_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_7_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_relationship_unmarried
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_8 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_8_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_8_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_relationship_wife
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_9 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_9_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_9_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column incident_city_Columbus
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_10 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_10_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_10_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column incident_city_Hillsdale
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_11 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_11_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_11_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column incident_city_Northbend
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_12 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_12_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_12_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column incident_city_Northbrook
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_13 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_13_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_13_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column incident_city_Riverwood
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_14 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_14_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_14_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column incident_city_Springfield
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_15 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_15_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_15_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column police_report_available_YES
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_16 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_16_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_16_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column police_report_available_undocumented
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_17 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_17_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_17_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column incident_type_Parked Car
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_18 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_18_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_18_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column incident_type_Single Vehicle Collision
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_19 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_19_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_19_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column incident_type_Vehicle Theft
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_20 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_20_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_20_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_occupation_armed-forces
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_21 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_21_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_21_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_occupation_craft-repair
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_22 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_22_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_22_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_occupation_exec-managerial
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_23 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_23_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_23_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_occupation_farming-fishing
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_24 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_24_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_24_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_occupation_handlers-cleaners
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_25 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_25_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_25_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_occupation_machine-op-inspct
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_26 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_26_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_26_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_occupation_other-service
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_27 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_27_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_27_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_occupation_priv-house-serv
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_28 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_28_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_28_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_occupation_prof-specialty
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_29 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_29_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_29_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_occupation_protective-serv
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_30 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_30_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_30_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_occupation_sales
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_31 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_31_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_31_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_occupation_tech-support
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_32 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_32_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_32_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_occupation_transport-moving
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_33 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_33_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_33_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column property_damage_YES
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_34 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_34_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_34_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column property_damage_undocumented
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_35 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_35_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_35_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column incident_state_NY
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_36_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column incident_state_OH
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_37 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_37_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_37_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column incident_state_PA
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_38 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_38_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_38_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column incident_state_SC
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_39 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_39_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_39_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column incident_state_VA
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_40 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_40_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_40_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column incident_state_WV
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_41 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_41_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_41_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column authorities_contacted_Fire
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_42 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_42_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_42_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column authorities_contacted_Other
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_43 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_43_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_43_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column authorities_contacted_Police
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_44 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_44_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_44_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column auto_make_Audi
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_45 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_45_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_45_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column auto_make_BMW
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_46 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_46_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_46_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column auto_make_Chevrolet
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_47 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_47_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_47_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column auto_make_Dodge
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_48 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_48_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_48_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column auto_make_Ford
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_49 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_49_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_49_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column auto_make_Honda
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_50 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_50_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_50_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column auto_make_Jeep
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_51 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_51_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_51_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column auto_make_Mercedes
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_52 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_52_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_52_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column auto_make_Nissan
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_53 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_53_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_53_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column auto_make_Saab
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_54 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_54_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_54_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column auto_make_Subaru
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_55 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_55_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_55_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column auto_make_Toyota
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_56 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_56_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_56_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column auto_make_Volkswagen
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_57 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_57_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_57_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_education_level_College
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_58 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_58_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_58_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_education_level_High School
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_59 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_59_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_59_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_education_level_JD
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_60 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_60_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_60_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_education_level_MD
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_61 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_61_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_61_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_education_level_Masters
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_62 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_62_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_62_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_education_level_PhD
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_63 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_63_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_63_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column policy_csl_250/500
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_64 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_64_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_64_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column policy_csl_500/1000
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_65 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_65_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_65_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_basketball
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_66 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_66_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_66_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_board-games
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_67 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_67_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_67_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_bungie-jumping
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_68 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_68_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_68_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_camping
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_69 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_69_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_69_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_chess
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_70 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_70_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_70_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_cross-fit
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_71 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_71_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_71_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_dancing
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_72 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_72_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_72_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_exercise
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_73 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_73_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_73_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_golf
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_74 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_74_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_74_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_hiking
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_75 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_75_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_75_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_kayaking
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_76 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_76_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_76_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_movies
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_77 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_77_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_77_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_paintball
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_78 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_78_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_78_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_polo
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_79 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_79_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_79_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_reading
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_80 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_80_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_80_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_skydiving
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_81 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_81_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_81_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_sleeping
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_82 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_82_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_82_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_video-games
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_83 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_83_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_83_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_yachting
class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_84 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_84_0.fill(VALUES);
  }
  static final class gbm_25157373_b68d_4e31_9220_2b54919ba728_ColInfo_84_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}

class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_0_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
         (data[92 /* incident_severity */] < 1.5f ? 
             (Double.isNaN(data[23 /* insured_occupation_exec-managerial */]) || !GenModel.bitSetIsInRange(32, 0, data[23]) || (data[23] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[23]) && (data[23] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[23])) ? 
                 (Double.isNaN(data[99]) || data[99 /* property_claim */] < 13684.5f ? 
                     (data[86 /* age */] < 25.5f ? 
                        -0.002397331f : 
                         (data[103 /* pclaim_severity_int */] < 853.5f ? 
                            -0.018105833f : 
                            -0.023551177f)) : 
                     (data[99 /* property_claim */] < 15557.5f ? 
                        0.014525745f : 
                        -0.025474254f)) : 
                 (data[88 /* policy_annual_premium */] < 1253.0714f ? 
                    0.014525745f : 
                    -0.025474254f)) : 
             (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                 (!Double.isNaN(data[25 /* insured_occupation_handlers-cleaners */]) && (GenModel.bitSetIsInRange(32, 0, data[25]) && (data[25] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[25])) ? 
                    -0.0040456825f : 
                     (Double.isNaN(data[43 /* authorities_contacted_Other */]) || !GenModel.bitSetIsInRange(32, 0, data[43]) || (data[43] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[43]) && (data[43] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[43])) ? 
                         (Double.isNaN(data[6 /* insured_relationship_other-relative */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[6])) ? 
                            0.027915576f : 
                            0.054525744f) : 
                         (Double.isNaN(data[99]) || data[99 /* property_claim */] < 10905.5f ? 
                            0.06652574f : 
                            0.0300813f))) : 
                 (data[101 /* auto_year */] < 1998.5f ? 
                     (Double.isNaN(data[90]) || data[90 /* capital-gains */] < 32606.5f ? 
                        -0.019591901f : 
                        0.012025746f) : 
                     (Double.isNaN(data[2 /* collision_type_Rear Collision */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[2])) ? 
                         (Double.isNaN(data[99]) || data[99 /* property_claim */] < 13519.5f ? 
                            -0.025474254f : 
                            -0.014947938f) : 
                         (data[85 /* months_as_customer */] < 119.5f ? 
                            0.005775746f : 
                            -0.020474253f))))) : 
         (data[97 /* total_claim_amount */] < 56277.0f ? 
            0.07452574f : 
             (data[91 /* capital-loss */] < 12110.5f ? 
                0.014525745f : 
                0.06683344f)));
    return pred;
  } // constant pool size = 112B, number of visited nodes = 20, static init size = 180B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_1_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
         (data[92 /* incident_severity */] < 1.5f ? 
             (Double.isNaN(data[96]) || data[96 /* witnesses */] < 1.5f ? 
                 (Double.isNaN(data[0 /* policy_state_IN */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (data[0] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[0])) ? 
                     (data[86 /* age */] < 28.0f ? 
                        -0.02437199f : 
                         (!Double.isNaN(data[76 /* insured_hobbies_kayaking */]) && (GenModel.bitSetIsInRange(32, 0, data[76]) && (data[76] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[76])) ? 
                            -0.024306107f : 
                            -0.023457766f)) : 
                     (data[98 /* injury_claim */] < 1005.5f ? 
                        -9.8536555E-5f : 
                         (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 45600.5f ? 
                            -0.023294764f : 
                            -0.0053475136f))) : 
                 (Double.isNaN(data[23 /* insured_occupation_exec-managerial */]) || !GenModel.bitSetIsInRange(32, 0, data[23]) || (data[23] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[23]) && (data[23] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[23])) ? 
                     (data[85 /* months_as_customer */] < 66.5f ? 
                        0.0012772871f : 
                         (Double.isNaN(data[1 /* policy_state_OH */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                            -0.021165837f : 
                            -0.006468298f)) : 
                    0.01125499f)) : 
             (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                 (!Double.isNaN(data[69 /* insured_hobbies_camping */]) && (GenModel.bitSetIsInRange(32, 0, data[69]) && (data[69] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[69])) ? 
                    -0.010115481f : 
                     (!Double.isNaN(data[25 /* insured_occupation_handlers-cleaners */]) && (GenModel.bitSetIsInRange(32, 0, data[25]) && (data[25] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[25])) ? 
                        -6.9687514E-5f : 
                         (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 2.33010004E11f ? 
                            0.031561073f : 
                            0.055651102f))) : 
                 (data[101 /* auto_year */] < 1998.5f ? 
                     (Double.isNaN(data[90]) || data[90 /* capital-gains */] < 32606.5f ? 
                        -0.017632712f : 
                        0.010823168f) : 
                     (data[88 /* policy_annual_premium */] < 1097.3341f ? 
                         (Double.isNaN(data[35 /* property_damage_undocumented */]) || !GenModel.bitSetIsInRange(32, 0, data[35]) || (data[35] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[35]) && (data[35] < 2) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[35])) ? 
                            -0.019602269f : 
                            0.0011376439f) : 
                         (Double.isNaN(data[8 /* insured_relationship_unmarried */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 2) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
                            -0.022375843f : 
                            -0.01215892f))))) : 
         (data[97 /* total_claim_amount */] < 56277.0f ? 
            0.067073174f : 
             (data[91 /* capital-loss */] < 12110.5f ? 
                0.013073171f : 
                0.060150094f)));
    return pred;
  } // constant pool size = 135B, number of visited nodes = 22, static init size = 270B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_2_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
         (data[92 /* incident_severity */] < 1.5f ? 
             (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2005.5f ? 
                 (Double.isNaN(data[50 /* auto_make_Honda */]) || !GenModel.bitSetIsInRange(32, 0, data[50]) || (data[50] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[50]) && (data[50] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[50])) ? 
                     (Double.isNaN(data[45 /* auto_make_Audi */]) || !GenModel.bitSetIsInRange(32, 0, data[45]) || (data[45] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[45]) && (data[45] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[45])) ? 
                         (Double.isNaN(data[21 /* insured_occupation_armed-forces */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (data[21] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[21]) && (data[21] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[21])) ? 
                            -0.021111328f : 
                            -0.007755347f) : 
                        -0.0025149528f) : 
                    -0.0022518479f) : 
                 (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1353.9626f ? 
                     (Double.isNaN(data[59 /* insured_education_level_High School */]) || !GenModel.bitSetIsInRange(32, 0, data[59]) || (data[59] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[59]) && (data[59] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[59])) ? 
                         (Double.isNaN(data[101]) || data[101 /* auto_year */] < 2012.5f ? 
                            -0.016108593f : 
                            0.018234104f) : 
                        0.014199889f) : 
                     (!Double.isNaN(data[0 /* policy_state_IN */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[0])) ? 
                        -0.022907855f : 
                         (data[88 /* policy_annual_premium */] < 1418.9902f ? 
                            -0.020943148f : 
                            -0.021546777f)))) : 
             (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                 (!Double.isNaN(data[69 /* insured_hobbies_camping */]) && (GenModel.bitSetIsInRange(32, 0, data[69]) && (data[69] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[69])) ? 
                    -0.009103933f : 
                     (Double.isNaN(data[0 /* policy_state_IN */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (data[0] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 2) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[0])) ? 
                         (!Double.isNaN(data[3 /* collision_type_Side Collision */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 2) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[3])) ? 
                            0.009513839f : 
                            0.032219976f) : 
                         (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2008.5f ? 
                            0.05099698f : 
                            0.008200896f))) : 
                 (data[101 /* auto_year */] < 1998.5f ? 
                     (Double.isNaN(data[90]) || data[90 /* capital-gains */] < 32606.5f ? 
                        -0.015869442f : 
                        0.009740854f) : 
                     (Double.isNaN(data[2 /* collision_type_Rear Collision */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 2) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[2])) ? 
                         (Double.isNaN(data[99]) || data[99 /* property_claim */] < 13519.5f ? 
                            -0.021075077f : 
                            -0.011822746f) : 
                         (data[85 /* months_as_customer */] < 119.5f ? 
                            0.0067147235f : 
                            -0.016575087f))))) : 
         (Double.isNaN(data[101]) || data[101 /* auto_year */] < 2008.5f ? 
             (Double.isNaN(data[99]) || data[99 /* property_claim */] < 8750.5f ? 
                0.062996626f : 
                0.03466278f) : 
            0.024370471f));
    return pred;
  } // constant pool size = 144B, number of visited nodes = 23, static init size = 300B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_3_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
         (data[92 /* incident_severity */] < 1.5f ? 
             (data[86 /* age */] < 25.5f ? 
                9.241495E-4f : 
                 (Double.isNaN(data[23 /* insured_occupation_exec-managerial */]) || !GenModel.bitSetIsInRange(32, 0, data[23]) || (data[23] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[23]) && (data[23] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[23])) ? 
                     (Double.isNaN(data[103]) || data[103 /* pclaim_severity_int */] < 13684.5f ? 
                         (Double.isNaN(data[80 /* insured_hobbies_reading */]) || !GenModel.bitSetIsInRange(32, 0, data[80]) || (data[80] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[80]) && (data[80] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[80])) ? 
                            -0.016594065f : 
                            -0.006884989f) : 
                         (data[98 /* injury_claim */] < 14747.5f ? 
                            0.016043719f : 
                            -0.020564158f)) : 
                     (!Double.isNaN(data[35 /* property_damage_undocumented */]) && (GenModel.bitSetIsInRange(32, 0, data[35]) && (data[35] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[35])) ? 
                        -0.022551814f : 
                        0.016358024f))) : 
             (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                 (!Double.isNaN(data[25 /* insured_occupation_handlers-cleaners */]) && (GenModel.bitSetIsInRange(32, 0, data[25]) && (data[25] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[25])) ? 
                    -0.005570223f : 
                     (Double.isNaN(data[43 /* authorities_contacted_Other */]) || !GenModel.bitSetIsInRange(32, 0, data[43]) || (data[43] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[43]) && (data[43] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[43])) ? 
                         (Double.isNaN(data[6 /* insured_relationship_other-relative */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[6])) ? 
                            0.019266557f : 
                            0.042238127f) : 
                         (data[99 /* property_claim */] < 7497.5f ? 
                            0.061634913f : 
                            0.026791528f))) : 
                 (data[96 /* witnesses */] < 0.5f ? 
                     (data[86 /* age */] < 31.5f ? 
                        -0.023181027f : 
                         (data[101 /* auto_year */] < 2002.0f ? 
                            -0.021608304f : 
                            -0.019286755f)) : 
                     (data[88 /* policy_annual_premium */] < 1119.7007f ? 
                         (!Double.isNaN(data[12 /* incident_city_Northbend */]) && (GenModel.bitSetIsInRange(32, 0, data[12]) && (data[12] < 2) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[12])) ? 
                            -0.020268444f : 
                            0.007910437f) : 
                         (Double.isNaN(data[2 /* collision_type_Rear Collision */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 2) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[2])) ? 
                            -0.017243423f : 
                            -0.0070911855f))))) : 
         (data[86 /* age */] < 39.0f ? 
            0.05707058f : 
             (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 15631.0f ? 
                0.017349884f : 
                0.048667077f)));
    return pred;
  } // constant pool size = 131B, number of visited nodes = 21, static init size = 270B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_4_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
         (data[92 /* incident_severity */] < 1.5f ? 
             (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2005.5f ? 
                 (Double.isNaN(data[50 /* auto_make_Honda */]) || !GenModel.bitSetIsInRange(32, 0, data[50]) || (data[50] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[50]) && (data[50] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[50])) ? 
                     (Double.isNaN(data[45 /* auto_make_Audi */]) || !GenModel.bitSetIsInRange(32, 0, data[45]) || (data[45] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[45]) && (data[45] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[45])) ? 
                         (Double.isNaN(data[21 /* insured_occupation_armed-forces */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (data[21] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[21]) && (data[21] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[21])) ? 
                            -0.017555695f : 
                            -0.0057480126f) : 
                        -0.0010460329f) : 
                    -8.0452196E-4f) : 
                 (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 54682.5f ? 
                     (Double.isNaN(data[6 /* insured_relationship_other-relative */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[6])) ? 
                         (data[90 /* capital-gains */] < 34130.5f ? 
                            -0.019116236f : 
                            -0.009480868f) : 
                        0.0023733205f) : 
                     (Double.isNaN(data[101]) || data[101 /* auto_year */] < 2006.5f ? 
                        -0.011744641f : 
                        0.02717328f))) : 
             (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                 (!Double.isNaN(data[69 /* insured_hobbies_camping */]) && (GenModel.bitSetIsInRange(32, 0, data[69]) && (data[69] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[69])) ? 
                    -0.010331027f : 
                     (Double.isNaN(data[60 /* insured_education_level_JD */]) || !GenModel.bitSetIsInRange(32, 0, data[60]) || (data[60] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[60]) && (data[60] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[60])) ? 
                         (!Double.isNaN(data[25 /* insured_occupation_handlers-cleaners */]) && (GenModel.bitSetIsInRange(32, 0, data[25]) && (data[25] < 2) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[25])) ? 
                            -0.016579255f : 
                            0.023816692f) : 
                         (data[101 /* auto_year */] < 2005.5f ? 
                            0.021989869f : 
                            0.06251102f))) : 
                 (data[101 /* auto_year */] < 1998.5f ? 
                     (Double.isNaN(data[96]) || data[96 /* witnesses */] < 1.5f ? 
                        -0.011689461f : 
                        0.011570091f) : 
                     (Double.isNaN(data[8 /* insured_relationship_unmarried */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 2) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
                         (Double.isNaN(data[96]) || data[96 /* witnesses */] < 2.5f ? 
                            -0.01762053f : 
                            -0.007276717f) : 
                         (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 38560.0f ? 
                            0.00869275f : 
                            -0.018969156f))))) : 
         (data[103 /* pclaim_severity_int */] < 10265.5f ? 
            0.05335358f : 
             (data[91 /* capital-loss */] < 12110.5f ? 
                0.00191185f : 
                0.04593577f)));
    return pred;
  } // constant pool size = 135B, number of visited nodes = 22, static init size = 270B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_5_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
         (data[92 /* incident_severity */] < 1.5f ? 
             (Double.isNaN(data[96]) || data[96 /* witnesses */] < 1.5f ? 
                 (Double.isNaN(data[0 /* policy_state_IN */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (data[0] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[0])) ? 
                     (!Double.isNaN(data[50 /* auto_make_Honda */]) && (GenModel.bitSetIsInRange(32, 0, data[50]) && (data[50] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[50])) ? 
                        -0.019155141f : 
                         (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 52078.5f ? 
                            -0.016648605f : 
                            -0.0181651f)) : 
                     (Double.isNaN(data[93]) || data[93 /* incident_hour_of_the_day */] < 14.0f ? 
                         (!Double.isNaN(data[18 /* incident_type_Parked Car */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && (data[18] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[18])) ? 
                            -0.018200066f : 
                            0.005669156f) : 
                        -0.017577041f)) : 
                 (Double.isNaN(data[23 /* insured_occupation_exec-managerial */]) || !GenModel.bitSetIsInRange(32, 0, data[23]) || (data[23] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[23]) && (data[23] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[23])) ? 
                     (!Double.isNaN(data[36 /* incident_state_NY */]) && (GenModel.bitSetIsInRange(32, 0, data[36]) && (data[36] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[36])) ? 
                         (data[102 /* policy_bind_year */] < 1997.5f ? 
                            -0.016163504f : 
                            -0.017888227f) : 
                         (Double.isNaN(data[43 /* authorities_contacted_Other */]) || !GenModel.bitSetIsInRange(32, 0, data[43]) || (data[43] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[43]) && (data[43] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[43])) ? 
                            -0.009412614f : 
                            0.0078004557f)) : 
                    0.012773806f)) : 
             (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                 (!Double.isNaN(data[69 /* insured_hobbies_camping */]) && (GenModel.bitSetIsInRange(32, 0, data[69]) && (data[69] < 2) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[69])) ? 
                    -0.009297923f : 
                     (Double.isNaN(data[0 /* policy_state_IN */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (data[0] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 2) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[0])) ? 
                         (!Double.isNaN(data[3 /* collision_type_Side Collision */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 2) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[3])) ? 
                            0.0040690377f : 
                            0.02414978f) : 
                         (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2001.5f ? 
                            0.04838601f : 
                            0.017445048f))) : 
                 (Double.isNaN(data[83 /* insured_hobbies_video-games */]) || !GenModel.bitSetIsInRange(32, 0, data[83]) || (data[83] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[83]) && (data[83] < 2) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[83])) ? 
                     (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 3.13107186E11f ? 
                         (data[90 /* capital-gains */] < 30525.5f ? 
                            -0.016135866f : 
                            -0.008656717f) : 
                        0.0025867256f) : 
                    0.0061576134f))) : 
         (Double.isNaN(data[101]) || data[101 /* auto_year */] < 2008.5f ? 
             (Double.isNaN(data[99]) || data[99 /* property_claim */] < 8750.5f ? 
                0.048346527f : 
                0.023576273f) : 
            0.014857186f));
    return pred;
  } // constant pool size = 145B, number of visited nodes = 22, static init size = 330B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_6_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
         (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[71])) ? 
             (data[92 /* incident_severity */] < 1.5f ? 
                 (data[85 /* months_as_customer */] < 32.5f ? 
                    0.002129766f : 
                     (Double.isNaN(data[50 /* auto_make_Honda */]) || !GenModel.bitSetIsInRange(32, 0, data[50]) || (data[50] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[50]) && (data[50] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[50])) ? 
                         (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 3.59124992E11f ? 
                            -0.013147906f : 
                            -0.001148644f) : 
                        -0.002703323f)) : 
                 (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                     (Double.isNaN(data[60 /* insured_education_level_JD */]) || !GenModel.bitSetIsInRange(32, 0, data[60]) || (data[60] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[60]) && (data[60] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[60])) ? 
                         (!Double.isNaN(data[25 /* insured_occupation_handlers-cleaners */]) && (GenModel.bitSetIsInRange(32, 0, data[25]) && (data[25] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[25])) ? 
                            -0.017159663f : 
                            0.018737018f) : 
                         (data[102 /* policy_bind_year */] < 1999.5f ? 
                            0.055051204f : 
                            0.02469133f)) : 
                     (Double.isNaN(data[83 /* insured_hobbies_video-games */]) || !GenModel.bitSetIsInRange(32, 0, data[83]) || (data[83] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[83]) && (data[83] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[83])) ? 
                         (Double.isNaN(data[57 /* auto_make_Volkswagen */]) || !GenModel.bitSetIsInRange(32, 0, data[57]) || (data[57] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[57]) && (data[57] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[57])) ? 
                            -0.014362986f : 
                            0.0010714756f) : 
                        0.005541852f))) : 
             (data[105 /* iclaim_severity_int */] < 16372.5f ? 
                0.05950236f : 
                0.022135379f)) : 
         (data[97 /* total_claim_amount */] < 56277.0f ? 
            0.042278796f : 
             (data[91 /* capital-loss */] < 12110.5f ? 
                5.2149297E-4f : 
                0.037765473f)));
    return pred;
  } // constant pool size = 97B, number of visited nodes = 15, static init size = 210B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_7_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
         (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[71])) ? 
             (data[92 /* incident_severity */] < 1.5f ? 
                 (data[86 /* age */] < 25.5f ? 
                    0.0031453946f : 
                     (!Double.isNaN(data[65 /* policy_csl_500/1000 */]) && (GenModel.bitSetIsInRange(32, 0, data[65]) && (data[65] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[65])) ? 
                         (Double.isNaN(data[85]) || data[85 /* months_as_customer */] < 287.5f ? 
                            -0.015172631f : 
                            -0.009187649f) : 
                         (Double.isNaN(data[99]) || data[99 /* property_claim */] < 13314.5f ? 
                            -0.010139243f : 
                            0.0010295925f))) : 
                 (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                     (!Double.isNaN(data[69 /* insured_hobbies_camping */]) && (GenModel.bitSetIsInRange(32, 0, data[69]) && (data[69] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[69])) ? 
                        -0.009643295f : 
                         (Double.isNaN(data[97]) || data[97 /* total_claim_amount */] < 75546.5f ? 
                            0.022228582f : 
                            0.00457742f)) : 
                     (Double.isNaN(data[83 /* insured_hobbies_video-games */]) || !GenModel.bitSetIsInRange(32, 0, data[83]) || (data[83] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[83]) && (data[83] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[83])) ? 
                         (Double.isNaN(data[57 /* auto_make_Volkswagen */]) || !GenModel.bitSetIsInRange(32, 0, data[57]) || (data[57] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[57]) && (data[57] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[57])) ? 
                            -0.0129266875f : 
                            9.643273E-4f) : 
                        0.004987668f))) : 
             (data[105 /* iclaim_severity_int */] < 16372.5f ? 
                0.05355212f : 
                0.019921841f)) : 
         (Double.isNaN(data[101]) || data[101 /* auto_year */] < 2008.5f ? 
             (Double.isNaN(data[99]) || data[99 /* property_claim */] < 8750.5f ? 
                0.04023436f : 
                0.018514287f) : 
            0.010576842f));
    return pred;
  } // constant pool size = 92B, number of visited nodes = 15, static init size = 180B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_8_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
         (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[71])) ? 
             (data[92 /* incident_severity */] < 1.5f ? 
                 (data[85 /* months_as_customer */] < 32.5f ? 
                    0.0026000736f : 
                     (Double.isNaN(data[50 /* auto_make_Honda */]) || !GenModel.bitSetIsInRange(32, 0, data[50]) || (data[50] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[50]) && (data[50] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[50])) ? 
                         (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2005.5f ? 
                            -0.012199448f : 
                            -0.00715338f) : 
                        -0.0013131009f)) : 
                 (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                     (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 21234.5f ? 
                         (Double.isNaN(data[64 /* policy_csl_250/500 */]) || !GenModel.bitSetIsInRange(32, 0, data[64]) || (data[64] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[64]) && (data[64] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[64])) ? 
                            0.0012109269f : 
                            0.023186645f) : 
                         (!Double.isNaN(data[1 /* policy_state_OH */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                            0.005233993f : 
                            0.030731263f)) : 
                     (Double.isNaN(data[33 /* insured_occupation_transport-moving */]) || !GenModel.bitSetIsInRange(32, 0, data[33]) || (data[33] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[33]) && (data[33] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[33])) ? 
                         (Double.isNaN(data[14 /* incident_city_Riverwood */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (data[14] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[14])) ? 
                            -0.012581605f : 
                            -0.0027269847f) : 
                        0.0027158184f))) : 
             (data[104 /* vclaim_severity_int */] < 126063.0f ? 
                0.017282305f : 
                0.04884426f)) : 
         (data[86 /* age */] < 39.0f ? 
            0.037049145f : 
             (data[104 /* vclaim_severity_int */] < 82391.5f ? 
                0.031702794f : 
                0.005886353f)));
    return pred;
  } // constant pool size = 97B, number of visited nodes = 15, static init size = 210B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_9_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
         (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[71])) ? 
             (data[92 /* incident_severity */] < 1.5f ? 
                 (!Double.isNaN(data[65 /* policy_csl_500/1000 */]) && (GenModel.bitSetIsInRange(32, 0, data[65]) && (data[65] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[65])) ? 
                     (data[107 /* prem_claim_int */] < 5753350.5f ? 
                        -0.0054878048f : 
                         (data[85 /* months_as_customer */] < 67.5f ? 
                            -0.01634818f : 
                            -0.012412216f)) : 
                     (data[85 /* months_as_customer */] < 33.5f ? 
                        0.01109898f : 
                         (Double.isNaN(data[99]) || data[99 /* property_claim */] < 13486.5f ? 
                            -0.008276847f : 
                            0.0034478172f))) : 
                 (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                     (data[88 /* policy_annual_premium */] < 855.91f ? 
                        0.04047209f : 
                         (data[88 /* policy_annual_premium */] < 1125.895f ? 
                            -7.712171E-4f : 
                            0.016897175f)) : 
                     (Double.isNaN(data[93]) || data[93 /* incident_hour_of_the_day */] < 22.5f ? 
                         (data[86 /* age */] < 29.5f ? 
                            -0.0024566634f : 
                            -0.011276849f) : 
                        0.0031281929f))) : 
             (data[105 /* iclaim_severity_int */] < 16372.5f ? 
                0.045521818f : 
                0.013992089f)) : 
         (data[91 /* capital-loss */] < 12151.5f ? 
            0.012600103f : 
             (Double.isNaN(data[99]) || data[99 /* property_claim */] < 8436.0f ? 
                0.021906372f : 
                0.038707294f)));
    return pred;
  } // constant pool size = 81B, number of visited nodes = 16, static init size = 90B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_10 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_10_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_10_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
         (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[71])) ? 
             (data[92 /* incident_severity */] < 1.5f ? 
                 (Double.isNaN(data[96]) || data[96 /* witnesses */] < 1.5f ? 
                     (Double.isNaN(data[61 /* insured_education_level_MD */]) || !GenModel.bitSetIsInRange(32, 0, data[61]) || (data[61] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[61]) && (data[61] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[61])) ? 
                         (Double.isNaN(data[106]) || data[106 /* tclaim_severity_int */] < 84399.5f ? 
                            -0.0120982025f : 
                            -0.0036741414f) : 
                         (data[91 /* capital-loss */] < 29511.5f ? 
                            0.01637054f : 
                            -0.0118487f)) : 
                     (Double.isNaN(data[2 /* collision_type_Rear Collision */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[2])) ? 
                         (data[93 /* incident_hour_of_the_day */] < 8.5f ? 
                            -0.0021349117f : 
                            -0.012525111f) : 
                         (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2006.0f ? 
                            -0.0060955137f : 
                            0.023624623f))) : 
                 (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                     (Double.isNaN(data[60 /* insured_education_level_JD */]) || !GenModel.bitSetIsInRange(32, 0, data[60]) || (data[60] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[60]) && (data[60] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[60])) ? 
                         (!Double.isNaN(data[25 /* insured_occupation_handlers-cleaners */]) && (GenModel.bitSetIsInRange(32, 0, data[25]) && (data[25] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[25])) ? 
                            -0.019594213f : 
                            0.012294615f) : 
                         (data[103 /* pclaim_severity_int */] < 14194.5f ? 
                            0.011063972f : 
                            0.039558843f)) : 
                     (Double.isNaN(data[83 /* insured_hobbies_video-games */]) || !GenModel.bitSetIsInRange(32, 0, data[83]) || (data[83] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[83]) && (data[83] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[83])) ? 
                         (Double.isNaN(data[57 /* auto_make_Volkswagen */]) || !GenModel.bitSetIsInRange(32, 0, data[57]) || (data[57] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[57]) && (data[57] < 2) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[57])) ? 
                            -0.009705268f : 
                            0.0024155206f) : 
                        0.006123563f))) : 
             (data[104 /* vclaim_severity_int */] < 126063.0f ? 
                0.011947784f : 
                0.041614734f)) : 
         (data[103 /* pclaim_severity_int */] < 10265.5f ? 
            0.031867113f : 
             (data[91 /* capital-loss */] < 12110.5f ? 
                -0.0075099375f : 
                0.026886705f)));
    return pred;
  } // constant pool size = 118B, number of visited nodes = 19, static init size = 240B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_11 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_11_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_11_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
         (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[71])) ? 
             (data[92 /* incident_severity */] < 1.5f ? 
                 (data[86 /* age */] < 25.5f ? 
                    0.0042620176f : 
                     (data[85 /* months_as_customer */] < 99.5f ? 
                         (data[85 /* months_as_customer */] < 35.0f ? 
                            -0.014917038f : 
                            -0.010637839f) : 
                         (data[85 /* months_as_customer */] < 118.5f ? 
                            0.0034463978f : 
                            -0.006994829f))) : 
                 (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                     (!Double.isNaN(data[3 /* collision_type_Side Collision */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[3])) ? 
                         (data[98 /* injury_claim */] < 6665.5f ? 
                            0.021797165f : 
                            -0.0066608237f) : 
                         (data[87 /* policy_deductable */] < 758.0f ? 
                            0.0056142933f : 
                            0.020288205f)) : 
                     (Double.isNaN(data[33 /* insured_occupation_transport-moving */]) || !GenModel.bitSetIsInRange(32, 0, data[33]) || (data[33] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[33]) && (data[33] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[33])) ? 
                         (Double.isNaN(data[14 /* incident_city_Riverwood */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (data[14] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[14])) ? 
                            -0.009606195f : 
                            -7.3554786E-4f) : 
                        0.0039578895f))) : 
             (data[105 /* iclaim_severity_int */] < 16372.5f ? 
                0.038884852f : 
                0.009321413f)) : 
         (data[88 /* policy_annual_premium */] < 1249.9186f ? 
            0.008613082f : 
             (data[100 /* vehicle_claim */] < 42601.5f ? 
                0.015192948f : 
                0.035041764f)));
    return pred;
  } // constant pool size = 91B, number of visited nodes = 16, static init size = 150B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_12 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_12_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_12_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
         (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[71])) ? 
             (data[92 /* incident_severity */] < 1.5f ? 
                 (!Double.isNaN(data[65 /* policy_csl_500/1000 */]) && (GenModel.bitSetIsInRange(32, 0, data[65]) && (data[65] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[65])) ? 
                     (data[107 /* prem_claim_int */] < 5753350.5f ? 
                        -0.0034787185f : 
                         (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2003.5f ? 
                            -0.009085174f : 
                            -0.012073831f)) : 
                     (data[85 /* months_as_customer */] < 33.5f ? 
                        0.011271587f : 
                         (Double.isNaN(data[50 /* auto_make_Honda */]) || !GenModel.bitSetIsInRange(32, 0, data[50]) || (data[50] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[50]) && (data[50] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[50])) ? 
                            -0.0061348197f : 
                            0.0050399224f))) : 
                 (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                     (!Double.isNaN(data[69 /* insured_hobbies_camping */]) && (GenModel.bitSetIsInRange(32, 0, data[69]) && (data[69] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[69])) ? 
                        -0.013920796f : 
                         (Double.isNaN(data[97]) || data[97 /* total_claim_amount */] < 75546.5f ? 
                            0.014638667f : 
                            -6.8866863E-4f)) : 
                     (Double.isNaN(data[93]) || data[93 /* incident_hour_of_the_day */] < 22.5f ? 
                         (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 3.2038876E11f ? 
                            -0.008358895f : 
                            0.001745671f) : 
                        0.004148982f))) : 
             (data[104 /* vclaim_severity_int */] < 126063.0f ? 
                0.0077514215f : 
                0.035634216f)) : 
         (data[95 /* bodily_injuries */] < 0.5f ? 
            0.026634177f : 
             (data[91 /* capital-loss */] < 12110.5f ? 
                -0.005631681f : 
                0.019999007f)));
    return pred;
  } // constant pool size = 91B, number of visited nodes = 16, static init size = 150B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_13 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_13_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_13_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
         (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[71])) ? 
             (data[92 /* incident_severity */] < 1.5f ? 
                 (Double.isNaN(data[96]) || data[96 /* witnesses */] < 1.5f ? 
                     (Double.isNaN(data[61 /* insured_education_level_MD */]) || !GenModel.bitSetIsInRange(32, 0, data[61]) || (data[61] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[61]) && (data[61] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[61])) ? 
                         (Double.isNaN(data[97]) || data[97 /* total_claim_amount */] < 84421.5f ? 
                            -0.009631959f : 
                            -0.0017888013f) : 
                         (data[98 /* injury_claim */] < 3016.5f ? 
                            0.016643086f : 
                            -0.010038181f)) : 
                     (Double.isNaN(data[2 /* collision_type_Rear Collision */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[2])) ? 
                         (data[93 /* incident_hour_of_the_day */] < 8.5f ? 
                            -8.049619E-4f : 
                            -0.009828587f) : 
                         (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2006.0f ? 
                            -0.004447797f : 
                            0.022360211f))) : 
                 (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                     (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 21234.5f ? 
                         (Double.isNaN(data[64 /* policy_csl_250/500 */]) || !GenModel.bitSetIsInRange(32, 0, data[64]) || (data[64] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[64]) && (data[64] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[64])) ? 
                            -0.0034838165f : 
                            0.016161598f) : 
                         (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2011.5f ? 
                            0.011190853f : 
                            0.04695006f)) : 
                     (Double.isNaN(data[83 /* insured_hobbies_video-games */]) || !GenModel.bitSetIsInRange(32, 0, data[83]) || (data[83] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[83]) && (data[83] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[83])) ? 
                         (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 3.2038876E11f ? 
                            -0.0074254475f : 
                            0.002935784f) : 
                        0.006628112f))) : 
             (data[105 /* iclaim_severity_int */] < 16372.5f ? 
                0.03338474f : 
                0.005662335f)) : 
         (!Double.isNaN(data[39 /* incident_state_SC */]) && (GenModel.bitSetIsInRange(32, 0, data[39]) && (data[39] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[39])) ? 
            0.0024685531f : 
             (data[85 /* months_as_customer */] < 233.5f ? 
                0.010229951f : 
                0.03044486f)));
    return pred;
  } // constant pool size = 113B, number of visited nodes = 19, static init size = 210B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_14 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_14_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_14_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
         (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 3.22209153E11f ? 
             (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[71])) ? 
                 (Double.isNaN(data[99]) || data[99 /* property_claim */] < 18400.5f ? 
                     (Double.isNaN(data[103]) || data[103 /* pclaim_severity_int */] < 30396.5f ? 
                         (data[92 /* incident_severity */] < 1.5f ? 
                            -0.005134566f : 
                            0.0018227019f) : 
                         (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 1.17086416E8f ? 
                            -0.0074343276f : 
                            -0.027176484f)) : 
                    0.021115342f) : 
                0.016209947f) : 
             (data[100 /* vehicle_claim */] < 39039.0f ? 
                0.039613068f : 
                 (data[85 /* months_as_customer */] < 130.0f ? 
                    0.022148585f : 
                     (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1313.3115f ? 
                        -0.011076245f : 
                        0.010742503f)))) : 
         (data[97 /* total_claim_amount */] < 56277.0f ? 
            0.022823537f : 
             (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 8.5557784E7f ? 
                -0.005940494f : 
                0.021682724f)));
    return pred;
  } // constant pool size = 60B, number of visited nodes = 12, static init size = 60B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_15 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_15_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_15_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
         (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[71])) ? 
             (data[92 /* incident_severity */] < 1.5f ? 
                 (Double.isNaN(data[45 /* auto_make_Audi */]) || !GenModel.bitSetIsInRange(32, 0, data[45]) || (data[45] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[45]) && (data[45] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[45])) ? 
                     (Double.isNaN(data[7 /* insured_relationship_own-child */]) || !GenModel.bitSetIsInRange(32, 0, data[7]) || (data[7] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[7])) ? 
                         (Double.isNaN(data[84 /* insured_hobbies_yachting */]) || !GenModel.bitSetIsInRange(32, 0, data[84]) || (data[84] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[84]) && (data[84] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[84])) ? 
                            -0.0067177955f : 
                            0.0048261057f) : 
                         (data[99 /* property_claim */] < 739.5f ? 
                            0.014627418f : 
                            -0.0046561845f)) : 
                    0.00408545f) : 
                 (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                     (Double.isNaN(data[60 /* insured_education_level_JD */]) || !GenModel.bitSetIsInRange(32, 0, data[60]) || (data[60] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[60]) && (data[60] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[60])) ? 
                         (!Double.isNaN(data[25 /* insured_occupation_handlers-cleaners */]) && (GenModel.bitSetIsInRange(32, 0, data[25]) && (data[25] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[25])) ? 
                            -0.01991077f : 
                            0.0077017476f) : 
                         (!Double.isNaN(data[2 /* collision_type_Rear Collision */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 2) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[2])) ? 
                            0.007360365f : 
                            0.03324922f)) : 
                     (Double.isNaN(data[33 /* insured_occupation_transport-moving */]) || !GenModel.bitSetIsInRange(32, 0, data[33]) || (data[33] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[33]) && (data[33] < 2) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[33])) ? 
                         (Double.isNaN(data[57 /* auto_make_Volkswagen */]) || !GenModel.bitSetIsInRange(32, 0, data[57]) || (data[57] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[57]) && (data[57] < 2) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[57])) ? 
                            -0.006927426f : 
                            0.0059816954f) : 
                        0.0048576724f))) : 
             (data[104 /* vclaim_severity_int */] < 126063.0f ? 
                0.0028484822f : 
                0.028992508f)) : 
         (Double.isNaN(data[101]) || data[101 /* auto_year */] < 2008.5f ? 
             (Double.isNaN(data[99]) || data[99 /* property_claim */] < 8750.5f ? 
                0.0225868f : 
                0.004849593f) : 
            -0.0023345435f));
    return pred;
  } // constant pool size = 116B, number of visited nodes = 16, static init size = 300B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_16 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_16_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_16_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 2.50303709E11f ? 
         (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1385.4912f ? 
             (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[71])) ? 
                 (Double.isNaN(data[84 /* insured_hobbies_yachting */]) || !GenModel.bitSetIsInRange(32, 0, data[84]) || (data[84] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[84]) && (data[84] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[84])) ? 
                     (Double.isNaN(data[90]) || data[90 /* capital-gains */] < 52488.5f ? 
                         (data[87 /* policy_deductable */] < 758.0f ? 
                            -0.0042808317f : 
                            0.003843904f) : 
                         (Double.isNaN(data[90]) || data[90 /* capital-gains */] < 72322.5f ? 
                            -0.009375639f : 
                            0.012456072f)) : 
                    0.01749166f) : 
                0.023704354f) : 
             (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1535.4979f ? 
                 (data[107 /* prem_claim_int */] < 7.78364E7f ? 
                     (Double.isNaN(data[64 /* policy_csl_250/500 */]) || !GenModel.bitSetIsInRange(32, 0, data[64]) || (data[64] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[64]) && (data[64] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[64])) ? 
                         (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 33638.0f ? 
                            -0.0101200305f : 
                            -1.9923555E-4f) : 
                        0.011462189f) : 
                     (data[98 /* injury_claim */] < 5965.5f ? 
                        -0.03852403f : 
                         (Double.isNaN(data[36 /* incident_state_NY */]) || !GenModel.bitSetIsInRange(32, 0, data[36]) || (data[36] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[36]) && (data[36] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[36])) ? 
                            -0.018408993f : 
                            -0.0013293073f))) : 
                 (data[102 /* policy_bind_year */] < 1993.5f ? 
                    -0.012547801f : 
                     (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 122327.5f ? 
                         (Double.isNaN(data[103]) || data[103 /* pclaim_severity_int */] < 12116.5f ? 
                            -0.0015772313f : 
                            0.02498262f) : 
                         (Double.isNaN(data[93]) || data[93 /* incident_hour_of_the_day */] < 11.0f ? 
                            5.0224585E-4f : 
                            -0.0166809f))))) : 
         (!Double.isNaN(data[16 /* police_report_available_YES */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && (data[16] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[16])) ? 
            -0.008314043f : 
             (data[104 /* vclaim_severity_int */] < 60528.0f ? 
                -0.0031765553f : 
                 (data[88 /* policy_annual_premium */] < 1100.8579f ? 
                    -0.0016876413f : 
                     (data[99 /* property_claim */] < 6083.5f ? 
                        0.008057475f : 
                         (data[102 /* policy_bind_year */] < 1998.0f ? 
                            0.01843885f : 
                            0.03812477f))))));
    return pred;
  } // constant pool size = 115B, number of visited nodes = 22, static init size = 150B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_17 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_17_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_17_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
         (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 3.22209153E11f ? 
             (Double.isNaN(data[99]) || data[99 /* property_claim */] < 18400.5f ? 
                 (Double.isNaN(data[64 /* policy_csl_250/500 */]) || !GenModel.bitSetIsInRange(32, 0, data[64]) || (data[64] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[64]) && (data[64] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[64])) ? 
                     (data[88 /* policy_annual_premium */] < 963.00903f ? 
                         (Double.isNaN(data[0 /* policy_state_IN */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (data[0] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[0])) ? 
                            0.0029116177f : 
                            0.026744653f) : 
                         (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1749.4316f ? 
                            -0.005430636f : 
                            0.016941156f)) : 
                     (Double.isNaN(data[2 /* collision_type_Rear Collision */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[2])) ? 
                         (Double.isNaN(data[101]) || data[101 /* auto_year */] < 2011.5f ? 
                            1.6319621E-4f : 
                            -0.012693339f) : 
                         (Double.isNaN(data[59 /* insured_education_level_High School */]) || !GenModel.bitSetIsInRange(32, 0, data[59]) || (data[59] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[59]) && (data[59] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[59])) ? 
                            0.005920803f : 
                            0.035646822f))) : 
                0.018665394f) : 
             (data[100 /* vehicle_claim */] < 39039.0f ? 
                0.034004975f : 
                 (data[101 /* auto_year */] < 2001.5f ? 
                    -0.012969075f : 
                     (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 107738.5f ? 
                        0.017334523f : 
                        -0.0055911457f)))) : 
         (data[86 /* age */] < 39.0f ? 
            0.020872604f : 
             (data[104 /* vclaim_severity_int */] < 82391.5f ? 
                0.016201112f : 
                -0.004609212f)));
    return pred;
  } // constant pool size = 87B, number of visited nodes = 15, static init size = 150B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_18 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_18_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_18_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[96 /* witnesses */] < 0.5f ? 
         (Double.isNaN(data[6 /* insured_relationship_other-relative */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[6])) ? 
             (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 4339.5f ? 
                 (Double.isNaN(data[98]) || data[98 /* injury_claim */] < 10055.5f ? 
                     (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2007.5f ? 
                         (Double.isNaN(data[105]) || data[105 /* iclaim_severity_int */] < 12442.5f ? 
                            -0.008857195f : 
                            0.0076309186f) : 
                        -0.022335602f) : 
                    -0.025129277f) : 
                 (data[87 /* policy_deductable */] < 752.0f ? 
                     (data[93 /* incident_hour_of_the_day */] < 10.0f ? 
                        -0.015515496f : 
                        -0.001364358f) : 
                     (Double.isNaN(data[42 /* authorities_contacted_Fire */]) || !GenModel.bitSetIsInRange(32, 0, data[42]) || (data[42] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[42]) && (data[42] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[42])) ? 
                         (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 83514.5f ? 
                            0.0049230657f : 
                            -0.0109414905f) : 
                        0.019585673f))) : 
             (Double.isNaN(data[86]) || data[86 /* age */] < 42.0f ? 
                 (data[104 /* vclaim_severity_int */] < 71339.5f ? 
                    -0.014916058f : 
                    0.0022565203f) : 
                0.031185843f)) : 
         (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[71])) ? 
             (Double.isNaN(data[2 /* collision_type_Rear Collision */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[2])) ? 
                 (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 4.44175319E11f ? 
                     (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[70])) ? 
                         (Double.isNaN(data[99]) || data[99 /* property_claim */] < 9616.5f ? 
                            -4.5663727E-4f : 
                            -0.0067186398f) : 
                         (data[88 /* policy_annual_premium */] < 1249.4894f ? 
                            -9.156072E-4f : 
                            0.022899166f)) : 
                    0.017526269f) : 
                 (data[99 /* property_claim */] < 7397.5f ? 
                     (Double.isNaN(data[64 /* policy_csl_250/500 */]) || !GenModel.bitSetIsInRange(32, 0, data[64]) || (data[64] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[64]) && (data[64] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[64])) ? 
                         (data[103 /* pclaim_severity_int */] < 12895.5f ? 
                            -0.022811176f : 
                            -0.0032826543f) : 
                         (Double.isNaN(data[87]) || data[87 /* policy_deductable */] < 1485.0f ? 
                            -0.0013329844f : 
                            0.031531997f)) : 
                     (!Double.isNaN(data[63 /* insured_education_level_PhD */]) && (GenModel.bitSetIsInRange(32, 0, data[63]) && (data[63] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[63])) ? 
                        -0.009491225f : 
                         (data[101 /* auto_year */] < 2005.5f ? 
                            0.0071310466f : 
                            0.027753875f)))) : 
            0.022330914f));
    return pred;
  } // constant pool size = 133B, number of visited nodes = 24, static init size = 210B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_19 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_19_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_19_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[96 /* witnesses */] < 0.5f ? 
         (Double.isNaN(data[6 /* insured_relationship_other-relative */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[6])) ? 
             (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 12151.5f ? 
                 (Double.isNaN(data[105]) || data[105 /* iclaim_severity_int */] < 20026.5f ? 
                     (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2007.5f ? 
                         (Double.isNaN(data[105]) || data[105 /* iclaim_severity_int */] < 12500.5f ? 
                            -0.00787807f : 
                            0.010066447f) : 
                        -0.018305037f) : 
                    -0.023908388f) : 
                 (!Double.isNaN(data[65 /* policy_csl_500/1000 */]) && (GenModel.bitSetIsInRange(32, 0, data[65]) && (data[65] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[65])) ? 
                     (data[90 /* capital-gains */] < 37727.0f ? 
                        -0.018710615f : 
                        -5.746599E-5f) : 
                     (data[85 /* months_as_customer */] < 83.5f ? 
                        0.019985858f : 
                         (data[101 /* auto_year */] < 1999.5f ? 
                            0.015842902f : 
                            -0.0059006526f)))) : 
             (Double.isNaN(data[86]) || data[86 /* age */] < 42.0f ? 
                 (data[104 /* vclaim_severity_int */] < 71339.5f ? 
                    -0.013424451f : 
                    0.0020308685f) : 
                0.028067257f)) : 
         (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[71])) ? 
             (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 3.29490694E11f ? 
                 (Double.isNaN(data[84 /* insured_hobbies_yachting */]) || !GenModel.bitSetIsInRange(32, 0, data[84]) || (data[84] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[84]) && (data[84] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[84])) ? 
                     (Double.isNaN(data[37 /* incident_state_OH */]) || !GenModel.bitSetIsInRange(32, 0, data[37]) || (data[37] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[37]) && (data[37] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[37])) ? 
                         (!Double.isNaN(data[66 /* insured_hobbies_basketball */]) && (GenModel.bitSetIsInRange(32, 0, data[66]) && (data[66] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[66])) ? 
                            -0.012806124f : 
                            -7.163588E-4f) : 
                        0.01636643f) : 
                     (Double.isNaN(data[99]) || data[99 /* property_claim */] < 8506.5f ? 
                        -1.9701922E-4f : 
                        0.028860236f)) : 
                 (data[100 /* vehicle_claim */] < 45094.0f ? 
                    0.033179533f : 
                     (data[88 /* policy_annual_premium */] < 1188.0189f ? 
                        -0.0136891585f : 
                        0.011453704f))) : 
            0.02009782f));
    return pred;
  } // constant pool size = 112B, number of visited nodes = 20, static init size = 180B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_20 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_20_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_20_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
         (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1831.6196f ? 
             (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 1.30116448E8f ? 
                 (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 4.73301549E11f ? 
                     (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 81589.5f ? 
                         (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[71])) ? 
                            -7.2318234E-4f : 
                            0.012940062f) : 
                        -0.022743324f) : 
                    0.021012416f) : 
                -0.019939879f) : 
            0.017252326f) : 
         (data[105 /* iclaim_severity_int */] < 5999.5f ? 
            -0.0038855055f : 
             (data[98 /* injury_claim */] < 6794.5f ? 
                0.021864751f : 
                0.0047183777f)));
    return pred;
  } // constant pool size = 44B, number of visited nodes = 8, static init size = 60B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_21 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_21_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_21_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[100 /* vehicle_claim */] < 34769.5f ? 
         (Double.isNaN(data[101]) || data[101 /* auto_year */] < 2007.5f ? 
             (Double.isNaN(data[101]) || data[101 /* auto_year */] < 2006.5f ? 
                 (Double.isNaN(data[9 /* insured_relationship_wife */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[9])) ? 
                     (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2006.5f ? 
                         (data[88 /* policy_annual_premium */] < 1113.5641f ? 
                            0.008148948f : 
                            -0.004792849f) : 
                         (Double.isNaN(data[105]) || data[105 /* iclaim_severity_int */] < 8142.5f ? 
                            -0.0044521145f : 
                            -0.024499945f)) : 
                     (data[100 /* vehicle_claim */] < 4403.5f ? 
                        -0.0068332315f : 
                        0.016363645f)) : 
                0.019969618f) : 
             (data[95 /* bodily_injuries */] < 0.5f ? 
                 (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 4.3114056E7f ? 
                     (data[96 /* witnesses */] < 1.5f ? 
                        -0.0053118737f : 
                        -0.009063399f) : 
                    -0.026511298f) : 
                 (data[88 /* policy_annual_premium */] < 1178.8654f ? 
                     (data[99 /* property_claim */] < 921.5f ? 
                        -0.0069985394f : 
                        -0.016982077f) : 
                     (Double.isNaN(data[106]) || data[106 /* tclaim_severity_int */] < 42320.5f ? 
                         (Double.isNaN(data[90]) || data[90 /* capital-gains */] < 39150.5f ? 
                            -3.9381578E-4f : 
                            -0.007454523f) : 
                        0.016458623f)))) : 
         (data[97 /* total_claim_amount */] < 55492.5f ? 
             (!Double.isNaN(data[65 /* policy_csl_500/1000 */]) && (GenModel.bitSetIsInRange(32, 0, data[65]) && (data[65] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[65])) ? 
                 (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 75883.5f ? 
                    -0.013839863f : 
                    0.0030508672f) : 
                 (data[101 /* auto_year */] < 2000.5f ? 
                    0.036102172f : 
                     (Double.isNaN(data[99]) || data[99 /* property_claim */] < 5861.5f ? 
                         (Double.isNaN(data[103]) || data[103 /* pclaim_severity_int */] < 9881.5f ? 
                            0.009375353f : 
                            -0.012699436f) : 
                         (data[88 /* policy_annual_premium */] < 1208.9209f ? 
                            0.04135682f : 
                            0.010683571f)))) : 
             (data[105 /* iclaim_severity_int */] < 5249.5f ? 
                -0.020937527f : 
                 (Double.isNaN(data[8 /* insured_relationship_unmarried */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[8])) ? 
                     (Double.isNaN(data[6 /* insured_relationship_other-relative */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[6])) ? 
                         (data[91 /* capital-loss */] < 27775.5f ? 
                            -0.008062517f : 
                            0.0012418148f) : 
                         (Double.isNaN(data[99]) || data[99 /* property_claim */] < 15534.5f ? 
                            0.010810046f : 
                            -0.02013542f)) : 
                     (!Double.isNaN(data[17 /* police_report_available_undocumented */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && (data[17] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[17])) ? 
                        -0.009964725f : 
                         (!Double.isNaN(data[65 /* policy_csl_500/1000 */]) && (GenModel.bitSetIsInRange(32, 0, data[65]) && (data[65] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[65])) ? 
                            2.1736954E-4f : 
                            0.029268272f))))));
    return pred;
  } // constant pool size = 148B, number of visited nodes = 29, static init size = 180B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_22 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_22_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_22_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[99]) || data[99 /* property_claim */] < 18770.5f ? 
         (!Double.isNaN(data[82 /* insured_hobbies_sleeping */]) && (GenModel.bitSetIsInRange(32, 0, data[82]) && (data[82] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[82])) ? 
             (data[93 /* incident_hour_of_the_day */] < 12.0f ? 
                0.005363708f : 
                -0.02253942f) : 
             (Double.isNaN(data[98]) || data[98 /* injury_claim */] < 9803.5f ? 
                 (data[100 /* vehicle_claim */] < 35468.5f ? 
                     (Double.isNaN(data[52 /* auto_make_Mercedes */]) || !GenModel.bitSetIsInRange(32, 0, data[52]) || (data[52] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[52]) && (data[52] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[52])) ? 
                         (!Double.isNaN(data[2 /* collision_type_Rear Collision */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[2])) ? 
                            -0.011246294f : 
                            -0.0015958762f) : 
                        0.016498152f) : 
                     (data[96 /* witnesses */] < 0.5f ? 
                         (Double.isNaN(data[99]) || data[99 /* property_claim */] < 11734.5f ? 
                            -0.0014113738f : 
                            -0.017492702f) : 
                         (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 121967.5f ? 
                            0.011994624f : 
                            -0.0018726905f))) : 
                 (Double.isNaN(data[95]) || data[95 /* bodily_injuries */] < 1.5f ? 
                     (data[96 /* witnesses */] < 0.5f ? 
                         (Double.isNaN(data[106]) || data[106 /* tclaim_severity_int */] < 149920.5f ? 
                            0.008515884f : 
                            -0.011996083f) : 
                         (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 3.23760947E11f ? 
                            -0.01114078f : 
                            0.0036437872f)) : 
                     (data[104 /* vclaim_severity_int */] < 88800.5f ? 
                         (!Double.isNaN(data[1 /* policy_state_OH */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                            -0.021503115f : 
                            -2.4797693E-5f) : 
                         (data[105 /* iclaim_severity_int */] < 28225.5f ? 
                            0.029887011f : 
                            0.006495401f))))) : 
        0.016191667f);
    return pred;
  } // constant pool size = 90B, number of visited nodes = 17, static init size = 120B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_23 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_23_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_23_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
         (Double.isNaN(data[0 /* policy_state_IN */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (data[0] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[0])) ? 
             (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 1.13651472E8f ? 
                 (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 1.01384304E8f ? 
                     (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1410.8209f ? 
                         (data[87 /* policy_deductable */] < 758.0f ? 
                            -0.006738922f : 
                            0.002631471f) : 
                         (Double.isNaN(data[90]) || data[90 /* capital-gains */] < 53325.5f ? 
                            -0.0110559715f : 
                            0.006519314f)) : 
                     (data[99 /* property_claim */] < 13314.5f ? 
                        -0.0016353278f : 
                        0.029820403f)) : 
                 (!Double.isNaN(data[17 /* police_report_available_undocumented */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && (data[17] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[17])) ? 
                    -0.022716071f : 
                     (data[99 /* property_claim */] < 12945.5f ? 
                        0.0056948764f : 
                        -0.011702019f))) : 
             (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 3.18568366E11f ? 
                 (data[88 /* policy_annual_premium */] < 960.83844f ? 
                    0.017226493f : 
                     (Double.isNaN(data[84 /* insured_hobbies_yachting */]) || !GenModel.bitSetIsInRange(32, 0, data[84]) || (data[84] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[84]) && (data[84] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[84])) ? 
                         (data[88 /* policy_annual_premium */] < 1051.4977f ? 
                            -0.012782058f : 
                            3.77561E-4f) : 
                        0.015797447f)) : 
                0.020322142f)) : 
         (!Double.isNaN(data[39 /* incident_state_SC */]) && (GenModel.bitSetIsInRange(32, 0, data[39]) && (data[39] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[39])) ? 
            -0.0024937538f : 
             (Double.isNaN(data[85]) || data[85 /* months_as_customer */] < 241.5f ? 
                0.0046956744f : 
                0.02145529f)));
    return pred;
  } // constant pool size = 91B, number of visited nodes = 16, static init size = 150B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_24 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_24_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_24_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[96 /* witnesses */] < 0.5f ? 
         (Double.isNaN(data[6 /* insured_relationship_other-relative */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[6])) ? 
             (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 4339.5f ? 
                 (Double.isNaN(data[1 /* policy_state_OH */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
                     (data[103 /* pclaim_severity_int */] < 10226.5f ? 
                         (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 4.6049556E7f ? 
                            -0.0068983887f : 
                            -1.4942704E-4f) : 
                         (Double.isNaN(data[0 /* policy_state_IN */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (data[0] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[0])) ? 
                            -0.03187287f : 
                            -0.008192101f)) : 
                     (data[86 /* age */] < 31.5f ? 
                        -0.0082330825f : 
                        0.0058960356f)) : 
                 (Double.isNaN(data[64 /* policy_csl_250/500 */]) || !GenModel.bitSetIsInRange(32, 0, data[64]) || (data[64] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[64]) && (data[64] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[64])) ? 
                     (Double.isNaN(data[34 /* property_damage_YES */]) || !GenModel.bitSetIsInRange(32, 0, data[34]) || (data[34] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[34]) && (data[34] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[34])) ? 
                         (!Double.isNaN(data[1 /* policy_state_OH */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                            -0.016787855f : 
                            -0.0027167476f) : 
                        0.006471636f) : 
                     (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 1.5f ? 
                        -0.0017527675f : 
                        0.016445277f))) : 
             (Double.isNaN(data[86]) || data[86 /* age */] < 42.0f ? 
                 (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 72548.5f ? 
                    -0.01148976f : 
                    0.002419594f) : 
                0.023397822f)) : 
         (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[71])) ? 
             (Double.isNaN(data[2 /* collision_type_Rear Collision */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 2) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[2])) ? 
                 (!Double.isNaN(data[11 /* incident_city_Hillsdale */]) && (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 2) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[11])) ? 
                     (Double.isNaN(data[103]) || data[103 /* pclaim_severity_int */] < 24841.0f ? 
                         (data[86 /* age */] < 35.5f ? 
                            -0.013371018f : 
                            0.0032071406f) : 
                        -0.026536165f) : 
                     (Double.isNaN(data[33 /* insured_occupation_transport-moving */]) || !GenModel.bitSetIsInRange(32, 0, data[33]) || (data[33] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[33]) && (data[33] < 2) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[33])) ? 
                         (Double.isNaN(data[93]) || data[93 /* incident_hour_of_the_day */] < 20.5f ? 
                            5.3924124E-4f : 
                            -0.010832583f) : 
                         (data[100 /* vehicle_claim */] < 42299.5f ? 
                            -0.002987026f : 
                            0.028845495f))) : 
                 (data[97 /* total_claim_amount */] < 53025.5f ? 
                     (Double.isNaN(data[101]) || data[101 /* auto_year */] < 2004.5f ? 
                         (data[86 /* age */] < 34.5f ? 
                            0.014725353f : 
                            -0.009374815f) : 
                         (data[98 /* injury_claim */] < 5340.5f ? 
                            -0.0064022276f : 
                            -0.026647486f)) : 
                     (data[101 /* auto_year */] < 2003.5f ? 
                         (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2008.5f ? 
                            0.005819435f : 
                            -0.020162426f) : 
                         (!Double.isNaN(data[65 /* policy_csl_500/1000 */]) && (GenModel.bitSetIsInRange(32, 0, data[65]) && (data[65] < 2) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[65])) ? 
                            -0.010303064f : 
                            0.023435555f)))) : 
            0.016436797f));
    return pred;
  } // constant pool size = 173B, number of visited nodes = 29, static init size = 330B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {1, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_25 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_25_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_25_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 4.72846467E11f ? 
         (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 81915.0f ? 
             (data[85 /* months_as_customer */] < 16.5f ? 
                 (data[85 /* months_as_customer */] < 8.5f ? 
                    -0.0044562714f : 
                    0.027814325f) : 
                 (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[71])) ? 
                     (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1744.9163f ? 
                         (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 1.29065496E8f ? 
                            -6.286151E-4f : 
                            -0.0144800665f) : 
                        0.010946103f) : 
                    0.012874338f)) : 
            -0.01989484f) : 
        0.013081765f);
    return pred;
  } // constant pool size = 35B, number of visited nodes = 7, static init size = 30B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_26 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_26_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_26_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[99]) || data[99 /* property_claim */] < 18770.5f ? 
         (Double.isNaN(data[97]) || data[97 /* total_claim_amount */] < 99671.5f ? 
             (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 4.73301549E11f ? 
                 (Double.isNaN(data[43 /* authorities_contacted_Other */]) || !GenModel.bitSetIsInRange(32, 0, data[43]) || (data[43] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[43]) && (data[43] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[43])) ? 
                     (Double.isNaN(data[64 /* policy_csl_250/500 */]) || !GenModel.bitSetIsInRange(32, 0, data[64]) || (data[64] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[64]) && (data[64] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[64])) ? 
                         (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1744.9163f ? 
                            -0.003139869f : 
                            0.01577117f) : 
                         (Double.isNaN(data[2 /* collision_type_Rear Collision */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[2])) ? 
                            -0.0011243948f : 
                            0.010576948f)) : 
                     (Double.isNaN(data[56 /* auto_make_Toyota */]) || !GenModel.bitSetIsInRange(32, 0, data[56]) || (data[56] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[56]) && (data[56] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[56])) ? 
                         (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 110430.5f ? 
                            0.006364403f : 
                            -0.0074677714f) : 
                        0.026984118f)) : 
                0.013781194f) : 
            -0.014983894f) : 
        0.014304954f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 9, static init size = 120B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_27 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_27_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_27_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[98]) || data[98 /* injury_claim */] < 9824.5f ? 
         (Double.isNaN(data[98]) || data[98 /* injury_claim */] < 5948.5f ? 
             (Double.isNaN(data[52 /* auto_make_Mercedes */]) || !GenModel.bitSetIsInRange(32, 0, data[52]) || (data[52] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[52]) && (data[52] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[52])) ? 
                 (Double.isNaN(data[99]) || data[99 /* property_claim */] < 11280.5f ? 
                     (Double.isNaN(data[99]) || data[99 /* property_claim */] < 7138.5f ? 
                         (Double.isNaN(data[97]) || data[97 /* total_claim_amount */] < 56108.5f ? 
                            -0.0018037345f : 
                            -0.020103289f) : 
                         (Double.isNaN(data[85]) || data[85 /* months_as_customer */] < 289.0f ? 
                            0.010523231f : 
                            -0.011281223f)) : 
                     (data[85 /* months_as_customer */] < 176.0f ? 
                        -0.0021405995f : 
                        -0.028928788f)) : 
                0.01785778f) : 
             (data[107 /* prem_claim_int */] < 5.5205352E7f ? 
                 (Double.isNaN(data[106]) || data[106 /* tclaim_severity_int */] < 96933.5f ? 
                    -0.014755845f : 
                    0.0015157782f) : 
                 (data[107 /* prem_claim_int */] < 5.9805912E7f ? 
                    0.030439697f : 
                     (data[101 /* auto_year */] < 1996.5f ? 
                         (data[98 /* injury_claim */] < 7399.5f ? 
                            0.00506971f : 
                            -0.021543087f) : 
                         (!Double.isNaN(data[41 /* incident_state_WV */]) && (GenModel.bitSetIsInRange(32, 0, data[41]) && (data[41] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[41])) ? 
                            -0.0060265413f : 
                            0.008271983f))))) : 
         (data[91 /* capital-loss */] < 7160.5f ? 
             (!Double.isNaN(data[42 /* authorities_contacted_Fire */]) && (GenModel.bitSetIsInRange(32, 0, data[42]) && (data[42] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[42])) ? 
                 (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 9.038256E7f ? 
                    -0.02637313f : 
                    -0.0017807421f) : 
                 (data[98 /* injury_claim */] < 12879.0f ? 
                     (data[102 /* policy_bind_year */] < 1995.0f ? 
                        0.0077244886f : 
                         (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2005.5f ? 
                            -0.025804345f : 
                            -0.0014841831f)) : 
                     (data[97 /* total_claim_amount */] < 72203.5f ? 
                        0.029594818f : 
                         (data[95 /* bodily_injuries */] < 0.5f ? 
                            -0.014648252f : 
                            -8.813904E-4f)))) : 
             (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 2.85187506E11f ? 
                 (data[95 /* bodily_injuries */] < 0.5f ? 
                     (Double.isNaN(data[90]) || data[90 /* capital-gains */] < 50363.5f ? 
                         (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 59334.5f ? 
                            -0.004988553f : 
                            -0.022255847f) : 
                        0.0019190076f) : 
                     (data[102 /* policy_bind_year */] < 1995.0f ? 
                        -0.0077709835f : 
                         (!Double.isNaN(data[15 /* incident_city_Springfield */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && (data[15] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[15])) ? 
                            -0.0067321206f : 
                            0.013114193f))) : 
                0.014136617f)));
    return pred;
  } // constant pool size = 134B, number of visited nodes = 28, static init size = 120B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_28 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_28_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_28_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[69 /* insured_hobbies_camping */]) && (GenModel.bitSetIsInRange(32, 0, data[69]) && (data[69] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[69])) ? 
         (data[101 /* auto_year */] < 2005.0f ? 
            0.0027098916f : 
             (data[103 /* pclaim_severity_int */] < 11369.0f ? 
                -0.010307394f : 
                -0.01895228f)) : 
         (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 2.47573119E11f ? 
             (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 1.75525478E11f ? 
                 (data[85 /* months_as_customer */] < 16.5f ? 
                    0.011757351f : 
                     (!Double.isNaN(data[17 /* police_report_available_undocumented */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && (data[17] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[17])) ? 
                         (Double.isNaN(data[84 /* insured_hobbies_yachting */]) || !GenModel.bitSetIsInRange(32, 0, data[84]) || (data[84] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[84]) && (data[84] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[84])) ? 
                            -0.0040484373f : 
                            0.015760904f) : 
                         (!Double.isNaN(data[41 /* incident_state_WV */]) && (GenModel.bitSetIsInRange(32, 0, data[41]) && (data[41] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[41])) ? 
                            -0.0055733346f : 
                            0.0030945085f))) : 
                -0.012018611f) : 
             (data[104 /* vclaim_severity_int */] < 61438.5f ? 
                 (Double.isNaN(data[96]) || data[96 /* witnesses */] < 1.5f ? 
                    -0.0103684f : 
                    2.0430161E-4f) : 
                 (Double.isNaN(data[106]) || data[106 /* tclaim_severity_int */] < 155208.0f ? 
                     (data[90 /* capital-gains */] < 14059.5f ? 
                        0.0055761114f : 
                        0.024065597f) : 
                     (data[93 /* incident_hour_of_the_day */] < 13.5f ? 
                        -0.009374377f : 
                        0.0092069935f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 14, static init size = 120B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_29 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_29_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_29_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
         (!Double.isNaN(data[38 /* incident_state_PA */]) && (GenModel.bitSetIsInRange(32, 0, data[38]) && (data[38] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[38])) ? 
            -0.011239185f : 
             (Double.isNaN(data[99]) || data[99 /* property_claim */] < 18400.5f ? 
                 (Double.isNaN(data[0 /* policy_state_IN */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (data[0] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[0])) ? 
                     (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1417.0197f ? 
                         (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1232.5779f ? 
                            -0.0029444105f : 
                            0.003346998f) : 
                         (!Double.isNaN(data[17 /* police_report_available_undocumented */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && (data[17] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[17])) ? 
                            -0.01304022f : 
                            -0.0020326446f)) : 
                     (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 3.13107186E11f ? 
                         (!Double.isNaN(data[72 /* insured_hobbies_dancing */]) && (GenModel.bitSetIsInRange(32, 0, data[72]) && (data[72] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[72])) ? 
                            -0.01157128f : 
                            0.0024041361f) : 
                        0.01728117f)) : 
                0.017199064f)) : 
         (data[97 /* total_claim_amount */] < 56277.0f ? 
            0.014145456f : 
             (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 8.5557784E7f ? 
                -0.007767925f : 
                0.012961694f)));
    return pred;
  } // constant pool size = 71B, number of visited nodes = 11, static init size = 150B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_30 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_30_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_30_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[97 /* total_claim_amount */] < 4697.5f ? 
         (Double.isNaN(data[35 /* property_damage_undocumented */]) || !GenModel.bitSetIsInRange(32, 0, data[35]) || (data[35] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[35]) && (data[35] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[35])) ? 
             (data[91 /* capital-loss */] < 8028.5f ? 
                -0.0061851f : 
                -0.008893064f) : 
            -0.0031607552f) : 
         (data[97 /* total_claim_amount */] < 5343.5f ? 
            0.010845302f : 
             (data[96 /* witnesses */] < 0.5f ? 
                 (Double.isNaN(data[11 /* incident_city_Hillsdale */]) || !GenModel.bitSetIsInRange(32, 0, data[11]) || (data[11] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[11])) ? 
                     (Double.isNaN(data[31 /* insured_occupation_sales */]) || !GenModel.bitSetIsInRange(32, 0, data[31]) || (data[31] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[31]) && (data[31] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[31])) ? 
                         (data[86 /* age */] < 28.5f ? 
                            -0.012605464f : 
                            -0.003533247f) : 
                        0.0070562777f) : 
                     (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2000.0f ? 
                        0.01364378f : 
                        -0.0068516135f)) : 
                 (Double.isNaN(data[85]) || data[85 /* months_as_customer */] < 460.5f ? 
                     (Double.isNaN(data[89]) || data[89 /* umbrella_limit */] < 6484375.5f ? 
                         (data[86 /* age */] < 30.0f ? 
                            0.006817954f : 
                            -1.6024229E-4f) : 
                        0.015155556f) : 
                    -0.017304828f))));
    return pred;
  } // constant pool size = 65B, number of visited nodes = 12, static init size = 90B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_31 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_31_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_31_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2011.5f ? 
         (!Double.isNaN(data[38 /* incident_state_PA */]) && (GenModel.bitSetIsInRange(32, 0, data[38]) && (data[38] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[38])) ? 
            -0.010888685f : 
             (Double.isNaN(data[99]) || data[99 /* property_claim */] < 17799.5f ? 
                 (Double.isNaN(data[6 /* insured_relationship_other-relative */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[6])) ? 
                     (!Double.isNaN(data[26 /* insured_occupation_machine-op-inspct */]) && (GenModel.bitSetIsInRange(32, 0, data[26]) && (data[26] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[26])) ? 
                         (Double.isNaN(data[11 /* incident_city_Hillsdale */]) || !GenModel.bitSetIsInRange(32, 0, data[11]) || (data[11] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[11])) ? 
                            -0.012662648f : 
                            0.0029343825f) : 
                         (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[71])) ? 
                            -0.0010317852f : 
                            0.012382823f)) : 
                     (data[104 /* vclaim_severity_int */] < 54611.5f ? 
                         (Double.isNaN(data[87]) || data[87 /* policy_deductable */] < 1485.0f ? 
                            -0.00730569f : 
                            0.008548826f) : 
                         (Double.isNaN(data[98]) || data[98 /* injury_claim */] < 13998.5f ? 
                            0.013248028f : 
                            -0.009547934f))) : 
                0.01792892f)) : 
         (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 43615.5f ? 
             (Double.isNaN(data[105]) || data[105 /* iclaim_severity_int */] < 14536.5f ? 
                 (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 46010.0f ? 
                    -0.0045672623f : 
                    -0.021593235f) : 
                 (Double.isNaN(data[16 /* police_report_available_YES */]) || !GenModel.bitSetIsInRange(32, 0, data[16]) || (data[16] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[16]) && (data[16] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[16])) ? 
                    -0.0038352988f : 
                    0.023781361f)) : 
             (Double.isNaN(data[99]) || data[99 /* property_claim */] < 7117.5f ? 
                0.0064509762f : 
                0.022615295f)));
    return pred;
  } // constant pool size = 92B, number of visited nodes = 15, static init size = 180B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_32 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_32_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_32_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 81915.0f ? 
         (!Double.isNaN(data[69 /* insured_hobbies_camping */]) && (GenModel.bitSetIsInRange(32, 0, data[69]) && (data[69] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[69])) ? 
             (data[101 /* auto_year */] < 2006.5f ? 
                0.0021606085f : 
                 (data[107 /* prem_claim_int */] < 7.0750584E7f ? 
                    -0.016716486f : 
                    -0.010546685f)) : 
             (data[99 /* property_claim */] < 5362.5f ? 
                 (Double.isNaN(data[103]) || data[103 /* pclaim_severity_int */] < 9671.5f ? 
                     (Double.isNaN(data[106]) || data[106 /* tclaim_severity_int */] < 85967.5f ? 
                         (Double.isNaN(data[101]) || data[101 /* auto_year */] < 2007.5f ? 
                            0.0010388118f : 
                            -0.0048148828f) : 
                        0.016497944f) : 
                     (Double.isNaN(data[97]) || data[97 /* total_claim_amount */] < 51205.5f ? 
                         (Double.isNaN(data[101]) || data[101 /* auto_year */] < 2004.5f ? 
                            0.0034798256f : 
                            -0.014358581f) : 
                        -0.027120385f)) : 
                 (data[97 /* total_claim_amount */] < 55716.5f ? 
                     (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                         (!Double.isNaN(data[65 /* policy_csl_500/1000 */]) && (GenModel.bitSetIsInRange(32, 0, data[65]) && (data[65] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[65])) ? 
                            -3.7149686E-4f : 
                            0.020820647f) : 
                         (Double.isNaN(data[97]) || data[97 /* total_claim_amount */] < 52250.5f ? 
                            -0.0061812853f : 
                            0.010490613f)) : 
                     (data[106 /* tclaim_severity_int */] < 126763.5f ? 
                         (Double.isNaN(data[90]) || data[90 /* capital-gains */] < 17775.5f ? 
                            6.9668586E-4f : 
                            -0.00906711f) : 
                         (data[103 /* pclaim_severity_int */] < 13742.5f ? 
                            0.020229481f : 
                            7.743053E-4f))))) : 
        -0.011922901f);
    return pred;
  } // constant pool size = 80B, number of visited nodes = 17, static init size = 60B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_33 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_33_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_33_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[98]) || data[98 /* injury_claim */] < 9824.5f ? 
         (!Double.isNaN(data[66 /* insured_hobbies_basketball */]) && (GenModel.bitSetIsInRange(32, 0, data[66]) && (data[66] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[66])) ? 
            -0.013420373f : 
             (!Double.isNaN(data[82 /* insured_hobbies_sleeping */]) && (GenModel.bitSetIsInRange(32, 0, data[82]) && (data[82] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[82])) ? 
                -0.01142135f : 
                 (data[100 /* vehicle_claim */] < 35468.5f ? 
                     (data[85 /* months_as_customer */] < 132.5f ? 
                         (data[85 /* months_as_customer */] < 33.5f ? 
                            0.006620099f : 
                            -0.007962917f) : 
                         (Double.isNaN(data[61 /* insured_education_level_MD */]) || !GenModel.bitSetIsInRange(32, 0, data[61]) || (data[61] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[61]) && (data[61] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[61])) ? 
                            -7.936261E-4f : 
                            0.015739093f)) : 
                     (Double.isNaN(data[64 /* policy_csl_250/500 */]) || !GenModel.bitSetIsInRange(32, 0, data[64]) || (data[64] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[64]) && (data[64] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[64])) ? 
                         (Double.isNaN(data[45 /* auto_make_Audi */]) || !GenModel.bitSetIsInRange(32, 0, data[45]) || (data[45] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[45]) && (data[45] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[45])) ? 
                            3.596141E-4f : 
                            0.014469127f) : 
                         (data[95 /* bodily_injuries */] < 0.5f ? 
                            0.023691814f : 
                            0.0038712588f))))) : 
         (data[91 /* capital-loss */] < 7160.5f ? 
             (!Double.isNaN(data[42 /* authorities_contacted_Fire */]) && (GenModel.bitSetIsInRange(32, 0, data[42]) && (data[42] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[42])) ? 
                 (data[101 /* auto_year */] < 2001.0f ? 
                    7.092295E-4f : 
                     (data[88 /* policy_annual_premium */] < 1234.2122f ? 
                        -0.029926116f : 
                        -0.013817979f)) : 
                 (Double.isNaN(data[101]) || data[101 /* auto_year */] < 2011.5f ? 
                     (Double.isNaN(data[106]) || data[106 /* tclaim_severity_int */] < 150896.5f ? 
                         (Double.isNaN(data[96]) || data[96 /* witnesses */] < 2.5f ? 
                            0.0035069783f : 
                            -0.012522453f) : 
                        -0.014837506f) : 
                    0.007405024f)) : 
             (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1574.4404f ? 
                 (!Double.isNaN(data[7 /* insured_relationship_own-child */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[7])) ? 
                     (data[96 /* witnesses */] < 1.5f ? 
                        0.0054235714f : 
                        -0.020368878f) : 
                     (data[88 /* policy_annual_premium */] < 1012.5275f ? 
                         (data[96 /* witnesses */] < 1.5f ? 
                            -0.002226994f : 
                            0.019710362f) : 
                         (data[101 /* auto_year */] < 1998.5f ? 
                            0.010198104f : 
                            -0.003849467f))) : 
                0.01475966f)));
    return pred;
  } // constant pool size = 129B, number of visited nodes = 23, static init size = 210B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_34 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_34_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_34_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 1.13739056E8f ? 
         (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 9.6101424E7f ? 
             (!Double.isNaN(data[65 /* policy_csl_500/1000 */]) && (GenModel.bitSetIsInRange(32, 0, data[65]) && (data[65] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[65])) ? 
                 (data[88 /* policy_annual_premium */] < 1122.2195f ? 
                     (Double.isNaN(data[99]) || data[99 /* property_claim */] < 12945.5f ? 
                         (Double.isNaN(data[96]) || data[96 /* witnesses */] < 1.5f ? 
                            -0.0062719504f : 
                            0.015376206f) : 
                        -0.015709655f) : 
                     (Double.isNaN(data[85]) || data[85 /* months_as_customer */] < 361.5f ? 
                         (Double.isNaN(data[13 /* incident_city_Northbrook */]) || !GenModel.bitSetIsInRange(32, 0, data[13]) || (data[13] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[13]) && (data[13] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[13])) ? 
                            -0.0061738384f : 
                            0.004321502f) : 
                        -0.022821076f)) : 
                 (Double.isNaN(data[99]) || data[99 /* property_claim */] < 11280.5f ? 
                     (data[88 /* policy_annual_premium */] < 1157.2478f ? 
                         (Double.isNaN(data[96]) || data[96 /* witnesses */] < 2.5f ? 
                            9.613187E-4f : 
                            -0.010950896f) : 
                         (!Double.isNaN(data[13 /* incident_city_Northbrook */]) && (GenModel.bitSetIsInRange(32, 0, data[13]) && (data[13] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[13])) ? 
                            -0.0062253615f : 
                            0.006657685f)) : 
                     (Double.isNaN(data[60 /* insured_education_level_JD */]) || !GenModel.bitSetIsInRange(32, 0, data[60]) || (data[60] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[60]) && (data[60] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[60])) ? 
                         (data[91 /* capital-loss */] < 38025.5f ? 
                            -0.020170936f : 
                            -0.0022047572f) : 
                        0.014374221f))) : 
             (data[103 /* pclaim_severity_int */] < 13434.0f ? 
                 (data[102 /* policy_bind_year */] < 1997.0f ? 
                    0.0016190667f : 
                    -0.010685217f) : 
                 (data[106 /* tclaim_severity_int */] < 156513.0f ? 
                     (data[102 /* policy_bind_year */] < 2000.5f ? 
                        0.037090242f : 
                        0.016198186f) : 
                     (Double.isNaN(data[99]) || data[99 /* property_claim */] < 14618.5f ? 
                        -0.004296937f : 
                        0.016289024f)))) : 
         (!Double.isNaN(data[9 /* insured_relationship_wife */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[9])) ? 
            -0.019364534f : 
             (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1612.4965f ? 
                 (Double.isNaN(data[103]) || data[103 /* pclaim_severity_int */] < 37538.5f ? 
                     (Double.isNaN(data[93]) || data[93 /* incident_hour_of_the_day */] < 14.0f ? 
                        -0.0023518545f : 
                        -0.016463935f) : 
                    0.0020720598f) : 
                0.009262958f)));
    return pred;
  } // constant pool size = 119B, number of visited nodes = 23, static init size = 150B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_35 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_35_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_35_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
         (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1385.4912f ? 
             (Double.isNaN(data[90]) || data[90 /* capital-gains */] < 52102.5f ? 
                 (data[85 /* months_as_customer */] < 121.5f ? 
                     (Double.isNaN(data[99]) || data[99 /* property_claim */] < 8860.5f ? 
                         (Double.isNaN(data[93]) || data[93 /* incident_hour_of_the_day */] < 16.5f ? 
                            0.0056221853f : 
                            -0.013038141f) : 
                         (data[96 /* witnesses */] < 0.5f ? 
                            0.0025216506f : 
                            0.023294013f)) : 
                     (Double.isNaN(data[59 /* insured_education_level_High School */]) || !GenModel.bitSetIsInRange(32, 0, data[59]) || (data[59] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[59]) && (data[59] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[59])) ? 
                         (!Double.isNaN(data[26 /* insured_occupation_machine-op-inspct */]) && (GenModel.bitSetIsInRange(32, 0, data[26]) && (data[26] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[26])) ? 
                            -0.011886525f : 
                            -3.0166897E-4f) : 
                         (data[98 /* injury_claim */] < 8714.5f ? 
                            0.026244374f : 
                            -0.005348931f))) : 
                 (Double.isNaN(data[90]) || data[90 /* capital-gains */] < 75620.5f ? 
                     (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2003.5f ? 
                         (Double.isNaN(data[105]) || data[105 /* iclaim_severity_int */] < 29516.5f ? 
                            -0.004539763f : 
                            0.00862357f) : 
                         (Double.isNaN(data[100]) || data[100 /* vehicle_claim */] < 45741.5f ? 
                            -0.005027129f : 
                            -0.020833278f)) : 
                    0.010541324f)) : 
             (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1536.7911f ? 
                 (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 80097.5f ? 
                     (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 1.5f ? 
                         (Double.isNaN(data[7 /* insured_relationship_own-child */]) || !GenModel.bitSetIsInRange(32, 0, data[7]) || (data[7] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[7])) ? 
                            -0.0057920017f : 
                            0.0032697117f) : 
                        0.020045843f) : 
                     (data[105 /* iclaim_severity_int */] < 11930.5f ? 
                        -0.03267782f : 
                         (Double.isNaN(data[36 /* incident_state_NY */]) || !GenModel.bitSetIsInRange(32, 0, data[36]) || (data[36] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[36]) && (data[36] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[36])) ? 
                            -0.010282093f : 
                            0.006352882f))) : 
                 (Double.isNaN(data[90]) || data[90 /* capital-gains */] < 58277.5f ? 
                     (!Double.isNaN(data[1 /* policy_state_OH */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                         (!Double.isNaN(data[17 /* police_report_available_undocumented */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && (data[17] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[17])) ? 
                            -0.017182069f : 
                            -0.0019668073f) : 
                         (data[100 /* vehicle_claim */] < 34234.5f ? 
                            -0.008759882f : 
                            0.0067979945f)) : 
                    0.011552375f))) : 
         (data[86 /* age */] < 39.0f ? 
            0.013092645f : 
             (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 15631.0f ? 
                -0.0053888536f : 
                0.00864871f)));
    return pred;
  } // constant pool size = 141B, number of visited nodes = 26, static init size = 210B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_36 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_36_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_36_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 81915.0f ? 
         (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[71])) ? 
             (data[85 /* months_as_customer */] < 16.5f ? 
                0.0097034555f : 
                 (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                     (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 1.5f ? 
                         (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[70])) ? 
                            -0.002366054f : 
                            0.009542202f) : 
                         (!Double.isNaN(data[1 /* policy_state_OH */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                            -0.0021366251f : 
                            0.007234954f)) : 
                     (Double.isNaN(data[93]) || data[93 /* incident_hour_of_the_day */] < 22.5f ? 
                         (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[70])) ? 
                            -0.00418349f : 
                            0.008911058f) : 
                        0.00710565f))) : 
            0.008807704f) : 
        -0.011027016f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 9, static init size = 120B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_37 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_37_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_37_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 1.28977912E8f ? 
         (Double.isNaN(data[100]) || data[100 /* vehicle_claim */] < 66286.5f ? 
             (Double.isNaN(data[37 /* incident_state_OH */]) || !GenModel.bitSetIsInRange(32, 0, data[37]) || (data[37] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[37]) && (data[37] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[37])) ? 
                 (data[85 /* months_as_customer */] < 8.5f ? 
                    -0.013244503f : 
                     (Double.isNaN(data[6 /* insured_relationship_other-relative */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[6])) ? 
                         (!Double.isNaN(data[26 /* insured_occupation_machine-op-inspct */]) && (GenModel.bitSetIsInRange(32, 0, data[26]) && (data[26] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[26])) ? 
                            -0.005778074f : 
                            -2.3142382E-4f) : 
                         (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 1.00633488E8f ? 
                            0.0010706321f : 
                            0.019005673f))) : 
                0.010347773f) : 
            0.009008068f) : 
         (data[96 /* witnesses */] < 1.5f ? 
            -3.096359E-4f : 
            -0.014905916f));
    return pred;
  } // constant pool size = 49B, number of visited nodes = 8, static init size = 90B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_38 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_38_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_38_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2011.5f ? 
         (!Double.isNaN(data[38 /* incident_state_PA */]) && (GenModel.bitSetIsInRange(32, 0, data[38]) && (data[38] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[38])) ? 
            -0.009854005f : 
             (Double.isNaN(data[99]) || data[99 /* property_claim */] < 17799.5f ? 
                 (Double.isNaN(data[6 /* insured_relationship_other-relative */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[6])) ? 
                     (!Double.isNaN(data[26 /* insured_occupation_machine-op-inspct */]) && (GenModel.bitSetIsInRange(32, 0, data[26]) && (data[26] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[26])) ? 
                         (Double.isNaN(data[11 /* incident_city_Hillsdale */]) || !GenModel.bitSetIsInRange(32, 0, data[11]) || (data[11] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[11])) ? 
                            -0.009907744f : 
                            0.0032225267f) : 
                         (Double.isNaN(data[90]) || data[90 /* capital-gains */] < 77188.5f ? 
                            -3.359428E-4f : 
                            -0.0131475115f)) : 
                     (Double.isNaN(data[26 /* insured_occupation_machine-op-inspct */]) || !GenModel.bitSetIsInRange(32, 0, data[26]) || (data[26] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[26]) && (data[26] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[26])) ? 
                         (data[106 /* tclaim_severity_int */] < 68932.5f ? 
                            -0.0035619896f : 
                            0.0055025658f) : 
                        0.016977994f)) : 
                0.0150473965f)) : 
         (!Double.isNaN(data[42 /* authorities_contacted_Fire */]) && (GenModel.bitSetIsInRange(32, 0, data[42]) && (data[42] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[42])) ? 
            -0.00972142f : 
             (Double.isNaN(data[99]) || data[99 /* property_claim */] < 11188.5f ? 
                 (data[100 /* vehicle_claim */] < 27977.0f ? 
                    -0.004340707f : 
                     (data[90 /* capital-gains */] < 26362.5f ? 
                        0.031114452f : 
                         (data[90 /* capital-gains */] < 51728.5f ? 
                            0.001304613f : 
                            0.014916027f))) : 
                -0.008405399f)));
    return pred;
  } // constant pool size = 88B, number of visited nodes = 14, static init size = 180B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_39 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_39_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_39_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[69 /* insured_hobbies_camping */]) && (GenModel.bitSetIsInRange(32, 0, data[69]) && (data[69] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[69])) ? 
         (data[99 /* property_claim */] < 6056.5f ? 
            0.004183135f : 
             (data[107 /* prem_claim_int */] < 7.1522456E7f ? 
                -0.017010318f : 
                -0.007900387f)) : 
         (Double.isNaN(data[0 /* policy_state_IN */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (data[0] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[0])) ? 
             (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 1.13651472E8f ? 
                 (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 9.7003176E7f ? 
                     (data[87 /* policy_deductable */] < 758.0f ? 
                         (Double.isNaN(data[97]) || data[97 /* total_claim_amount */] < 58519.5f ? 
                            6.2803575E-4f : 
                            -0.012311311f) : 
                         (Double.isNaN(data[86]) || data[86 /* age */] < 55.5f ? 
                            -1.604671E-5f : 
                            0.014902152f)) : 
                     (data[102 /* policy_bind_year */] < 2001.5f ? 
                         (data[97 /* total_claim_amount */] < 76154.5f ? 
                            0.008492943f : 
                            0.024282968f) : 
                         (data[97 /* total_claim_amount */] < 77582.5f ? 
                            0.0069358028f : 
                            -0.008585305f))) : 
                 (Double.isNaN(data[95]) || data[95 /* bodily_injuries */] < 1.5f ? 
                     (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                        -0.01973176f : 
                        -0.0021932991f) : 
                    -6.937782E-4f)) : 
             (Double.isNaN(data[100]) || data[100 /* vehicle_claim */] < 61241.0f ? 
                 (Double.isNaN(data[34 /* property_damage_YES */]) || !GenModel.bitSetIsInRange(32, 0, data[34]) || (data[34] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[34]) && (data[34] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[34])) ? 
                     (Double.isNaN(data[85]) || data[85 /* months_as_customer */] < 379.5f ? 
                         (Double.isNaN(data[97]) || data[97 /* total_claim_amount */] < 75908.5f ? 
                            0.0026506893f : 
                            -0.012179554f) : 
                        -0.013494511f) : 
                     (data[107 /* prem_claim_int */] < 5.9001776E7f ? 
                        -0.005485529f : 
                         (data[100 /* vehicle_claim */] < 44770.5f ? 
                            0.022848632f : 
                            0.0059888116f))) : 
                0.015401587f)));
    return pred;
  } // constant pool size = 97B, number of visited nodes = 20, static init size = 90B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_40 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_40_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_40_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 81915.0f ? 
         (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[71])) ? 
             (data[85 /* months_as_customer */] < 16.5f ? 
                0.008869391f : 
                 (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1757.5277f ? 
                     (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 1.29065496E8f ? 
                         (Double.isNaN(data[99]) || data[99 /* property_claim */] < 17721.5f ? 
                            -4.7818664E-4f : 
                            0.0110381115f) : 
                        -0.009673631f) : 
                    0.008277236f)) : 
            0.007783102f) : 
        -0.009687794f);
    return pred;
  } // constant pool size = 31B, number of visited nodes = 6, static init size = 30B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_41 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_41_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_41_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[99]) || data[99 /* property_claim */] < 11118.5f ? 
         (Double.isNaN(data[99]) || data[99 /* property_claim */] < 10456.5f ? 
             (Double.isNaN(data[103]) || data[103 /* pclaim_severity_int */] < 28553.0f ? 
                 (Double.isNaN(data[99]) || data[99 /* property_claim */] < 9788.5f ? 
                     (Double.isNaN(data[101]) || data[101 /* auto_year */] < 2007.5f ? 
                         (!Double.isNaN(data[25 /* insured_occupation_handlers-cleaners */]) && (GenModel.bitSetIsInRange(32, 0, data[25]) && (data[25] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[25])) ? 
                            -0.007918365f : 
                            0.0025234995f) : 
                         (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2008.5f ? 
                            -0.005008507f : 
                            0.003567246f)) : 
                    -0.0130323395f) : 
                0.015344794f) : 
             (Double.isNaN(data[35 /* property_damage_undocumented */]) || !GenModel.bitSetIsInRange(32, 0, data[35]) || (data[35] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[35]) && (data[35] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[35])) ? 
                 (data[88 /* policy_annual_premium */] < 1284.6f ? 
                    0.01023054f : 
                    -0.0057036667f) : 
                0.026127078f)) : 
         (data[97 /* total_claim_amount */] < 65247.5f ? 
             (!Double.isNaN(data[64 /* policy_csl_250/500 */]) && (GenModel.bitSetIsInRange(32, 0, data[64]) && (data[64] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[64])) ? 
                -0.017906468f : 
                 (data[102 /* policy_bind_year */] < 2002.5f ? 
                    0.0057764375f : 
                    -0.009435447f)) : 
             (Double.isNaN(data[98]) || data[98 /* injury_claim */] < 13894.0f ? 
                 (data[101 /* auto_year */] < 1996.5f ? 
                    -0.013391321f : 
                     (Double.isNaN(data[42 /* authorities_contacted_Fire */]) || !GenModel.bitSetIsInRange(32, 0, data[42]) || (data[42] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[42]) && (data[42] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[42])) ? 
                         (data[96 /* witnesses */] < 1.5f ? 
                            -0.008474193f : 
                            0.009001627f) : 
                        0.020849204f)) : 
                 (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 55550.5f ? 
                     (Double.isNaN(data[35 /* property_damage_undocumented */]) || !GenModel.bitSetIsInRange(32, 0, data[35]) || (data[35] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[35]) && (data[35] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[35])) ? 
                         (data[93 /* incident_hour_of_the_day */] < 15.5f ? 
                            -0.01401609f : 
                            -0.0014370249f) : 
                        0.0068450007f) : 
                    -0.019559745f))));
    return pred;
  } // constant pool size = 103B, number of visited nodes = 19, static init size = 150B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_42 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_42_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_42_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 4.72846467E11f ? 
         (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 81915.0f ? 
             (!Double.isNaN(data[3 /* collision_type_Side Collision */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
                 (data[105 /* iclaim_severity_int */] < 13498.5f ? 
                     (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 74572.5f ? 
                         (data[88 /* policy_annual_premium */] < 1112.8916f ? 
                            -0.014048893f : 
                            0.0011404267f) : 
                         (data[88 /* policy_annual_premium */] < 1257.7367f ? 
                            0.02118672f : 
                            0.0014758575f)) : 
                     (data[107 /* prem_claim_int */] < 6.4188124E7f ? 
                         (data[106 /* tclaim_severity_int */] < 135022.5f ? 
                            -0.024329038f : 
                            -0.0062146415f) : 
                         (data[100 /* vehicle_claim */] < 38897.5f ? 
                            0.015154228f : 
                            -0.0047312207f))) : 
                 (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 1.29766128E8f ? 
                     (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 9.1285824E7f ? 
                         (Double.isNaN(data[99]) || data[99 /* property_claim */] < 11587.5f ? 
                            8.2128914E-4f : 
                            -0.0075622504f) : 
                         (data[92 /* incident_severity */] < 1.5f ? 
                            -0.0017511351f : 
                            0.009222192f)) : 
                    -0.010111917f)) : 
            -0.013390794f) : 
        0.0087709725f);
    return pred;
  } // constant pool size = 63B, number of visited nodes = 14, static init size = 30B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_43 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_43_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_43_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2011.5f ? 
         (!Double.isNaN(data[38 /* incident_state_PA */]) && (GenModel.bitSetIsInRange(32, 0, data[38]) && (data[38] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[38])) ? 
            -0.008684075f : 
             (Double.isNaN(data[99]) || data[99 /* property_claim */] < 17799.5f ? 
                 (Double.isNaN(data[6 /* insured_relationship_other-relative */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[6])) ? 
                     (Double.isNaN(data[12 /* incident_city_Northbend */]) || !GenModel.bitSetIsInRange(32, 0, data[12]) || (data[12] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[12]) && (data[12] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[12])) ? 
                         (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2007.5f ? 
                            -8.0082426E-4f : 
                            -0.0062336363f) : 
                         (Double.isNaN(data[59 /* insured_education_level_High School */]) || !GenModel.bitSetIsInRange(32, 0, data[59]) || (data[59] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[59]) && (data[59] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[59])) ? 
                            5.13408E-4f : 
                            0.017880207f)) : 
                     (Double.isNaN(data[26 /* insured_occupation_machine-op-inspct */]) || !GenModel.bitSetIsInRange(32, 0, data[26]) || (data[26] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[26]) && (data[26] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[26])) ? 
                         (Double.isNaN(data[19 /* incident_type_Single Vehicle Collision */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (data[19] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[19])) ? 
                            -0.001482755f : 
                            0.006754424f) : 
                        0.014942349f)) : 
                0.01196089f)) : 
         (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 43615.5f ? 
             (Double.isNaN(data[105]) || data[105 /* iclaim_severity_int */] < 14536.5f ? 
                 (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 46010.0f ? 
                    -0.0030546428f : 
                    -0.017480873f) : 
                 (Double.isNaN(data[16 /* police_report_available_YES */]) || !GenModel.bitSetIsInRange(32, 0, data[16]) || (data[16] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[16]) && (data[16] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[16])) ? 
                    -0.0031422842f : 
                    0.017645614f)) : 
             (Double.isNaN(data[94]) || data[94 /* number_of_vehicles_involved */] < 2.5f ? 
                 (data[99 /* property_claim */] < 6374.5f ? 
                    6.155292E-4f : 
                    0.009626033f) : 
                0.018663116f)));
    return pred;
  } // constant pool size = 97B, number of visited nodes = 15, static init size = 210B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_44 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_44_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_44_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[85 /* months_as_customer */] < 8.5f ? 
        -0.008957469f : 
         (data[85 /* months_as_customer */] < 17.5f ? 
            0.01727396f : 
             (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[71])) ? 
                 (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                     (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 1.5f ? 
                         (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[70])) ? 
                            -0.0016592708f : 
                            0.008533639f) : 
                         (Double.isNaN(data[75 /* insured_hobbies_hiking */]) || !GenModel.bitSetIsInRange(32, 0, data[75]) || (data[75] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[75]) && (data[75] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[75])) ? 
                            0.0020056602f : 
                            0.021554358f)) : 
                     (Double.isNaN(data[93]) || data[93 /* incident_hour_of_the_day */] < 22.5f ? 
                         (data[95 /* bodily_injuries */] < 0.5f ? 
                            3.0798544E-4f : 
                            -0.004857478f) : 
                        0.006348071f)) : 
                0.0066511445f)));
    return pred;
  } // constant pool size = 53B, number of visited nodes = 9, static init size = 90B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_45 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_45_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_45_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[98]) || data[98 /* injury_claim */] < 9824.5f ? 
         (Double.isNaN(data[81 /* insured_hobbies_skydiving */]) || !GenModel.bitSetIsInRange(32, 0, data[81]) || (data[81] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[81]) && (data[81] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[81])) ? 
             (Double.isNaN(data[98]) || data[98 /* injury_claim */] < 5948.5f ? 
                 (Double.isNaN(data[52 /* auto_make_Mercedes */]) || !GenModel.bitSetIsInRange(32, 0, data[52]) || (data[52] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[52]) && (data[52] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[52])) ? 
                     (Double.isNaN(data[100]) || data[100 /* vehicle_claim */] < 46145.5f ? 
                         (!Double.isNaN(data[14 /* incident_city_Riverwood */]) && (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[14])) ? 
                            -0.009199693f : 
                            4.0867677E-4f) : 
                         (Double.isNaN(data[3 /* collision_type_Side Collision */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[3])) ? 
                            -0.02671712f : 
                            9.1095845E-4f)) : 
                    0.013162151f) : 
                 (data[96 /* witnesses */] < 0.5f ? 
                     (Double.isNaN(data[9 /* insured_relationship_wife */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[9])) ? 
                         (Double.isNaN(data[99]) || data[99 /* property_claim */] < 7397.5f ? 
                            -0.00140001f : 
                            -0.01168522f) : 
                        0.006676249f) : 
                     (!Double.isNaN(data[11 /* incident_city_Hillsdale */]) && (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[11])) ? 
                        -0.007759611f : 
                         (!Double.isNaN(data[54 /* auto_make_Saab */]) && (GenModel.bitSetIsInRange(32, 0, data[54]) && (data[54] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[54])) ? 
                            -0.0073479903f : 
                            0.008437584f)))) : 
             (Double.isNaN(data[103]) || data[103 /* pclaim_severity_int */] < 16603.0f ? 
                0.015170326f : 
                0.0013664337f)) : 
         (data[91 /* capital-loss */] < 7160.5f ? 
             (Double.isNaN(data[101]) || data[101 /* auto_year */] < 2011.5f ? 
                 (Double.isNaN(data[6 /* insured_relationship_other-relative */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[6])) ? 
                     (data[106 /* tclaim_severity_int */] < 111233.5f ? 
                         (data[87 /* policy_deductable */] < 758.0f ? 
                            0.0063777748f : 
                            -0.0076897764f) : 
                         (data[105 /* iclaim_severity_int */] < 26084.5f ? 
                            -0.031950183f : 
                            -0.005932235f)) : 
                    0.0037354531f) : 
                 (Double.isNaN(data[90]) || data[90 /* capital-gains */] < 32668.0f ? 
                    0.011489427f : 
                    -0.0038792747f)) : 
             (data[91 /* capital-loss */] < 38830.5f ? 
                 (Double.isNaN(data[35 /* property_damage_undocumented */]) || !GenModel.bitSetIsInRange(32, 0, data[35]) || (data[35] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[35]) && (data[35] < 2) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[35])) ? 
                    3.821537E-4f : 
                    0.018522777f) : 
                 (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2007.5f ? 
                     (Double.isNaN(data[99]) || data[99 /* property_claim */] < 13857.5f ? 
                         (!Double.isNaN(data[61 /* insured_education_level_MD */]) && (GenModel.bitSetIsInRange(32, 0, data[61]) && (data[61] < 2) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[61])) ? 
                            -0.012263944f : 
                            0.003235778f) : 
                        -0.01326765f) : 
                     (data[106 /* tclaim_severity_int */] < 85211.5f ? 
                        -0.0018263248f : 
                        0.012152111f)))));
    return pred;
  } // constant pool size = 156B, number of visited nodes = 26, static init size = 300B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_46 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_46_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_46_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[89]) || data[89 /* umbrella_limit */] < 7500000.5f ? 
         (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1385.4912f ? 
             (!Double.isNaN(data[38 /* incident_state_PA */]) && (GenModel.bitSetIsInRange(32, 0, data[38]) && (data[38] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[38])) ? 
                -0.011928122f : 
                 (!Double.isNaN(data[26 /* insured_occupation_machine-op-inspct */]) && (GenModel.bitSetIsInRange(32, 0, data[26]) && (data[26] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[26])) ? 
                     (Double.isNaN(data[87]) || data[87 /* policy_deductable */] < 1496.5f ? 
                         (Double.isNaN(data[96]) || data[96 /* witnesses */] < 1.5f ? 
                            -0.0036055378f : 
                            -0.017676288f) : 
                        0.008849548f) : 
                     (Double.isNaN(data[90]) || data[90 /* capital-gains */] < 52488.5f ? 
                         (!Double.isNaN(data[29 /* insured_occupation_prof-specialty */]) && (GenModel.bitSetIsInRange(32, 0, data[29]) && (data[29] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[29])) ? 
                            -0.0043685017f : 
                            0.0035405448f) : 
                         (Double.isNaN(data[85]) || data[85 /* months_as_customer */] < 215.5f ? 
                            -0.005587996f : 
                            0.0017489956f)))) : 
             (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1535.4979f ? 
                 (data[100 /* vehicle_claim */] < 39815.5f ? 
                     (Double.isNaN(data[2 /* collision_type_Rear Collision */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[2])) ? 
                         (Double.isNaN(data[64 /* policy_csl_250/500 */]) || !GenModel.bitSetIsInRange(32, 0, data[64]) || (data[64] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[64]) && (data[64] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[64])) ? 
                            -0.004571121f : 
                            0.004495335f) : 
                        0.009615715f) : 
                     (data[98 /* injury_claim */] < 6249.5f ? 
                        -0.017604377f : 
                         (Double.isNaN(data[106]) || data[106 /* tclaim_severity_int */] < 152536.5f ? 
                            -0.0018190001f : 
                            -0.009852314f))) : 
                 (Double.isNaN(data[90]) || data[90 /* capital-gains */] < 58277.5f ? 
                     (!Double.isNaN(data[59 /* insured_education_level_High School */]) && (GenModel.bitSetIsInRange(32, 0, data[59]) && (data[59] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[59])) ? 
                        -0.008795041f : 
                         (!Double.isNaN(data[58 /* insured_education_level_College */]) && (GenModel.bitSetIsInRange(32, 0, data[58]) && (data[58] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[58])) ? 
                            -0.010580562f : 
                            0.003942263f)) : 
                     (data[93 /* incident_hour_of_the_day */] < 14.5f ? 
                        0.018329227f : 
                        0.0030119885f)))) : 
        0.009029099f);
    return pred;
  } // constant pool size = 113B, number of visited nodes = 19, static init size = 210B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_47 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_47_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_47_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* policy_state_IN */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (data[0] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (!Double.isNaN(data[25 /* insured_occupation_handlers-cleaners */]) && (GenModel.bitSetIsInRange(32, 0, data[25]) && (data[25] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[25])) ? 
             (data[104 /* vclaim_severity_int */] < 72815.5f ? 
                0.0010362543f : 
                -0.014071925f) : 
             (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1353.9626f ? 
                 (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1260.4609f ? 
                     (data[87 /* policy_deductable */] < 758.0f ? 
                         (!Double.isNaN(data[2 /* collision_type_Rear Collision */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[2])) ? 
                            -0.013429013f : 
                            -0.002350822f) : 
                         (Double.isNaN(data[101]) || data[101 /* auto_year */] < 2005.5f ? 
                            0.00608351f : 
                            -0.0030843327f)) : 
                     (Double.isNaN(data[106]) || data[106 /* tclaim_severity_int */] < 169502.0f ? 
                         (data[96 /* witnesses */] < 0.5f ? 
                            0.0011314646f : 
                            0.017442122f) : 
                        -0.009835517f)) : 
                 (Double.isNaN(data[89]) || data[89 /* umbrella_limit */] < 5519532.0f ? 
                     (Double.isNaN(data[47 /* auto_make_Chevrolet */]) || !GenModel.bitSetIsInRange(32, 0, data[47]) || (data[47] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[47]) && (data[47] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[47])) ? 
                         (Double.isNaN(data[5 /* insured_relationship_not-in-family */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (data[5] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                            -0.006701177f : 
                            0.0038350602f) : 
                        0.008560601f) : 
                     (data[91 /* capital-loss */] < 34369.0f ? 
                        0.01618959f : 
                        -6.9944636E-4f)))) : 
         (data[102 /* policy_bind_year */] < 1999.5f ? 
             (data[99 /* property_claim */] < 4812.5f ? 
                 (Double.isNaN(data[64 /* policy_csl_250/500 */]) || !GenModel.bitSetIsInRange(32, 0, data[64]) || (data[64] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[64]) && (data[64] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[64])) ? 
                     (data[96 /* witnesses */] < 1.5f ? 
                        -0.0032874604f : 
                        -0.008558648f) : 
                    0.0068105683f) : 
                 (data[97 /* total_claim_amount */] < 54304.5f ? 
                    0.024185274f : 
                     (data[104 /* vclaim_severity_int */] < 73610.5f ? 
                        -0.0048749405f : 
                         (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 1996.5f ? 
                            0.005914897f : 
                            0.021850396f)))) : 
             (Double.isNaN(data[85]) || data[85 /* months_as_customer */] < 417.5f ? 
                 (!Double.isNaN(data[7 /* insured_relationship_own-child */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[7])) ? 
                     (data[98 /* injury_claim */] < 4525.0f ? 
                        -0.011469171f : 
                        -0.0025336617f) : 
                     (Double.isNaN(data[96]) || data[96 /* witnesses */] < 2.5f ? 
                         (!Double.isNaN(data[11 /* incident_city_Hillsdale */]) && (GenModel.bitSetIsInRange(32, 0, data[11]) && (data[11] < 2) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[11])) ? 
                            -0.012078994f : 
                            0.0010632699f) : 
                         (!Double.isNaN(data[64 /* policy_csl_250/500 */]) && (GenModel.bitSetIsInRange(32, 0, data[64]) && (data[64] < 2) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[64])) ? 
                            2.4213849E-4f : 
                            0.015903212f))) : 
                -0.015991606f)));
    return pred;
  } // constant pool size = 155B, number of visited nodes = 27, static init size = 270B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_48 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_48_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_48_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[102 /* policy_bind_year */] < 1990.5f ? 
         (data[97 /* total_claim_amount */] < 62332.0f ? 
            -0.011967172f : 
            0.002059297f) : 
         (Double.isNaN(data[98]) || data[98 /* injury_claim */] < 13951.5f ? 
             (!Double.isNaN(data[66 /* insured_hobbies_basketball */]) && (GenModel.bitSetIsInRange(32, 0, data[66]) && (data[66] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[66])) ? 
                 (data[98 /* injury_claim */] < 5995.0f ? 
                    -0.010879314f : 
                    -0.004418914f) : 
                 (Double.isNaN(data[98]) || data[98 /* injury_claim */] < 12862.0f ? 
                     (Double.isNaN(data[98]) || data[98 /* injury_claim */] < 12058.5f ? 
                         (Double.isNaN(data[64 /* policy_csl_250/500 */]) || !GenModel.bitSetIsInRange(32, 0, data[64]) || (data[64] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[64]) && (data[64] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[64])) ? 
                            -2.9841656E-4f : 
                            0.0032820273f) : 
                         (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 20831.0f ? 
                            -0.014561091f : 
                            -2.8313886E-4f)) : 
                     (data[106 /* tclaim_severity_int */] < 87379.5f ? 
                        -0.0011189918f : 
                         (data[106 /* tclaim_severity_int */] < 154099.0f ? 
                            0.017975746f : 
                            0.00850779f)))) : 
             (data[88 /* policy_annual_premium */] < 975.6205f ? 
                0.01152323f : 
                 (data[88 /* policy_annual_premium */] < 1226.8633f ? 
                     (Double.isNaN(data[105]) || data[105 /* iclaim_severity_int */] < 36450.0f ? 
                        -0.022386363f : 
                        -0.0036643539f) : 
                     (data[107 /* prem_claim_int */] < 1.0247008E8f ? 
                        0.014390066f : 
                         (Double.isNaN(data[96]) || data[96 /* witnesses */] < 1.5f ? 
                            3.141448E-4f : 
                            -0.009437657f))))));
    return pred;
  } // constant pool size = 76B, number of visited nodes = 16, static init size = 60B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_49 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_49_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_49_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2011.5f ? 
         (!Double.isNaN(data[25 /* insured_occupation_handlers-cleaners */]) && (GenModel.bitSetIsInRange(32, 0, data[25]) && (data[25] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[25])) ? 
             (data[85 /* months_as_customer */] < 116.5f ? 
                0.0054720338f : 
                 (Double.isNaN(data[103]) || data[103 /* pclaim_severity_int */] < 13687.5f ? 
                    -0.0070103244f : 
                    -0.015817799f)) : 
             (Double.isNaN(data[101]) || data[101 /* auto_year */] < 2007.5f ? 
                 (Double.isNaN(data[63 /* insured_education_level_PhD */]) || !GenModel.bitSetIsInRange(32, 0, data[63]) || (data[63] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[63]) && (data[63] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[63])) ? 
                     (!Double.isNaN(data[74 /* insured_hobbies_golf */]) && (GenModel.bitSetIsInRange(32, 0, data[74]) && (data[74] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[74])) ? 
                         (data[105 /* iclaim_severity_int */] < 9998.5f ? 
                            -0.004590334f : 
                            -0.016270963f) : 
                         (!Double.isNaN(data[53 /* auto_make_Nissan */]) && (GenModel.bitSetIsInRange(32, 0, data[53]) && (data[53] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[53])) ? 
                            -0.008058373f : 
                            0.0013920375f)) : 
                     (Double.isNaN(data[90]) || data[90 /* capital-gains */] < 41681.5f ? 
                         (Double.isNaN(data[96]) || data[96 /* witnesses */] < 1.5f ? 
                            0.005387899f : 
                            0.03031351f) : 
                         (data[93 /* incident_hour_of_the_day */] < 11.0f ? 
                            0.0062081045f : 
                            -0.008139587f))) : 
                 (Double.isNaN(data[99]) || data[99 /* property_claim */] < 9061.5f ? 
                     (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 73549.5f ? 
                         (Double.isNaN(data[73 /* insured_hobbies_exercise */]) || !GenModel.bitSetIsInRange(32, 0, data[73]) || (data[73] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[73]) && (data[73] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[73])) ? 
                            -0.0039865887f : 
                            0.007715776f) : 
                        -0.01623458f) : 
                     (!Double.isNaN(data[9 /* insured_relationship_wife */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[9])) ? 
                        -0.008969631f : 
                         (data[106 /* tclaim_severity_int */] < 79679.5f ? 
                            -0.005577953f : 
                            0.006062783f))))) : 
         (!Double.isNaN(data[42 /* authorities_contacted_Fire */]) && (GenModel.bitSetIsInRange(32, 0, data[42]) && (data[42] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[42])) ? 
            -0.008014019f : 
             (Double.isNaN(data[99]) || data[99 /* property_claim */] < 11188.5f ? 
                 (data[100 /* vehicle_claim */] < 27977.0f ? 
                    -0.0033149598f : 
                     (data[90 /* capital-gains */] < 26362.5f ? 
                        0.02449211f : 
                         (data[90 /* capital-gains */] < 51728.5f ? 
                            4.8027455E-4f : 
                            0.0129531175f))) : 
                -0.006603704f)));
    return pred;
  } // constant pool size = 125B, number of visited nodes = 22, static init size = 210B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_50 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_50_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_50_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[99]) || data[99 /* property_claim */] < 11118.5f ? 
         (Double.isNaN(data[99]) || data[99 /* property_claim */] < 10456.5f ? 
             (Double.isNaN(data[99]) || data[99 /* property_claim */] < 9803.5f ? 
                 (Double.isNaN(data[99]) || data[99 /* property_claim */] < 8884.5f ? 
                     (Double.isNaN(data[99]) || data[99 /* property_claim */] < 8468.5f ? 
                         (Double.isNaN(data[101]) || data[101 /* auto_year */] < 2007.5f ? 
                            0.0016426896f : 
                            -0.002351917f) : 
                        -0.01331479f) : 
                     (data[85 /* months_as_customer */] < 148.5f ? 
                        0.02015385f : 
                        0.0012065863f)) : 
                 (Double.isNaN(data[86]) || data[86 /* age */] < 39.5f ? 
                    0.0013846922f : 
                    -0.018353483f)) : 
             (Double.isNaN(data[35 /* property_damage_undocumented */]) || !GenModel.bitSetIsInRange(32, 0, data[35]) || (data[35] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[35]) && (data[35] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[35])) ? 
                 (data[88 /* policy_annual_premium */] < 1284.6f ? 
                    0.008623837f : 
                    -0.0048627257f) : 
                0.021086147f)) : 
         (Double.isNaN(data[39 /* incident_state_SC */]) || !GenModel.bitSetIsInRange(32, 0, data[39]) || (data[39] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[39]) && (data[39] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[39])) ? 
             (data[100 /* vehicle_claim */] < 43852.5f ? 
                 (Double.isNaN(data[93]) || data[93 /* incident_hour_of_the_day */] < 12.0f ? 
                    -0.00464779f : 
                    -0.020923354f) : 
                 (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2001.5f ? 
                     (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 1.1250264E8f ? 
                         (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 9.5548944E7f ? 
                            4.6886635E-4f : 
                            0.019795526f) : 
                        -0.010121303f) : 
                     (data[105 /* iclaim_severity_int */] < 14758.5f ? 
                        -0.014988193f : 
                         (data[97 /* total_claim_amount */] < 79519.5f ? 
                            0.006932109f : 
                            -0.009649456f)))) : 
             (data[88 /* policy_annual_premium */] < 1000.84326f ? 
                0.015186511f : 
                 (data[88 /* policy_annual_premium */] < 1161.125f ? 
                    -0.011040615f : 
                     (Double.isNaN(data[100]) || data[100 /* vehicle_claim */] < 54000.5f ? 
                         (data[96 /* witnesses */] < 1.5f ? 
                            -0.0062569757f : 
                            0.0024112922f) : 
                        0.014832575f)))));
    return pred;
  } // constant pool size = 100B, number of visited nodes = 22, static init size = 60B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_51 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_51_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_51_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[106]) || data[106 /* tclaim_severity_int */] < 112477.5f ? 
         (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 74181.5f ? 
             (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 71284.5f ? 
                 (Double.isNaN(data[106]) || data[106 /* tclaim_severity_int */] < 100050.5f ? 
                     (Double.isNaN(data[106]) || data[106 /* tclaim_severity_int */] < 95361.5f ? 
                         (Double.isNaN(data[106]) || data[106 /* tclaim_severity_int */] < 89401.5f ? 
                            -3.3838316E-4f : 
                            0.01330482f) : 
                        -0.01868805f) : 
                    0.020241769f) : 
                -0.01211256f) : 
             (Double.isNaN(data[93]) || data[93 /* incident_hour_of_the_day */] < 16.5f ? 
                 (data[88 /* policy_annual_premium */] < 1337.1677f ? 
                    0.01335158f : 
                    0.0015351402f) : 
                0.026645975f)) : 
         (data[106 /* tclaim_severity_int */] < 119206.5f ? 
            -0.017264988f : 
             (Double.isNaN(data[8 /* insured_relationship_unmarried */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
                 (Double.isNaN(data[85]) || data[85 /* months_as_customer */] < 323.5f ? 
                     (!Double.isNaN(data[24 /* insured_occupation_farming-fishing */]) && (GenModel.bitSetIsInRange(32, 0, data[24]) && (data[24] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[24])) ? 
                        -0.014528453f : 
                         (Double.isNaN(data[83 /* insured_hobbies_video-games */]) || !GenModel.bitSetIsInRange(32, 0, data[83]) || (data[83] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[83]) && (data[83] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[83])) ? 
                            -0.0026431906f : 
                            0.012646902f)) : 
                     (Double.isNaN(data[90]) || data[90 /* capital-gains */] < 45232.5f ? 
                         (Double.isNaN(data[93]) || data[93 /* incident_hour_of_the_day */] < 15.5f ? 
                            -0.011526752f : 
                            0.0057061044f) : 
                        0.015590281f)) : 
                 (data[105 /* iclaim_severity_int */] < 15497.5f ? 
                    0.020128487f : 
                     (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2002.5f ? 
                         (Double.isNaN(data[99]) || data[99 /* property_claim */] < 10313.5f ? 
                            -0.009397111f : 
                            0.0011756528f) : 
                        0.01068805f)))));
    return pred;
  } // constant pool size = 89B, number of visited nodes = 18, static init size = 90B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_52 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_52_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_52_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* policy_state_IN */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (data[0] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (data[102 /* policy_bind_year */] < 2000.5f ? 
             (!Double.isNaN(data[17 /* police_report_available_undocumented */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && (data[17] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[17])) ? 
                 (Double.isNaN(data[60 /* insured_education_level_JD */]) || !GenModel.bitSetIsInRange(32, 0, data[60]) || (data[60] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[60]) && (data[60] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[60])) ? 
                     (!Double.isNaN(data[3 /* collision_type_Side Collision */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[3])) ? 
                        -0.017330935f : 
                         (Double.isNaN(data[97]) || data[97 /* total_claim_amount */] < 67350.0f ? 
                            -0.010135603f : 
                            0.0021375283f)) : 
                    0.0062111802f) : 
                 (Double.isNaN(data[105]) || data[105 /* iclaim_severity_int */] < 16494.5f ? 
                     (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 55112.5f ? 
                         (!Double.isNaN(data[16 /* police_report_available_YES */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && (data[16] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[16])) ? 
                            -0.0070242775f : 
                            -0.0022196902f) : 
                         (data[107 /* prem_claim_int */] < 6.3791404E7f ? 
                            0.023905579f : 
                            0.0074162255f)) : 
                     (data[106 /* tclaim_severity_int */] < 139961.5f ? 
                        -0.017965408f : 
                         (Double.isNaN(data[90]) || data[90 /* capital-gains */] < 24991.0f ? 
                            -0.0052604894f : 
                            0.006094363f)))) : 
             (Double.isNaN(data[90]) || data[90 /* capital-gains */] < 72767.5f ? 
                 (Double.isNaN(data[99]) || data[99 /* property_claim */] < 10171.5f ? 
                     (data[100 /* vehicle_claim */] < 35356.5f ? 
                         (!Double.isNaN(data[2 /* collision_type_Rear Collision */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[2])) ? 
                            -0.013995537f : 
                            7.26378E-4f) : 
                         (data[100 /* vehicle_claim */] < 39167.5f ? 
                            0.0188115f : 
                            0.0028476985f)) : 
                     (data[98 /* injury_claim */] < 6077.5f ? 
                        -0.015621048f : 
                         (data[107 /* prem_claim_int */] < 7.2830552E7f ? 
                            0.011088215f : 
                            -0.0038987638f))) : 
                0.014424921f)) : 
         (data[102 /* policy_bind_year */] < 1999.5f ? 
             (Double.isNaN(data[61 /* insured_education_level_MD */]) || !GenModel.bitSetIsInRange(32, 0, data[61]) || (data[61] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[61]) && (data[61] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[61])) ? 
                 (Double.isNaN(data[105]) || data[105 /* iclaim_severity_int */] < 16747.5f ? 
                     (Double.isNaN(data[98]) || data[98 /* injury_claim */] < 6999.5f ? 
                         (Double.isNaN(data[99]) || data[99 /* property_claim */] < 4880.5f ? 
                            -0.004193423f : 
                            0.008653294f) : 
                        -0.008129836f) : 
                     (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 1996.5f ? 
                        0.0034452232f : 
                        0.020223115f)) : 
                0.013956792f) : 
             (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1315.1304f ? 
                 (Double.isNaN(data[86]) || data[86 /* age */] < 46.5f ? 
                     (Double.isNaN(data[5 /* insured_relationship_not-in-family */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (data[5] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 2) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                         (data[101 /* auto_year */] < 2005.5f ? 
                            -0.008544473f : 
                            -2.7105497E-4f) : 
                        0.007228016f) : 
                    -0.015844379f) : 
                 (Double.isNaN(data[101]) || data[101 /* auto_year */] < 2009.5f ? 
                     (Double.isNaN(data[100]) || data[100 /* vehicle_claim */] < 48558.5f ? 
                         (data[106 /* tclaim_severity_int */] < 76756.5f ? 
                            -0.0017221365f : 
                            0.010484466f) : 
                        -0.0067388522f) : 
                    0.013956578f))));
    return pred;
  } // constant pool size = 170B, number of visited nodes = 32, static init size = 240B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_53 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_53_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_53_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[102 /* policy_bind_year */] < 1990.5f ? 
         (Double.isNaN(data[90]) || data[90 /* capital-gains */] < 40234.0f ? 
             (Double.isNaN(data[96]) || data[96 /* witnesses */] < 1.5f ? 
                7.443024E-4f : 
                -0.018134348f) : 
            0.0053150356f) : 
         (Double.isNaN(data[106]) || data[106 /* tclaim_severity_int */] < 112631.5f ? 
             (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 73726.5f ? 
                 (Double.isNaN(data[105]) || data[105 /* iclaim_severity_int */] < 19406.5f ? 
                     (Double.isNaN(data[103]) || data[103 /* pclaim_severity_int */] < 17016.5f ? 
                         (Double.isNaN(data[103]) || data[103 /* pclaim_severity_int */] < 13294.5f ? 
                            -1.7312737E-4f : 
                            0.008257173f) : 
                        -0.015798895f) : 
                    0.009796458f) : 
                 (data[101 /* auto_year */] < 2000.5f ? 
                    0.024518628f : 
                     (data[107 /* prem_claim_int */] < 6.9693304E7f ? 
                        0.013297768f : 
                        -0.0013825337f))) : 
             (data[103 /* pclaim_severity_int */] < 12674.5f ? 
                 (data[106 /* tclaim_severity_int */] < 126086.0f ? 
                    -0.020891735f : 
                    -9.787522E-5f) : 
                 (Double.isNaN(data[8 /* insured_relationship_unmarried */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
                     (Double.isNaN(data[57 /* auto_make_Volkswagen */]) || !GenModel.bitSetIsInRange(32, 0, data[57]) || (data[57] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[57]) && (data[57] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[57])) ? 
                         (Double.isNaN(data[61 /* insured_education_level_MD */]) || !GenModel.bitSetIsInRange(32, 0, data[61]) || (data[61] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[61]) && (data[61] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[61])) ? 
                            -0.0032253684f : 
                            0.0041357023f) : 
                         (Double.isNaN(data[99]) || data[99 /* property_claim */] < 10223.5f ? 
                            0.016499883f : 
                            -0.005362727f)) : 
                     (!Double.isNaN(data[41 /* incident_state_WV */]) && (GenModel.bitSetIsInRange(32, 0, data[41]) && (data[41] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[41])) ? 
                        -0.0060134013f : 
                         (Double.isNaN(data[106]) || data[106 /* tclaim_severity_int */] < 182242.5f ? 
                            0.020880938f : 
                            -4.597787E-4f))))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 18, static init size = 120B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_54 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_54_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_54_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* policy_state_IN */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (data[0] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (!Double.isNaN(data[25 /* insured_occupation_handlers-cleaners */]) && (GenModel.bitSetIsInRange(32, 0, data[25]) && (data[25] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[25])) ? 
             (data[104 /* vclaim_severity_int */] < 72815.5f ? 
                -8.811374E-5f : 
                -0.010673073f) : 
             (Double.isNaN(data[85]) || data[85 /* months_as_customer */] < 434.5f ? 
                 (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1353.9626f ? 
                     (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1253.2684f ? 
                         (Double.isNaN(data[59 /* insured_education_level_High School */]) || !GenModel.bitSetIsInRange(32, 0, data[59]) || (data[59] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[59]) && (data[59] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[59])) ? 
                            -0.001927366f : 
                            0.008894468f) : 
                         (Double.isNaN(data[63 /* insured_education_level_PhD */]) || !GenModel.bitSetIsInRange(32, 0, data[63]) || (data[63] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[63]) && (data[63] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[63])) ? 
                            0.0018449015f : 
                            0.019095536f)) : 
                     (Double.isNaN(data[89]) || data[89 /* umbrella_limit */] < 5484375.5f ? 
                         (Double.isNaN(data[47 /* auto_make_Chevrolet */]) || !GenModel.bitSetIsInRange(32, 0, data[47]) || (data[47] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[47]) && (data[47] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[47])) ? 
                            -0.005091007f : 
                            0.00718853f) : 
                         (data[91 /* capital-loss */] < 35100.5f ? 
                            0.014263761f : 
                            -9.839032E-4f))) : 
                 (data[90 /* capital-gains */] < 44438.0f ? 
                    -0.0043240283f : 
                    0.020564169f))) : 
         (Double.isNaN(data[100]) || data[100 /* vehicle_claim */] < 59532.5f ? 
             (Double.isNaN(data[106]) || data[106 /* tclaim_severity_int */] < 152021.0f ? 
                 (data[88 /* policy_annual_premium */] < 958.22f ? 
                    0.011589178f : 
                     (Double.isNaN(data[85]) || data[85 /* months_as_customer */] < 379.5f ? 
                         (!Double.isNaN(data[5 /* insured_relationship_not-in-family */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                            -0.00463788f : 
                            0.0030158956f) : 
                        -0.008649847f)) : 
                 (data[88 /* policy_annual_premium */] < 1138.62f ? 
                    -0.011692297f : 
                     (data[91 /* capital-loss */] < 44663.5f ? 
                        0.0046405187f : 
                        -0.0041141077f))) : 
             (data[97 /* total_claim_amount */] < 88849.0f ? 
                0.0044291588f : 
                0.014736426f)));
    return pred;
  } // constant pool size = 112B, number of visited nodes = 20, static init size = 180B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_55 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_55_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_55_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2011.5f ? 
         (!Double.isNaN(data[38 /* incident_state_PA */]) && (GenModel.bitSetIsInRange(32, 0, data[38]) && (data[38] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[38])) ? 
            -0.007266513f : 
             (Double.isNaN(data[99]) || data[99 /* property_claim */] < 17799.5f ? 
                 (Double.isNaN(data[98]) || data[98 /* injury_claim */] < 8546.5f ? 
                     (data[91 /* capital-loss */] < 6075.5f ? 
                         (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1537.5457f ? 
                            0.0013373639f : 
                            0.012534914f) : 
                         (Double.isNaN(data[74 /* insured_hobbies_golf */]) || !GenModel.bitSetIsInRange(32, 0, data[74]) || (data[74] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[74]) && (data[74] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[74])) ? 
                            -0.0028031208f : 
                            0.013762491f)) : 
                     (Double.isNaN(data[99]) || data[99 /* property_claim */] < 14365.5f ? 
                         (Double.isNaN(data[34 /* property_damage_YES */]) || !GenModel.bitSetIsInRange(32, 0, data[34]) || (data[34] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[34]) && (data[34] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[34])) ? 
                            -0.002881971f : 
                            0.002775586f) : 
                         (!Double.isNaN(data[34 /* property_damage_YES */]) && (GenModel.bitSetIsInRange(32, 0, data[34]) && (data[34] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[34])) ? 
                            -0.015616452f : 
                            -0.0041462793f))) : 
                0.009090113f)) : 
         (Double.isNaN(data[94]) || data[94 /* number_of_vehicles_involved */] < 2.5f ? 
             (!Double.isNaN(data[42 /* authorities_contacted_Fire */]) && (GenModel.bitSetIsInRange(32, 0, data[42]) && (data[42] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[42])) ? 
                -0.013176768f : 
                 (data[103 /* pclaim_severity_int */] < 7600.5f ? 
                    -0.0048972373f : 
                     (Double.isNaN(data[99]) || data[99 /* property_claim */] < 9262.5f ? 
                        0.012705243f : 
                        -0.0028285347f))) : 
             (Double.isNaN(data[96]) || data[96 /* witnesses */] < 1.5f ? 
                4.6224446E-5f : 
                0.021311944f)));
    return pred;
  } // constant pool size = 87B, number of visited nodes = 15, static init size = 150B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_56 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_56_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_56_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[85 /* months_as_customer */] < 8.5f ? 
        -0.0071974606f : 
         (data[85 /* months_as_customer */] < 17.5f ? 
            0.013187132f : 
             (data[85 /* months_as_customer */] < 60.5f ? 
                 (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 55116.5f ? 
                     (!Double.isNaN(data[19 /* incident_type_Single Vehicle Collision */]) && (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[19])) ? 
                        -0.016004061f : 
                         (Double.isNaN(data[99]) || data[99 /* property_claim */] < 9201.5f ? 
                            -0.006453079f : 
                            0.0038021258f)) : 
                    0.009815027f) : 
                 (data[85 /* months_as_customer */] < 68.5f ? 
                     (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 67355.0f ? 
                        -0.004468874f : 
                        0.019425064f) : 
                     (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 60758.5f ? 
                         (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[71])) ? 
                            1.7111015E-4f : 
                            0.01328952f) : 
                         (Double.isNaN(data[86]) || data[86 /* age */] < 52.5f ? 
                            -0.005072786f : 
                            0.009400981f))))));
    return pred;
  } // constant pool size = 56B, number of visited nodes = 11, static init size = 60B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_57 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_57_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_57_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[103]) || data[103 /* pclaim_severity_int */] < 23446.5f ? 
         (Double.isNaN(data[103]) || data[103 /* pclaim_severity_int */] < 21019.5f ? 
             (Double.isNaN(data[96]) || data[96 /* witnesses */] < 2.5f ? 
                 (data[85 /* months_as_customer */] < 56.5f ? 
                     (Double.isNaN(data[106]) || data[106 /* tclaim_severity_int */] < 93844.5f ? 
                         (data[91 /* capital-loss */] < 36644.0f ? 
                            -0.005646987f : 
                            0.0037820095f) : 
                        -0.011599061f) : 
                     (!Double.isNaN(data[65 /* policy_csl_500/1000 */]) && (GenModel.bitSetIsInRange(32, 0, data[65]) && (data[65] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[65])) ? 
                         (!Double.isNaN(data[2 /* collision_type_Rear Collision */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[2])) ? 
                            -0.010405863f : 
                            -1.6964565E-4f) : 
                         (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 1.5f ? 
                            9.021211E-4f : 
                            0.005796176f))) : 
                 (Double.isNaN(data[12 /* incident_city_Northbend */]) || !GenModel.bitSetIsInRange(32, 0, data[12]) || (data[12] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[12]) && (data[12] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[12])) ? 
                     (data[88 /* policy_annual_premium */] < 963.00903f ? 
                        0.010124849f : 
                         (Double.isNaN(data[106]) || data[106 /* tclaim_severity_int */] < 84581.5f ? 
                            -0.0020246403f : 
                            -0.010721254f)) : 
                    0.009617324f)) : 
             (Double.isNaN(data[35 /* property_damage_undocumented */]) || !GenModel.bitSetIsInRange(32, 0, data[35]) || (data[35] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[35]) && (data[35] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[35])) ? 
                 (data[86 /* age */] < 35.5f ? 
                    0.0075752176f : 
                    -0.005299257f) : 
                0.014847856f)) : 
         (data[105 /* iclaim_severity_int */] < 12311.0f ? 
            -0.016082006f : 
             (Double.isNaN(data[8 /* insured_relationship_unmarried */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                 (!Double.isNaN(data[12 /* incident_city_Northbend */]) && (GenModel.bitSetIsInRange(32, 0, data[12]) && (data[12] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[12])) ? 
                     (data[106 /* tclaim_severity_int */] < 190252.5f ? 
                        -0.017391369f : 
                        -0.0033152695f) : 
                     (Double.isNaN(data[103]) || data[103 /* pclaim_severity_int */] < 35759.5f ? 
                         (Double.isNaN(data[6 /* insured_relationship_other-relative */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[6])) ? 
                            -0.006597159f : 
                            0.008985502f) : 
                         (Double.isNaN(data[99]) || data[99 /* property_claim */] < 16579.5f ? 
                            7.639968E-4f : 
                            0.015273048f))) : 
                 (data[101 /* auto_year */] < 2006.5f ? 
                    -0.001153169f : 
                    0.014493152f))));
    return pred;
  } // constant pool size = 125B, number of visited nodes = 22, static init size = 210B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_58 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_58_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_58_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[98]) || data[98 /* injury_claim */] < 17512.5f ? 
         (Double.isNaN(data[98]) || data[98 /* injury_claim */] < 16623.5f ? 
             (data[93 /* incident_hour_of_the_day */] < 12.0f ? 
                 (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 75513.5f ? 
                     (data[99 /* property_claim */] < 5732.5f ? 
                         (!Double.isNaN(data[2 /* collision_type_Rear Collision */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
                            -0.011490415f : 
                            0.0012167185f) : 
                         (Double.isNaN(data[103]) || data[103 /* pclaim_severity_int */] < 22496.5f ? 
                            0.005050806f : 
                            -0.0012373729f)) : 
                    -0.0097985035f) : 
                 (!Double.isNaN(data[82 /* insured_hobbies_sleeping */]) && (GenModel.bitSetIsInRange(32, 0, data[82]) && (data[82] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[82])) ? 
                    -0.012689111f : 
                     (Double.isNaN(data[23 /* insured_occupation_exec-managerial */]) || !GenModel.bitSetIsInRange(32, 0, data[23]) || (data[23] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[23]) && (data[23] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[23])) ? 
                         (Double.isNaN(data[89]) || data[89 /* umbrella_limit */] < 6562500.5f ? 
                            -0.0015931489f : 
                            0.00910675f) : 
                         (data[88 /* policy_annual_premium */] < 1190.0144f ? 
                            0.01882476f : 
                            -0.001790534f)))) : 
            0.007993795f) : 
        -0.0065792813f);
    return pred;
  } // constant pool size = 61B, number of visited nodes = 11, static init size = 90B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
}


class gbm_25157373_b68d_4e31_9220_2b54919ba728_Forest_59 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_59_class_0.score0(fdata);
  }
}
class gbm_25157373_b68d_4e31_9220_2b54919ba728_Tree_59_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1832.4078f ? 
         (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 1.13651472E8f ? 
             (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 9.613828E7f ? 
                 (Double.isNaN(data[81 /* insured_hobbies_skydiving */]) || !GenModel.bitSetIsInRange(32, 0, data[81]) || (data[81] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[81]) && (data[81] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[81])) ? 
                     (Double.isNaN(data[98]) || data[98 /* injury_claim */] < 14747.5f ? 
                         (Double.isNaN(data[99]) || data[99 /* property_claim */] < 11095.5f ? 
                            -1.8530851E-4f : 
                            -0.0047747865f) : 
                         (data[101 /* auto_year */] < 2005.5f ? 
                            -0.0013174968f : 
                            0.012300306f)) : 
                     (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1261.0472f ? 
                        -7.360298E-4f : 
                        0.017315162f)) : 
                 (data[103 /* pclaim_severity_int */] < 13434.0f ? 
                     (Double.isNaN(data[0 /* policy_state_IN */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (data[0] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[0])) ? 
                        -0.0068570315f : 
                        8.812801E-4f) : 
                     (!Double.isNaN(data[44 /* authorities_contacted_Police */]) && (GenModel.bitSetIsInRange(32, 0, data[44]) && (data[44] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[44])) ? 
                        -0.004186266f : 
                         (data[104 /* vclaim_severity_int */] < 101205.5f ? 
                            0.025367474f : 
                            0.0067960257f)))) : 
             (Double.isNaN(data[65 /* policy_csl_500/1000 */]) || !GenModel.bitSetIsInRange(32, 0, data[65]) || (data[65] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[65]) && (data[65] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[65])) ? 
                 (!Double.isNaN(data[9 /* insured_relationship_wife */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[9])) ? 
                    -0.01418397f : 
                     (data[91 /* capital-loss */] < 12151.5f ? 
                        -0.008857463f : 
                        -2.3362471E-4f)) : 
                 (data[104 /* vclaim_severity_int */] < 103762.5f ? 
                    -0.004833071f : 
                    0.010641107f))) : 
        0.007007314f);
    return pred;
  } // constant pool size = 91B, number of visited nodes = 16, static init size = 150B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
}


