/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2024-10-23T18:44:32.204+05:30
  3.47.0.99999
  
  Standalone prediction code with sample test data for GBMModel named gbm_0719f438_93e7_41f1_baa2_005c9feaf623

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://172.16.0.18:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://172.16.0.18:54321/3/Models.java/gbm-0719f438-93e7-41f1-baa2-005c9feaf623 > gbm_0719f438_93e7_41f1_baa2_005c9feaf623.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m gbm_0719f438_93e7_41f1_baa2_005c9feaf623.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
package com.intense.mlapi.models;
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="gbm_0719f438_93e7_41f1_baa2_005c9feaf623", algorithm="gbm")
public class gbm_0719f438_93e7_41f1_baa2_005c9feaf623 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Regression; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 109; }
  public int nclasses() { return 1; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_gbm_0719f438_93e7_41f1_baa2_005c9feaf623.VALUES;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* policy_state_IN */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_0.VALUES,
    /* policy_state_OH */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_1.VALUES,
    /* collision_type_Rear Collision */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_2.VALUES,
    /* collision_type_Side Collision */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_3.VALUES,
    /* collision_type_undocumented */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_4.VALUES,
    /* insured_relationship_not-in-family */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_5.VALUES,
    /* insured_relationship_other-relative */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_6.VALUES,
    /* insured_relationship_own-child */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_7.VALUES,
    /* insured_relationship_unmarried */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_8.VALUES,
    /* insured_relationship_wife */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_9.VALUES,
    /* incident_city_Columbus */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_10.VALUES,
    /* incident_city_Hillsdale */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_11.VALUES,
    /* incident_city_Northbend */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_12.VALUES,
    /* incident_city_Northbrook */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_13.VALUES,
    /* incident_city_Riverwood */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_14.VALUES,
    /* incident_city_Springfield */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_15.VALUES,
    /* police_report_available_YES */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_16.VALUES,
    /* police_report_available_undocumented */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_17.VALUES,
    /* incident_type_Parked Car */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_18.VALUES,
    /* incident_type_Single Vehicle Collision */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_19.VALUES,
    /* incident_type_Vehicle Theft */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_20.VALUES,
    /* insured_occupation_armed-forces */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_21.VALUES,
    /* insured_occupation_craft-repair */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_22.VALUES,
    /* insured_occupation_exec-managerial */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_23.VALUES,
    /* insured_occupation_farming-fishing */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_24.VALUES,
    /* insured_occupation_handlers-cleaners */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_25.VALUES,
    /* insured_occupation_machine-op-inspct */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_26.VALUES,
    /* insured_occupation_other-service */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_27.VALUES,
    /* insured_occupation_priv-house-serv */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_28.VALUES,
    /* insured_occupation_prof-specialty */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_29.VALUES,
    /* insured_occupation_protective-serv */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_30.VALUES,
    /* insured_occupation_sales */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_31.VALUES,
    /* insured_occupation_tech-support */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_32.VALUES,
    /* insured_occupation_transport-moving */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_33.VALUES,
    /* property_damage_YES */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_34.VALUES,
    /* property_damage_undocumented */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_35.VALUES,
    /* incident_state_NY */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_36.VALUES,
    /* incident_state_OH */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_37.VALUES,
    /* incident_state_PA */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_38.VALUES,
    /* incident_state_SC */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_39.VALUES,
    /* incident_state_VA */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_40.VALUES,
    /* incident_state_WV */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_41.VALUES,
    /* authorities_contacted_Fire */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_42.VALUES,
    /* authorities_contacted_Other */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_43.VALUES,
    /* authorities_contacted_Police */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_44.VALUES,
    /* auto_make_Audi */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_45.VALUES,
    /* auto_make_BMW */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_46.VALUES,
    /* auto_make_Chevrolet */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_47.VALUES,
    /* auto_make_Dodge */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_48.VALUES,
    /* auto_make_Ford */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_49.VALUES,
    /* auto_make_Honda */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_50.VALUES,
    /* auto_make_Jeep */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_51.VALUES,
    /* auto_make_Mercedes */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_52.VALUES,
    /* auto_make_Nissan */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_53.VALUES,
    /* auto_make_Saab */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_54.VALUES,
    /* auto_make_Subaru */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_55.VALUES,
    /* auto_make_Toyota */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_56.VALUES,
    /* auto_make_Volkswagen */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_57.VALUES,
    /* insured_education_level_College */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_58.VALUES,
    /* insured_education_level_High School */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_59.VALUES,
    /* insured_education_level_JD */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_60.VALUES,
    /* insured_education_level_MD */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_61.VALUES,
    /* insured_education_level_Masters */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_62.VALUES,
    /* insured_education_level_PhD */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_63.VALUES,
    /* policy_csl_250/500 */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_64.VALUES,
    /* policy_csl_500/1000 */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_65.VALUES,
    /* insured_hobbies_basketball */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_66.VALUES,
    /* insured_hobbies_board-games */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_67.VALUES,
    /* insured_hobbies_bungie-jumping */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_68.VALUES,
    /* insured_hobbies_camping */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_69.VALUES,
    /* insured_hobbies_chess */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_70.VALUES,
    /* insured_hobbies_cross-fit */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_71.VALUES,
    /* insured_hobbies_dancing */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_72.VALUES,
    /* insured_hobbies_exercise */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_73.VALUES,
    /* insured_hobbies_golf */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_74.VALUES,
    /* insured_hobbies_hiking */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_75.VALUES,
    /* insured_hobbies_kayaking */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_76.VALUES,
    /* insured_hobbies_movies */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_77.VALUES,
    /* insured_hobbies_paintball */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_78.VALUES,
    /* insured_hobbies_polo */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_79.VALUES,
    /* insured_hobbies_reading */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_80.VALUES,
    /* insured_hobbies_skydiving */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_81.VALUES,
    /* insured_hobbies_sleeping */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_82.VALUES,
    /* insured_hobbies_video-games */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_83.VALUES,
    /* insured_hobbies_yachting */ gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_84.VALUES,
    /* months_as_customer */ null,
    /* age */ null,
    /* policy_deductable */ null,
    /* policy_annual_premium */ null,
    /* umbrella_limit */ null,
    /* capital-gains */ null,
    /* capital-loss */ null,
    /* incident_severity */ null,
    /* incident_hour_of_the_day */ null,
    /* number_of_vehicles_involved */ null,
    /* bodily_injuries */ null,
    /* witnesses */ null,
    /* total_claim_amount */ null,
    /* injury_claim */ null,
    /* property_claim */ null,
    /* vehicle_claim */ null,
    /* auto_year */ null,
    /* policy_bind_year */ null,
    /* pclaim_severity_int */ null,
    /* vclaim_severity_int */ null,
    /* iclaim_severity_int */ null,
    /* tclaim_severity_int */ null,
    /* prem_claim_int */ null,
    /* umlimit_tclaim_int */ null,
    /* fraud_reported */ null
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {1.0};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {1.0};

  public gbm_0719f438_93e7_41f1_baa2_005c9feaf623() { super(NAMES,DOMAINS,"fraud_reported"); }
  public String getUUID() { return Long.toString(4331065738886881016L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_0.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_1.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_2.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_3.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_4.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_5.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_6.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_7.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_8.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_9.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_10.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_11.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_12.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_13.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_14.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_15.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_16.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_17.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_18.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_19.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_20.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_21.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_22.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_23.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_24.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_25.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_26.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_27.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_28.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_29.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_30.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_31.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_32.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_33.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_34.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_35.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_36.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_37.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_38.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_39.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_40.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_41.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_42.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_43.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_44.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_45.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_46.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_47.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_48.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_49.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_50.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_51.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_52.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_53.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_54.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_55.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_56.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_57.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_58.score0(data,preds);
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_59.score0(data,preds);
    preds[0] += 0.2566489361702128;
    preds[0] = preds[0];
    return preds;
  }
}
// The class representing training column names
class NamesHolder_gbm_0719f438_93e7_41f1_baa2_005c9feaf623 implements java.io.Serializable {
  public static final String[] VALUES = new String[109];
  static {
    NamesHolder_gbm_0719f438_93e7_41f1_baa2_005c9feaf623_0.fill(VALUES);
  }
  static final class NamesHolder_gbm_0719f438_93e7_41f1_baa2_005c9feaf623_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "policy_state_IN";
      sa[1] = "policy_state_OH";
      sa[2] = "collision_type_Rear Collision";
      sa[3] = "collision_type_Side Collision";
      sa[4] = "collision_type_undocumented";
      sa[5] = "insured_relationship_not-in-family";
      sa[6] = "insured_relationship_other-relative";
      sa[7] = "insured_relationship_own-child";
      sa[8] = "insured_relationship_unmarried";
      sa[9] = "insured_relationship_wife";
      sa[10] = "incident_city_Columbus";
      sa[11] = "incident_city_Hillsdale";
      sa[12] = "incident_city_Northbend";
      sa[13] = "incident_city_Northbrook";
      sa[14] = "incident_city_Riverwood";
      sa[15] = "incident_city_Springfield";
      sa[16] = "police_report_available_YES";
      sa[17] = "police_report_available_undocumented";
      sa[18] = "incident_type_Parked Car";
      sa[19] = "incident_type_Single Vehicle Collision";
      sa[20] = "incident_type_Vehicle Theft";
      sa[21] = "insured_occupation_armed-forces";
      sa[22] = "insured_occupation_craft-repair";
      sa[23] = "insured_occupation_exec-managerial";
      sa[24] = "insured_occupation_farming-fishing";
      sa[25] = "insured_occupation_handlers-cleaners";
      sa[26] = "insured_occupation_machine-op-inspct";
      sa[27] = "insured_occupation_other-service";
      sa[28] = "insured_occupation_priv-house-serv";
      sa[29] = "insured_occupation_prof-specialty";
      sa[30] = "insured_occupation_protective-serv";
      sa[31] = "insured_occupation_sales";
      sa[32] = "insured_occupation_tech-support";
      sa[33] = "insured_occupation_transport-moving";
      sa[34] = "property_damage_YES";
      sa[35] = "property_damage_undocumented";
      sa[36] = "incident_state_NY";
      sa[37] = "incident_state_OH";
      sa[38] = "incident_state_PA";
      sa[39] = "incident_state_SC";
      sa[40] = "incident_state_VA";
      sa[41] = "incident_state_WV";
      sa[42] = "authorities_contacted_Fire";
      sa[43] = "authorities_contacted_Other";
      sa[44] = "authorities_contacted_Police";
      sa[45] = "auto_make_Audi";
      sa[46] = "auto_make_BMW";
      sa[47] = "auto_make_Chevrolet";
      sa[48] = "auto_make_Dodge";
      sa[49] = "auto_make_Ford";
      sa[50] = "auto_make_Honda";
      sa[51] = "auto_make_Jeep";
      sa[52] = "auto_make_Mercedes";
      sa[53] = "auto_make_Nissan";
      sa[54] = "auto_make_Saab";
      sa[55] = "auto_make_Subaru";
      sa[56] = "auto_make_Toyota";
      sa[57] = "auto_make_Volkswagen";
      sa[58] = "insured_education_level_College";
      sa[59] = "insured_education_level_High School";
      sa[60] = "insured_education_level_JD";
      sa[61] = "insured_education_level_MD";
      sa[62] = "insured_education_level_Masters";
      sa[63] = "insured_education_level_PhD";
      sa[64] = "policy_csl_250/500";
      sa[65] = "policy_csl_500/1000";
      sa[66] = "insured_hobbies_basketball";
      sa[67] = "insured_hobbies_board-games";
      sa[68] = "insured_hobbies_bungie-jumping";
      sa[69] = "insured_hobbies_camping";
      sa[70] = "insured_hobbies_chess";
      sa[71] = "insured_hobbies_cross-fit";
      sa[72] = "insured_hobbies_dancing";
      sa[73] = "insured_hobbies_exercise";
      sa[74] = "insured_hobbies_golf";
      sa[75] = "insured_hobbies_hiking";
      sa[76] = "insured_hobbies_kayaking";
      sa[77] = "insured_hobbies_movies";
      sa[78] = "insured_hobbies_paintball";
      sa[79] = "insured_hobbies_polo";
      sa[80] = "insured_hobbies_reading";
      sa[81] = "insured_hobbies_skydiving";
      sa[82] = "insured_hobbies_sleeping";
      sa[83] = "insured_hobbies_video-games";
      sa[84] = "insured_hobbies_yachting";
      sa[85] = "months_as_customer";
      sa[86] = "age";
      sa[87] = "policy_deductable";
      sa[88] = "policy_annual_premium";
      sa[89] = "umbrella_limit";
      sa[90] = "capital-gains";
      sa[91] = "capital-loss";
      sa[92] = "incident_severity";
      sa[93] = "incident_hour_of_the_day";
      sa[94] = "number_of_vehicles_involved";
      sa[95] = "bodily_injuries";
      sa[96] = "witnesses";
      sa[97] = "total_claim_amount";
      sa[98] = "injury_claim";
      sa[99] = "property_claim";
      sa[100] = "vehicle_claim";
      sa[101] = "auto_year";
      sa[102] = "policy_bind_year";
      sa[103] = "pclaim_severity_int";
      sa[104] = "vclaim_severity_int";
      sa[105] = "iclaim_severity_int";
      sa[106] = "tclaim_severity_int";
      sa[107] = "prem_claim_int";
      sa[108] = "umlimit_tclaim_int";
    }
  }
}
// The class representing column policy_state_IN
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_0 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_0_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_0_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column policy_state_OH
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_1 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_1_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_1_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column collision_type_Rear Collision
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_2 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_2_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_2_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column collision_type_Side Collision
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_3 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_3_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_3_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column collision_type_undocumented
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_4 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_4_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_4_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_relationship_not-in-family
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_5 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_5_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_5_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_relationship_other-relative
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_6 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_6_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_6_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_relationship_own-child
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_7 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_7_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_7_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_relationship_unmarried
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_8 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_8_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_8_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_relationship_wife
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_9 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_9_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_9_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column incident_city_Columbus
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_10 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_10_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_10_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column incident_city_Hillsdale
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_11 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_11_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_11_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column incident_city_Northbend
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_12 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_12_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_12_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column incident_city_Northbrook
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_13 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_13_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_13_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column incident_city_Riverwood
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_14 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_14_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_14_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column incident_city_Springfield
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_15 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_15_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_15_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column police_report_available_YES
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_16 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_16_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_16_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column police_report_available_undocumented
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_17 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_17_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_17_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column incident_type_Parked Car
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_18 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_18_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_18_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column incident_type_Single Vehicle Collision
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_19 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_19_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_19_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column incident_type_Vehicle Theft
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_20 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_20_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_20_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_occupation_armed-forces
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_21 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_21_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_21_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_occupation_craft-repair
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_22 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_22_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_22_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_occupation_exec-managerial
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_23 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_23_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_23_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_occupation_farming-fishing
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_24 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_24_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_24_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_occupation_handlers-cleaners
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_25 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_25_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_25_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_occupation_machine-op-inspct
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_26 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_26_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_26_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_occupation_other-service
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_27 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_27_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_27_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_occupation_priv-house-serv
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_28 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_28_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_28_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_occupation_prof-specialty
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_29 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_29_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_29_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_occupation_protective-serv
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_30 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_30_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_30_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_occupation_sales
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_31 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_31_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_31_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_occupation_tech-support
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_32 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_32_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_32_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_occupation_transport-moving
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_33 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_33_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_33_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column property_damage_YES
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_34 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_34_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_34_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column property_damage_undocumented
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_35 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_35_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_35_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column incident_state_NY
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_36_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column incident_state_OH
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_37 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_37_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_37_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column incident_state_PA
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_38 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_38_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_38_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column incident_state_SC
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_39 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_39_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_39_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column incident_state_VA
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_40 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_40_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_40_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column incident_state_WV
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_41 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_41_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_41_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column authorities_contacted_Fire
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_42 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_42_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_42_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column authorities_contacted_Other
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_43 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_43_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_43_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column authorities_contacted_Police
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_44 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_44_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_44_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column auto_make_Audi
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_45 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_45_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_45_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column auto_make_BMW
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_46 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_46_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_46_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column auto_make_Chevrolet
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_47 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_47_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_47_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column auto_make_Dodge
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_48 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_48_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_48_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column auto_make_Ford
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_49 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_49_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_49_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column auto_make_Honda
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_50 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_50_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_50_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column auto_make_Jeep
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_51 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_51_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_51_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column auto_make_Mercedes
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_52 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_52_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_52_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column auto_make_Nissan
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_53 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_53_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_53_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column auto_make_Saab
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_54 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_54_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_54_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column auto_make_Subaru
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_55 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_55_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_55_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column auto_make_Toyota
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_56 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_56_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_56_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column auto_make_Volkswagen
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_57 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_57_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_57_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_education_level_College
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_58 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_58_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_58_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_education_level_High School
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_59 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_59_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_59_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_education_level_JD
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_60 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_60_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_60_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_education_level_MD
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_61 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_61_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_61_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_education_level_Masters
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_62 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_62_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_62_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_education_level_PhD
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_63 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_63_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_63_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column policy_csl_250/500
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_64 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_64_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_64_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column policy_csl_500/1000
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_65 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_65_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_65_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_basketball
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_66 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_66_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_66_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_board-games
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_67 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_67_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_67_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_bungie-jumping
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_68 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_68_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_68_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_camping
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_69 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_69_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_69_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_chess
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_70 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_70_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_70_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_cross-fit
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_71 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_71_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_71_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_dancing
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_72 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_72_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_72_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_exercise
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_73 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_73_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_73_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_golf
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_74 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_74_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_74_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_hiking
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_75 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_75_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_75_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_kayaking
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_76 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_76_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_76_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_movies
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_77 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_77_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_77_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_paintball
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_78 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_78_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_78_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_polo
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_79 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_79_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_79_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_reading
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_80 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_80_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_80_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_skydiving
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_81 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_81_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_81_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_sleeping
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_82 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_82_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_82_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_video-games
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_83 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_83_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_83_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}
// The class representing column insured_hobbies_yachting
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_84 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_84_0.fill(VALUES);
  }
  static final class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_ColInfo_84_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "False";
      sa[1] = "True";
    }
  }
}

class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_0_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[92 /* incident_severity */] < 1.5f ? 
         (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
             (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2005.5f ? 
                 (Double.isNaN(data[50 /* auto_make_Honda */]) || !GenModel.bitSetIsInRange(32, 0, data[50]) || (data[50] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[50]) && (data[50] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[50])) ? 
                     (data[86 /* age */] < 28.0f ? 
                        -0.016141083f : 
                        -0.025058832f) : 
                    -0.0074830754f) : 
                 (data[101 /* auto_year */] < 2003.5f ? 
                     (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 9.929148E7f ? 
                        -0.025664892f : 
                        -0.015664892f) : 
                     (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 53814.5f ? 
                        -0.014755802f : 
                        0.0132239945f))) : 
            0.06766844f) : 
         (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
             (Double.isNaN(data[60 /* insured_education_level_JD */]) || !GenModel.bitSetIsInRange(32, 0, data[60]) || (data[60] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[60]) && (data[60] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[60])) ? 
                 (data[88 /* policy_annual_premium */] < 1220.3501f ? 
                     (Double.isNaN(data[99]) || data[99 /* property_claim */] < 14654.5f ? 
                        0.016364092f : 
                        0.056153286f) : 
                     (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 2.45868757E11f ? 
                        0.036835104f : 
                        0.06845275f)) : 
                 (data[91 /* capital-loss */] < 10617.0f ? 
                    0.074335106f : 
                    0.04766844f)) : 
             (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[70])) ? 
                 (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[71])) ? 
                     (Double.isNaN(data[33 /* insured_occupation_transport-moving */]) || !GenModel.bitSetIsInRange(32, 0, data[33]) || (data[33] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[33]) && (data[33] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[33])) ? 
                        -0.023754064f : 
                        -0.010664893f) : 
                    0.056153286f) : 
                0.058950488f)));
    return pred;
  } // constant pool size = 100B, number of visited nodes = 17, static init size = 180B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_1_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[92 /* incident_severity */] < 1.5f ? 
         (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
             (data[85 /* months_as_customer */] < 29.5f ? 
                0.0027465392f : 
                 (Double.isNaN(data[59 /* insured_education_level_High School */]) || !GenModel.bitSetIsInRange(32, 0, data[59]) || (data[59] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[59]) && (data[59] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[59])) ? 
                     (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 2.11249992E10f ? 
                        -0.022183444f : 
                        -0.013150773f) : 
                     (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1341.3512f ? 
                        0.0018206018f : 
                        -0.023705969f))) : 
            0.0609016f) : 
         (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
             (Double.isNaN(data[60 /* insured_education_level_JD */]) || !GenModel.bitSetIsInRange(32, 0, data[60]) || (data[60] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[60]) && (data[60] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[60])) ? 
                 (data[88 /* policy_annual_premium */] < 1164.4337f ? 
                     (data[98 /* injury_claim */] < 6792.5f ? 
                        0.04174493f : 
                        0.008221228f) : 
                     (!Double.isNaN(data[40 /* incident_state_VA */]) && (GenModel.bitSetIsInRange(32, 0, data[40]) && (data[40] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[40])) ? 
                        0.008869923f : 
                        0.040912036f)) : 
                 (data[86 /* age */] < 34.5f ? 
                    0.06813236f : 
                    0.043401595f)) : 
             (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[70])) ? 
                 (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[71])) ? 
                     (Double.isNaN(data[83 /* insured_hobbies_video-games */]) || !GenModel.bitSetIsInRange(32, 0, data[83]) || (data[83] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[83]) && (data[83] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[83])) ? 
                        -0.02102178f : 
                        -0.005345654f) : 
                    0.050537962f) : 
                0.05305544f)));
    return pred;
  } // constant pool size = 97B, number of visited nodes = 15, static init size = 210B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_2_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[92 /* incident_severity */] < 1.5f ? 
         (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
             (Double.isNaN(data[23 /* insured_occupation_exec-managerial */]) || !GenModel.bitSetIsInRange(32, 0, data[23]) || (data[23] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[23]) && (data[23] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[23])) ? 
                 (!Double.isNaN(data[36 /* incident_state_NY */]) && (GenModel.bitSetIsInRange(32, 0, data[36]) && (data[36] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[36])) ? 
                     (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2005.5f ? 
                        -0.02135421f : 
                        -0.022420028f) : 
                     (Double.isNaN(data[89]) || data[89 /* umbrella_limit */] < 6484375.5f ? 
                        -0.016011264f : 
                        0.0073404075f)) : 
                -0.0010490664f) : 
            0.054811437f) : 
         (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
             (Double.isNaN(data[60 /* insured_education_level_JD */]) || !GenModel.bitSetIsInRange(32, 0, data[60]) || (data[60] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[60]) && (data[60] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[60])) ? 
                 (Double.isNaN(data[6 /* insured_relationship_other-relative */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[6])) ? 
                     (data[98 /* injury_claim */] < 5666.5f ? 
                        0.04458676f : 
                        0.01656518f) : 
                     (data[104 /* vclaim_severity_int */] < 76595.5f ? 
                        0.018470539f : 
                        0.05338071f)) : 
                 (data[91 /* capital-loss */] < 10617.0f ? 
                    0.0613249f : 
                    0.037572205f)) : 
             (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[70])) ? 
                 (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[71])) ? 
                     (Double.isNaN(data[33 /* insured_occupation_transport-moving */]) || !GenModel.bitSetIsInRange(32, 0, data[33]) || (data[33] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[33]) && (data[33] < 2) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[33])) ? 
                        -0.019366343f : 
                        -0.0076529873f) : 
                    0.045484163f) : 
                0.0477499f)));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 15, static init size = 240B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_3_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[92 /* incident_severity */] < 1.5f ? 
         (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
             (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2005.5f ? 
                 (Double.isNaN(data[74 /* insured_hobbies_golf */]) || !GenModel.bitSetIsInRange(32, 0, data[74]) || (data[74] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[74]) && (data[74] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[74])) ? 
                     (Double.isNaN(data[89]) || data[89 /* umbrella_limit */] < 5484375.5f ? 
                        -0.019144006f : 
                        -0.011042299f) : 
                    -0.0037687228f) : 
                 (Double.isNaN(data[40 /* incident_state_VA */]) || !GenModel.bitSetIsInRange(32, 0, data[40]) || (data[40] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[40]) && (data[40] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[40])) ? 
                     (Double.isNaN(data[43 /* authorities_contacted_Other */]) || !GenModel.bitSetIsInRange(32, 0, data[43]) || (data[43] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[43]) && (data[43] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[43])) ? 
                        -0.014505792f : 
                        0.002354798f) : 
                    0.013857835f)) : 
            0.049330287f) : 
         (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
             (!Double.isNaN(data[78 /* insured_hobbies_paintball */]) && (GenModel.bitSetIsInRange(32, 0, data[78]) && (data[78] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[78])) ? 
                8.527323E-4f : 
                 (!Double.isNaN(data[40 /* incident_state_VA */]) && (GenModel.bitSetIsInRange(32, 0, data[40]) && (data[40] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[40])) ? 
                     (data[95 /* bodily_injuries */] < 1.5f ? 
                        0.029661544f : 
                        -0.014793101f) : 
                     (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 2.45868757E11f ? 
                        0.028523846f : 
                        0.05011018f))) : 
             (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[70])) ? 
                 (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[71])) ? 
                     (Double.isNaN(data[75 /* insured_hobbies_hiking */]) || !GenModel.bitSetIsInRange(32, 0, data[75]) || (data[75] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[75]) && (data[75] < 2) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[75])) ? 
                        -0.017231576f : 
                        -0.0025840076f) : 
                    0.040935747f) : 
                0.04297491f)));
    return pred;
  } // constant pool size = 107B, number of visited nodes = 15, static init size = 270B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_4_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[92 /* incident_severity */] < 1.5f ? 
         (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
             (data[85 /* months_as_customer */] < 29.5f ? 
                0.005119086f : 
                 (Double.isNaN(data[59 /* insured_education_level_High School */]) || !GenModel.bitSetIsInRange(32, 0, data[59]) || (data[59] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[59]) && (data[59] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[59])) ? 
                     (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 2.11249992E10f ? 
                        -0.01675791f : 
                        -0.009407616f) : 
                     (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1341.3512f ? 
                        0.004389032f : 
                        -0.01794343f))) : 
            0.044397265f) : 
         (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
             (Double.isNaN(data[31 /* insured_occupation_sales */]) || !GenModel.bitSetIsInRange(32, 0, data[31]) || (data[31] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[31]) && (data[31] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[31])) ? 
                 (data[88 /* policy_annual_premium */] < 1220.3501f ? 
                     (data[88 /* policy_annual_premium */] < 994.1351f ? 
                        0.029699467f : 
                        0.0011462374f) : 
                     (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 2.45868757E11f ? 
                        0.024672328f : 
                        0.050448354f)) : 
                0.048759982f) : 
             (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[70])) ? 
                 (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[71])) ? 
                     (Double.isNaN(data[83 /* insured_hobbies_video-games */]) || !GenModel.bitSetIsInRange(32, 0, data[83]) || (data[83] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[83]) && (data[83] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[83])) ? 
                        -0.015492708f : 
                        -0.0013642652f) : 
                    0.036842175f) : 
                0.038677417f)));
    return pred;
  } // constant pool size = 88B, number of visited nodes = 14, static init size = 180B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_5_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[92 /* incident_severity */] < 1.5f ? 
         (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
             (Double.isNaN(data[23 /* insured_occupation_exec-managerial */]) || !GenModel.bitSetIsInRange(32, 0, data[23]) || (data[23] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[23]) && (data[23] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[23])) ? 
                 (!Double.isNaN(data[36 /* incident_state_NY */]) && (GenModel.bitSetIsInRange(32, 0, data[36]) && (data[36] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[36])) ? 
                     (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2005.5f ? 
                        -0.016004339f : 
                        -0.017790904f) : 
                     (Double.isNaN(data[89]) || data[89 /* umbrella_limit */] < 6484375.5f ? 
                        -0.011660185f : 
                        0.008517961f)) : 
                0.001559227f) : 
            0.039957535f) : 
         (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
             (Double.isNaN(data[6 /* insured_relationship_other-relative */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[6])) ? 
                 (Double.isNaN(data[103]) || data[103 /* pclaim_severity_int */] < 29469.5f ? 
                     (data[88 /* policy_annual_premium */] < 1219.0227f ? 
                        0.004833194f : 
                        0.024336565f) : 
                    0.050057802f) : 
                 (data[93 /* incident_hour_of_the_day */] < 14.5f ? 
                    0.050290268f : 
                     (Double.isNaN(data[90]) || data[90 /* capital-gains */] < 30155.0f ? 
                        0.0026778313f : 
                        0.04893578f))) : 
             (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[70])) ? 
                 (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[71])) ? 
                     (Double.isNaN(data[33 /* insured_occupation_transport-moving */]) || !GenModel.bitSetIsInRange(32, 0, data[33]) || (data[33] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[33]) && (data[33] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[33])) ? 
                        -0.014350229f : 
                        -0.003756546f) : 
                    0.033157952f) : 
                0.03480967f)));
    return pred;
  } // constant pool size = 97B, number of visited nodes = 15, static init size = 210B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_6_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[92 /* incident_severity */] < 1.5f ? 
         (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
             (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2005.5f ? 
                 (Double.isNaN(data[50 /* auto_make_Honda */]) || !GenModel.bitSetIsInRange(32, 0, data[50]) || (data[50] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[50]) && (data[50] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[50])) ? 
                     (Double.isNaN(data[63 /* insured_education_level_PhD */]) || !GenModel.bitSetIsInRange(32, 0, data[63]) || (data[63] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[63]) && (data[63] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[63])) ? 
                        -0.015019636f : 
                        -0.007157772f) : 
                    6.021738E-4f) : 
                 (data[101 /* auto_year */] < 2003.5f ? 
                     (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 9.929148E7f ? 
                        -0.01607147f : 
                        -0.007476317f) : 
                     (Double.isNaN(data[35 /* property_damage_undocumented */]) || !GenModel.bitSetIsInRange(32, 0, data[35]) || (data[35] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[35]) && (data[35] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[35])) ? 
                        -0.006029091f : 
                        0.018860213f))) : 
            0.03596178f) : 
         (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
             (Double.isNaN(data[60 /* insured_education_level_JD */]) || !GenModel.bitSetIsInRange(32, 0, data[60]) || (data[60] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[60]) && (data[60] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[60])) ? 
                 (Double.isNaN(data[31 /* insured_occupation_sales */]) || !GenModel.bitSetIsInRange(32, 0, data[31]) || (data[31] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[31]) && (data[31] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[31])) ? 
                     (data[88 /* policy_annual_premium */] < 1164.4337f ? 
                        0.004346047f : 
                        0.021272648f) : 
                    0.041804627f) : 
                 (data[86 /* age */] < 34.5f ? 
                    0.049113f : 
                    0.026301473f)) : 
             (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[70])) ? 
                 (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[71])) ? 
                     (Double.isNaN(data[75 /* insured_hobbies_hiking */]) || !GenModel.bitSetIsInRange(32, 0, data[75]) || (data[75] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[75]) && (data[75] < 2) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[75])) ? 
                        -0.012746723f : 
                        6.586877E-4f) : 
                    0.029842157f) : 
                0.031328708f)));
    return pred;
  } // constant pool size = 111B, number of visited nodes = 16, static init size = 270B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_7_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[92 /* incident_severity */] < 1.5f ? 
         (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
             (data[85 /* months_as_customer */] < 29.5f ? 
                0.0067684376f : 
                 (Double.isNaN(data[59 /* insured_education_level_High School */]) || !GenModel.bitSetIsInRange(32, 0, data[59]) || (data[59] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[59]) && (data[59] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[59])) ? 
                     (Double.isNaN(data[2 /* collision_type_Rear Collision */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[2])) ? 
                        -0.013065278f : 
                        -0.006979818f) : 
                     (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2005.5f ? 
                        -0.012495761f : 
                        0.0073671793f))) : 
            0.0323656f) : 
         (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
             (!Double.isNaN(data[59 /* insured_education_level_High School */]) && (GenModel.bitSetIsInRange(32, 0, data[59]) && (data[59] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[59])) ? 
                 (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 8.2350888E7f ? 
                    0.02572106f : 
                    -0.028188055f) : 
                 (Double.isNaN(data[6 /* insured_relationship_other-relative */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[6])) ? 
                     (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 9.426088E7f ? 
                        0.0114943525f : 
                        0.034099948f) : 
                     (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1354.5496f ? 
                        0.04803956f : 
                        0.02236451f))) : 
             (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[70])) ? 
                 (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[71])) ? 
                     (Double.isNaN(data[54 /* auto_make_Saab */]) || !GenModel.bitSetIsInRange(32, 0, data[54]) || (data[54] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[54]) && (data[54] < 2) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[54])) ? 
                        -0.011616533f : 
                        5.51443E-4f) : 
                    0.026857942f) : 
                0.028195834f)));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 15, static init size = 240B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_8_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[92 /* incident_severity */] < 1.5f ? 
         (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
             (Double.isNaN(data[23 /* insured_occupation_exec-managerial */]) || !GenModel.bitSetIsInRange(32, 0, data[23]) || (data[23] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[23]) && (data[23] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[23])) ? 
                 (!Double.isNaN(data[36 /* incident_state_NY */]) && (GenModel.bitSetIsInRange(32, 0, data[36]) && (data[36] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[36])) ? 
                     (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2005.5f ? 
                        -0.011922732f : 
                        -0.01462406f) : 
                     (Double.isNaN(data[89]) || data[89 /* umbrella_limit */] < 6484375.5f ? 
                        -0.008479964f : 
                        0.009839088f)) : 
                0.003076962f) : 
            0.02912904f) : 
         (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
             (!Double.isNaN(data[78 /* insured_hobbies_paintball */]) && (GenModel.bitSetIsInRange(32, 0, data[78]) && (data[78] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[78])) ? 
                -0.0060764086f : 
                 (!Double.isNaN(data[59 /* insured_education_level_High School */]) && (GenModel.bitSetIsInRange(32, 0, data[59]) && (data[59] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[59])) ? 
                     (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 8.2977728E7f ? 
                        0.025215833f : 
                        -0.025369251f) : 
                     (data[100 /* vehicle_claim */] < 35176.5f ? 
                        0.0018870273f : 
                        0.02373345f))) : 
             (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[70])) ? 
                 (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[71])) ? 
                     (data[101 /* auto_year */] < 1998.5f ? 
                        -0.0023694898f : 
                        -0.010945312f) : 
                    0.024172146f) : 
                0.025376247f)));
    return pred;
  } // constant pool size = 93B, number of visited nodes = 14, static init size = 210B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_9_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[71])) ? 
         (data[92 /* incident_severity */] < 1.5f ? 
             (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[70])) ? 
                 (Double.isNaN(data[96]) || data[96 /* witnesses */] < 1.5f ? 
                     (Double.isNaN(data[80 /* insured_hobbies_reading */]) || !GenModel.bitSetIsInRange(32, 0, data[80]) || (data[80] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[80]) && (data[80] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[80])) ? 
                        -0.012304226f : 
                        -0.0059329607f) : 
                     (Double.isNaN(data[2 /* collision_type_Rear Collision */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[2])) ? 
                        -0.009533524f : 
                        0.0037677218f)) : 
                0.026216136f) : 
             (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                 (Double.isNaN(data[60 /* insured_education_level_JD */]) || !GenModel.bitSetIsInRange(32, 0, data[60]) || (data[60] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[60]) && (data[60] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[60])) ? 
                     (!Double.isNaN(data[40 /* incident_state_VA */]) && (GenModel.bitSetIsInRange(32, 0, data[40]) && (data[40] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[40])) ? 
                        -0.009420992f : 
                        0.014071867f) : 
                     (!Double.isNaN(data[44 /* authorities_contacted_Police */]) && (GenModel.bitSetIsInRange(32, 0, data[44]) && (data[44] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[44])) ? 
                        0.015458037f : 
                        0.042376537f)) : 
                 (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[70])) ? 
                     (Double.isNaN(data[33 /* insured_occupation_transport-moving */]) || !GenModel.bitSetIsInRange(32, 0, data[33]) || (data[33] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[33]) && (data[33] < 2) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[33])) ? 
                        -0.009735047f : 
                        4.6245827E-5f) : 
                    0.022838622f))) : 
         (data[105 /* iclaim_severity_int */] < 15060.0f ? 
            0.056142375f : 
            0.012461446f));
    return pred;
  } // constant pool size = 99B, number of visited nodes = 13, static init size = 270B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_10 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_10_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_10_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[71])) ? 
         (data[92 /* incident_severity */] < 1.5f ? 
             (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[70])) ? 
                 (Double.isNaN(data[64 /* policy_csl_250/500 */]) || !GenModel.bitSetIsInRange(32, 0, data[64]) || (data[64] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[64]) && (data[64] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[64])) ? 
                     (Double.isNaN(data[96]) || data[96 /* witnesses */] < 2.5f ? 
                        -0.011328139f : 
                        -0.0068559656f) : 
                     (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2005.5f ? 
                        -0.008914735f : 
                        9.842213E-4f)) : 
                0.023594523f) : 
             (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                 (Double.isNaN(data[60 /* insured_education_level_JD */]) || !GenModel.bitSetIsInRange(32, 0, data[60]) || (data[60] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[60]) && (data[60] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[60])) ? 
                     (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 9.426088E7f ? 
                        0.0063875006f : 
                        0.023425834f) : 
                     (!Double.isNaN(data[44 /* authorities_contacted_Police */]) && (GenModel.bitSetIsInRange(32, 0, data[44]) && (data[44] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[44])) ? 
                        0.013912232f : 
                        0.038138885f)) : 
                 (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[70])) ? 
                     (Double.isNaN(data[75 /* insured_hobbies_hiking */]) || !GenModel.bitSetIsInRange(32, 0, data[75]) || (data[75] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[75]) && (data[75] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[75])) ? 
                        -0.008588905f : 
                        0.0035366463f) : 
                    0.020554757f))) : 
         (data[105 /* iclaim_severity_int */] < 15060.0f ? 
            0.05052814f : 
            0.011215303f));
    return pred;
  } // constant pool size = 89B, number of visited nodes = 13, static init size = 210B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_11 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_11_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_11_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[71])) ? 
         (data[92 /* incident_severity */] < 1.5f ? 
             (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[70])) ? 
                 (data[85 /* months_as_customer */] < 33.5f ? 
                    0.0021893831f : 
                     (Double.isNaN(data[59 /* insured_education_level_High School */]) || !GenModel.bitSetIsInRange(32, 0, data[59]) || (data[59] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[59]) && (data[59] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[59])) ? 
                        -0.00882439f : 
                        -0.004180447f)) : 
                0.021235073f) : 
             (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                 (Double.isNaN(data[31 /* insured_occupation_sales */]) || !GenModel.bitSetIsInRange(32, 0, data[31]) || (data[31] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[31]) && (data[31] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[31])) ? 
                     (Double.isNaN(data[60 /* insured_education_level_JD */]) || !GenModel.bitSetIsInRange(32, 0, data[60]) || (data[60] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[60]) && (data[60] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[60])) ? 
                        0.0073109595f : 
                        0.025359197f) : 
                    0.032012373f) : 
                 (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[70])) ? 
                     (Double.isNaN(data[83 /* insured_hobbies_video-games */]) || !GenModel.bitSetIsInRange(32, 0, data[83]) || (data[83] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[83]) && (data[83] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[83])) ? 
                        -0.0077751023f : 
                        0.004855477f) : 
                    0.018499278f))) : 
         (data[105 /* iclaim_severity_int */] < 15060.0f ? 
            0.045475323f : 
            0.010093771f));
    return pred;
  } // constant pool size = 81B, number of visited nodes = 11, static init size = 210B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_12 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_12_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_12_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[71])) ? 
         (data[92 /* incident_severity */] < 1.5f ? 
             (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[70])) ? 
                 (Double.isNaN(data[74 /* insured_hobbies_golf */]) || !GenModel.bitSetIsInRange(32, 0, data[74]) || (data[74] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[74]) && (data[74] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[74])) ? 
                     (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2010.5f ? 
                        -0.008305421f : 
                        -0.0026496535f) : 
                     (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 26907.5f ? 
                        -0.010543038f : 
                        0.014919922f)) : 
                0.019111568f) : 
             (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                 (Double.isNaN(data[37 /* incident_state_OH */]) || !GenModel.bitSetIsInRange(32, 0, data[37]) || (data[37] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[37]) && (data[37] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[37])) ? 
                     (Double.isNaN(data[85]) || data[85 /* months_as_customer */] < 380.5f ? 
                        0.011595379f : 
                        -0.0103160795f) : 
                    0.03590822f) : 
                 (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[70])) ? 
                     (Double.isNaN(data[54 /* auto_make_Saab */]) || !GenModel.bitSetIsInRange(32, 0, data[54]) || (data[54] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[54]) && (data[54] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[54])) ? 
                        -0.0071627446f : 
                        0.003856883f) : 
                    0.016649352f))) : 
         (data[95 /* bodily_injuries */] < 0.5f ? 
            0.0013925582f : 
            0.03578413f));
    return pred;
  } // constant pool size = 80B, number of visited nodes = 12, static init size = 180B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_13 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_13_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_13_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[71])) ? 
         (data[92 /* incident_severity */] < 1.5f ? 
             (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[70])) ? 
                 (Double.isNaN(data[64 /* policy_csl_250/500 */]) || !GenModel.bitSetIsInRange(32, 0, data[64]) || (data[64] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[64]) && (data[64] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[64])) ? 
                     (data[88 /* policy_annual_premium */] < 1063.9003f ? 
                        -0.004295744f : 
                        -0.008789859f) : 
                     (data[86 /* age */] < 32.5f ? 
                        0.0038035272f : 
                        -0.0057671736f)) : 
                0.01720041f) : 
             (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                 (!Double.isNaN(data[40 /* incident_state_VA */]) && (GenModel.bitSetIsInRange(32, 0, data[40]) && (data[40] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[40])) ? 
                     (Double.isNaN(data[95]) || data[95 /* bodily_injuries */] < 1.5f ? 
                        0.014403674f : 
                        -0.031113088f) : 
                     (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 2.45868757E11f ? 
                        0.008482457f : 
                        0.02841276f)) : 
                 (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[70])) ? 
                     (data[93 /* incident_hour_of_the_day */] < 1.5f ? 
                        0.0034046846f : 
                        -0.0065630614f) : 
                    0.014984416f))) : 
         (data[105 /* iclaim_severity_int */] < 15060.0f ? 
            0.038599983f : 
            0.006881647f));
    return pred;
  } // constant pool size = 79B, number of visited nodes = 13, static init size = 150B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_14 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_14_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_14_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[71])) ? 
         (data[92 /* incident_severity */] < 1.5f ? 
             (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[70])) ? 
                 (Double.isNaN(data[96]) || data[96 /* witnesses */] < 1.5f ? 
                     (data[95 /* bodily_injuries */] < 0.5f ? 
                        -0.004705386f : 
                        -0.008844829f) : 
                     (Double.isNaN(data[74 /* insured_hobbies_golf */]) || !GenModel.bitSetIsInRange(32, 0, data[74]) || (data[74] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[74]) && (data[74] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[74])) ? 
                        -0.004675977f : 
                        0.0147748515f)) : 
                0.015480369f) : 
             (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                 (Double.isNaN(data[84 /* insured_hobbies_yachting */]) || !GenModel.bitSetIsInRange(32, 0, data[84]) || (data[84] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[84]) && (data[84] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[84])) ? 
                     (data[97 /* total_claim_amount */] < 55859.5f ? 
                        0.015646996f : 
                        0.0026048282f) : 
                    0.031497084f) : 
                 (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[70])) ? 
                     (Double.isNaN(data[33 /* insured_occupation_transport-moving */]) || !GenModel.bitSetIsInRange(32, 0, data[33]) || (data[33] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[33]) && (data[33] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[33])) ? 
                        -0.0061041233f : 
                        0.0028193588f) : 
                    0.013485973f))) : 
         (data[95 /* bodily_injuries */] < 0.5f ? 
            -7.0359407E-4f : 
            0.030129874f));
    return pred;
  } // constant pool size = 80B, number of visited nodes = 12, static init size = 180B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_15 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_15_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_15_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[71])) ? 
         (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 73271.5f ? 
             (Double.isNaN(data[24 /* insured_occupation_farming-fishing */]) || !GenModel.bitSetIsInRange(32, 0, data[24]) || (data[24] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[24]) && (data[24] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[24])) ? 
                 (Double.isNaN(data[106]) || data[106 /* tclaim_severity_int */] < 93106.5f ? 
                     (Double.isNaN(data[52 /* auto_make_Mercedes */]) || !GenModel.bitSetIsInRange(32, 0, data[52]) || (data[52] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[52]) && (data[52] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[52])) ? 
                        -0.0040594386f : 
                        0.012746711f) : 
                     (data[98 /* injury_claim */] < 9964.5f ? 
                        -0.03376265f : 
                        -0.009498519f)) : 
                 (data[104 /* vclaim_severity_int */] < 45508.5f ? 
                    -0.0076309405f : 
                    0.032591816f)) : 
             (data[106 /* tclaim_severity_int */] < 111608.5f ? 
                 (data[93 /* incident_hour_of_the_day */] < 13.5f ? 
                    0.021999573f : 
                    0.040907815f) : 
                 (Double.isNaN(data[97]) || data[97 /* total_claim_amount */] < 67444.5f ? 
                     (Double.isNaN(data[100]) || data[100 /* vehicle_claim */] < 49804.5f ? 
                        -0.0028774154f : 
                        -0.022643778f) : 
                     (data[106 /* tclaim_severity_int */] < 151576.5f ? 
                        0.019950755f : 
                        -5.9163437E-4f)))) : 
         (!Double.isNaN(data[19 /* incident_type_Single Vehicle Collision */]) && (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[19])) ? 
            0.0020520103f : 
            0.030835517f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 13, static init size = 120B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_16 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_16_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_16_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[71])) ? 
         (data[92 /* incident_severity */] < 1.5f ? 
             (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[70])) ? 
                 (Double.isNaN(data[64 /* policy_csl_250/500 */]) || !GenModel.bitSetIsInRange(32, 0, data[64]) || (data[64] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[64]) && (data[64] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[64])) ? 
                     (Double.isNaN(data[101]) || data[101 /* auto_year */] < 2012.5f ? 
                        -0.0067260205f : 
                        -0.0010271772f) : 
                     (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2005.5f ? 
                        -0.0052603497f : 
                        0.003191611f)) : 
                0.013757808f) : 
             (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                 (Double.isNaN(data[60 /* insured_education_level_JD */]) || !GenModel.bitSetIsInRange(32, 0, data[60]) || (data[60] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[60]) && (data[60] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[60])) ? 
                     (Double.isNaN(data[46 /* auto_make_BMW */]) || !GenModel.bitSetIsInRange(32, 0, data[46]) || (data[46] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[46]) && (data[46] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[46])) ? 
                        0.0030920266f : 
                        0.029913954f) : 
                     (!Double.isNaN(data[44 /* authorities_contacted_Police */]) && (GenModel.bitSetIsInRange(32, 0, data[44]) && (data[44] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[44])) ? 
                        0.0069808555f : 
                        0.028761221f)) : 
                 (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[70])) ? 
                     (Double.isNaN(data[75 /* insured_hobbies_hiking */]) || !GenModel.bitSetIsInRange(32, 0, data[75]) || (data[75] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[75]) && (data[75] < 2) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[75])) ? 
                        -0.00511191f : 
                        0.005969857f) : 
                    0.012205192f))) : 
         (data[105 /* iclaim_severity_int */] < 15060.0f ? 
            0.031073004f : 
            0.0028654027f));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 13, static init size = 240B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_17 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_17_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_17_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[71])) ? 
         (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 73271.5f ? 
             (Double.isNaN(data[24 /* insured_occupation_farming-fishing */]) || !GenModel.bitSetIsInRange(32, 0, data[24]) || (data[24] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[24]) && (data[24] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[24])) ? 
                 (Double.isNaN(data[106]) || data[106 /* tclaim_severity_int */] < 95494.5f ? 
                     (Double.isNaN(data[52 /* auto_make_Mercedes */]) || !GenModel.bitSetIsInRange(32, 0, data[52]) || (data[52] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[52]) && (data[52] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[52])) ? 
                        -0.0033921166f : 
                        0.011407733f) : 
                     (Double.isNaN(data[87]) || data[87 /* policy_deductable */] < 1496.5f ? 
                        -0.027349316f : 
                        -0.004639602f)) : 
                 (data[106 /* tclaim_severity_int */] < 64458.5f ? 
                    -0.006380723f : 
                    0.028434508f)) : 
             (data[106 /* tclaim_severity_int */] < 111608.5f ? 
                 (data[93 /* incident_hour_of_the_day */] < 13.5f ? 
                    0.019482277f : 
                    0.036268264f) : 
                 (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 9.4011304E7f ? 
                     (Double.isNaN(data[6 /* insured_relationship_other-relative */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[6])) ? 
                        -0.0045261267f : 
                        0.0077029346f) : 
                     (data[106 /* tclaim_severity_int */] < 169694.5f ? 
                        0.018863093f : 
                        -1.7185738E-4f)))) : 
         (data[95 /* bodily_injuries */] < 0.5f ? 
            -0.0036924547f : 
            0.023951892f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 13, static init size = 120B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_18 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_18_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_18_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
         (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 3.50542954E11f ? 
             (!Double.isNaN(data[51 /* auto_make_Jeep */]) && (GenModel.bitSetIsInRange(32, 0, data[51]) && (data[51] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[51])) ? 
                 (data[95 /* bodily_injuries */] < 0.5f ? 
                    -0.019585101f : 
                     (Double.isNaN(data[103]) || data[103 /* pclaim_severity_int */] < 15146.0f ? 
                        -0.009760382f : 
                        0.006516973f)) : 
                 (!Double.isNaN(data[28 /* insured_occupation_priv-house-serv */]) && (GenModel.bitSetIsInRange(32, 0, data[28]) && (data[28] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[28])) ? 
                     (Double.isNaN(data[93]) || data[93 /* incident_hour_of_the_day */] < 16.5f ? 
                        -0.015640501f : 
                        0.0019143936f) : 
                     (Double.isNaN(data[93]) || data[93 /* incident_hour_of_the_day */] < 20.5f ? 
                        0.0011610022f : 
                        -0.0069460915f))) : 
             (data[108 /* umlimit_tclaim_int */] < 3.81690216E11f ? 
                0.02891472f : 
                 (Double.isNaN(data[85]) || data[85 /* months_as_customer */] < 260.5f ? 
                     (Double.isNaN(data[89]) || data[89 /* umbrella_limit */] < 6484375.5f ? 
                        2.6457998E-4f : 
                        0.029430319f) : 
                    -0.016822409f))) : 
         (data[86 /* age */] < 39.0f ? 
            0.027742846f : 
             (Double.isNaN(data[97]) || data[97 /* total_claim_amount */] < 59935.0f ? 
                0.017174885f : 
                -0.02196408f)));
    return pred;
  } // constant pool size = 69B, number of visited nodes = 13, static init size = 90B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_19 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_19_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_19_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[71])) ? 
         (data[92 /* incident_severity */] < 1.5f ? 
             (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[70])) ? 
                 (data[85 /* months_as_customer */] < 33.5f ? 
                    0.0042218855f : 
                     (Double.isNaN(data[78 /* insured_hobbies_paintball */]) || !GenModel.bitSetIsInRange(32, 0, data[78]) || (data[78] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[78]) && (data[78] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[78])) ? 
                        -0.004565348f : 
                        0.0030266948f)) : 
                0.010855633f) : 
             (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                 (!Double.isNaN(data[40 /* incident_state_VA */]) && (GenModel.bitSetIsInRange(32, 0, data[40]) && (data[40] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[40])) ? 
                     (Double.isNaN(data[95]) || data[95 /* bodily_injuries */] < 1.5f ? 
                        0.009124705f : 
                        -0.02931718f) : 
                     (data[99 /* property_claim */] < 4430.5f ? 
                        0.031928517f : 
                        0.0060670474f)) : 
                 (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[70])) ? 
                     (Double.isNaN(data[54 /* auto_make_Saab */]) || !GenModel.bitSetIsInRange(32, 0, data[54]) || (data[54] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[54]) && (data[54] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[54])) ? 
                        -0.004477138f : 
                        0.005959975f) : 
                    0.010297548f))) : 
         (data[101 /* auto_year */] < 2001.5f ? 
            -0.0047145975f : 
            0.021945106f));
    return pred;
  } // constant pool size = 80B, number of visited nodes = 12, static init size = 180B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_20 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_20_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_20_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[69 /* insured_hobbies_camping */]) && (GenModel.bitSetIsInRange(32, 0, data[69]) && (data[69] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[69])) ? 
         (data[99 /* property_claim */] < 5155.0f ? 
            0.0025588467f : 
             (data[97 /* total_claim_amount */] < 64842.0f ? 
                -0.022745585f : 
                -0.006566416f)) : 
         (Double.isNaN(data[37 /* incident_state_OH */]) || !GenModel.bitSetIsInRange(32, 0, data[37]) || (data[37] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[37]) && (data[37] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[37])) ? 
             (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 4.71351558E11f ? 
                 (Double.isNaN(data[86]) || data[86 /* age */] < 58.5f ? 
                     (Double.isNaN(data[100]) || data[100 /* vehicle_claim */] < 65898.5f ? 
                        -2.6221125E-4f : 
                        0.015086797f) : 
                     (data[90 /* capital-gains */] < 16209.5f ? 
                        -0.031964023f : 
                        0.003217514f)) : 
                0.015725676f) : 
            0.017403083f));
    return pred;
  } // constant pool size = 44B, number of visited nodes = 8, static init size = 60B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_21 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_21_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_21_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 73271.5f ? 
         (Double.isNaN(data[106]) || data[106 /* tclaim_severity_int */] < 96090.5f ? 
             (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 1.5f ? 
                 (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
                     (data[102 /* policy_bind_year */] < 2001.5f ? 
                        -0.0045418474f : 
                        -6.776801E-4f) : 
                    0.009693964f) : 
                 (data[95 /* bodily_injuries */] < 0.5f ? 
                    -0.0082419785f : 
                     (data[85 /* months_as_customer */] < 164.5f ? 
                        0.006328706f : 
                        0.032812953f))) : 
             (Double.isNaN(data[97]) || data[97 /* total_claim_amount */] < 52547.5f ? 
                -0.025656113f : 
                -0.0028965746f)) : 
         (data[106 /* tclaim_severity_int */] < 111608.5f ? 
             (data[100 /* vehicle_claim */] < 37620.5f ? 
                0.014631729f : 
                0.030595617f) : 
             (Double.isNaN(data[97]) || data[97 /* total_claim_amount */] < 67765.5f ? 
                 (Double.isNaN(data[100]) || data[100 /* vehicle_claim */] < 48954.5f ? 
                     (data[95 /* bodily_injuries */] < 0.5f ? 
                        0.004407059f : 
                        -0.0056416835f) : 
                     (data[105 /* iclaim_severity_int */] < 13841.5f ? 
                        -0.03421174f : 
                        -0.0088652875f)) : 
                 (Double.isNaN(data[95]) || data[95 /* bodily_injuries */] < 1.5f ? 
                     (Double.isNaN(data[94]) || data[94 /* number_of_vehicles_involved */] < 2.5f ? 
                        0.006047094f : 
                        -0.016796205f) : 
                     (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2008.5f ? 
                        0.023371605f : 
                        -0.0087247705f)))));
    return pred;
  } // constant pool size = 75B, number of visited nodes = 17, static init size = 30B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_22 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_22_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_22_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[71])) ? 
         (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 70085.5f ? 
             (Double.isNaN(data[106]) || data[106 /* tclaim_severity_int */] < 95494.5f ? 
                 (Double.isNaN(data[106]) || data[106 /* tclaim_severity_int */] < 89526.5f ? 
                     (Double.isNaN(data[99]) || data[99 /* property_claim */] < 9246.5f ? 
                        -7.9780456E-4f : 
                        -0.007439547f) : 
                    0.013739687f) : 
                -0.018590922f) : 
             (data[106 /* tclaim_severity_int */] < 111608.5f ? 
                 (data[100 /* vehicle_claim */] < 36544.5f ? 
                    -1.30415E-4f : 
                     (Double.isNaN(data[99]) || data[99 /* property_claim */] < 8903.5f ? 
                        0.03240043f : 
                        0.01517931f)) : 
                 (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 9.4011304E7f ? 
                     (!Double.isNaN(data[10 /* incident_city_Columbus */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[10])) ? 
                        -0.010672298f : 
                        -7.974195E-4f) : 
                     (Double.isNaN(data[64 /* policy_csl_250/500 */]) || !GenModel.bitSetIsInRange(32, 0, data[64]) || (data[64] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[64]) && (data[64] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[64])) ? 
                        7.0904964E-4f : 
                        0.01979878f)))) : 
         (data[105 /* iclaim_severity_int */] < 15060.0f ? 
            0.0244277f : 
            -1.7960847E-4f));
    return pred;
  } // constant pool size = 65B, number of visited nodes = 12, static init size = 90B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_23 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_23_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_23_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[91 /* capital-loss */] < 21862.0f ? 
         (Double.isNaN(data[93]) || data[93 /* incident_hour_of_the_day */] < 16.5f ? 
             (!Double.isNaN(data[74 /* insured_hobbies_golf */]) && (GenModel.bitSetIsInRange(32, 0, data[74]) && (data[74] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[74])) ? 
                -0.018701728f : 
                 (!Double.isNaN(data[69 /* insured_hobbies_camping */]) && (GenModel.bitSetIsInRange(32, 0, data[69]) && (data[69] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[69])) ? 
                    -0.015545205f : 
                     (Double.isNaN(data[57 /* auto_make_Volkswagen */]) || !GenModel.bitSetIsInRange(32, 0, data[57]) || (data[57] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[57]) && (data[57] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[57])) ? 
                        0.0019112275f : 
                        0.023955978f))) : 
             (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 100620.5f ? 
                 (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 73500.5f ? 
                     (Double.isNaN(data[86]) || data[86 /* age */] < 47.5f ? 
                        -0.0043549193f : 
                        -0.024249552f) : 
                     (data[88 /* policy_annual_premium */] < 1221.1132f ? 
                        3.267235E-4f : 
                        0.021914361f)) : 
                 (data[92 /* incident_severity */] < 2.5f ? 
                    -0.039548345f : 
                     (data[106 /* tclaim_severity_int */] < 181147.5f ? 
                        -0.0051145535f : 
                        -0.018588895f)))) : 
         (data[86 /* age */] < 27.0f ? 
             (Double.isNaN(data[93]) || data[93 /* incident_hour_of_the_day */] < 12.0f ? 
                0.030505912f : 
                0.007263525f) : 
             (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[70])) ? 
                 (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 3.52792347E11f ? 
                     (Double.isNaN(data[95]) || data[95 /* bodily_injuries */] < 1.5f ? 
                        -0.004160726f : 
                        0.0050173816f) : 
                     (Double.isNaN(data[95]) || data[95 /* bodily_injuries */] < 1.5f ? 
                        0.020925593f : 
                        -3.024028E-4f)) : 
                0.018990811f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 17, static init size = 120B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_24 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_24_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_24_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[101 /* auto_year */] < 1995.5f ? 
         (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 37323.0f ? 
             (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2003.5f ? 
                 (data[99 /* property_claim */] < 6802.5f ? 
                    -0.02895957f : 
                    -0.009584201f) : 
                1.1932164E-4f) : 
            0.01083181f) : 
         (data[101 /* auto_year */] < 1997.5f ? 
             (data[104 /* vclaim_severity_int */] < 53701.5f ? 
                 (data[87 /* policy_deductable */] < 752.0f ? 
                    -0.005107632f : 
                    -0.0016933406f) : 
                 (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                     (data[107 /* prem_claim_int */] < 8.6326336E7f ? 
                        0.019390827f : 
                        0.03172818f) : 
                    0.0039157365f)) : 
             (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 5.03039066E11f ? 
                 (data[86 /* age */] < 25.5f ? 
                     (Double.isNaN(data[96]) || data[96 /* witnesses */] < 0.5f ? 
                        -0.004846044f : 
                        0.026106885f) : 
                     (data[85 /* months_as_customer */] < 67.5f ? 
                        -0.0075498465f : 
                        -3.6395492E-4f)) : 
                0.015098721f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_25 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_25_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_25_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[71])) ? 
         (Double.isNaN(data[84 /* insured_hobbies_yachting */]) || !GenModel.bitSetIsInRange(32, 0, data[84]) || (data[84] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[84]) && (data[84] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[84])) ? 
             (Double.isNaN(data[99]) || data[99 /* property_claim */] < 11095.5f ? 
                 (Double.isNaN(data[99]) || data[99 /* property_claim */] < 10489.5f ? 
                     (Double.isNaN(data[99]) || data[99 /* property_claim */] < 9670.5f ? 
                        4.3929918E-4f : 
                        -0.016761102f) : 
                     (data[87 /* policy_deductable */] < 1496.5f ? 
                        0.0066758483f : 
                        0.022819083f)) : 
                 (Double.isNaN(data[42 /* authorities_contacted_Fire */]) || !GenModel.bitSetIsInRange(32, 0, data[42]) || (data[42] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[42]) && (data[42] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[42])) ? 
                     (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 9.5434912E7f ? 
                        -0.011234088f : 
                        -0.0018216074f) : 
                     (Double.isNaN(data[87]) || data[87 /* policy_deductable */] < 1496.5f ? 
                        0.014621875f : 
                        -0.012123246f))) : 
             (Double.isNaN(data[99]) || data[99 /* property_claim */] < 8229.5f ? 
                 (Double.isNaN(data[100]) || data[100 /* vehicle_claim */] < 41088.0f ? 
                    -0.009450582f : 
                    -0.0012731705f) : 
                0.022384116f)) : 
         (!Double.isNaN(data[19 /* incident_type_Single Vehicle Collision */]) && (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[19])) ? 
            -0.0021988258f : 
            0.020739494f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 12, static init size = 120B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_26 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_26_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_26_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[69 /* insured_hobbies_camping */]) && (GenModel.bitSetIsInRange(32, 0, data[69]) && (data[69] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[69])) ? 
         (data[102 /* policy_bind_year */] < 1997.5f ? 
            0.0048757787f : 
             (data[103 /* pclaim_severity_int */] < 10439.5f ? 
                -0.003760006f : 
                -0.017745616f)) : 
         (Double.isNaN(data[37 /* incident_state_OH */]) || !GenModel.bitSetIsInRange(32, 0, data[37]) || (data[37] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[37]) && (data[37] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[37])) ? 
             (Double.isNaN(data[6 /* insured_relationship_other-relative */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[6])) ? 
                 (Double.isNaN(data[99]) || data[99 /* property_claim */] < 16088.5f ? 
                     (data[96 /* witnesses */] < 0.5f ? 
                        -0.0053865057f : 
                        1.7522692E-4f) : 
                    0.011639972f) : 
                 (Double.isNaN(data[26 /* insured_occupation_machine-op-inspct */]) || !GenModel.bitSetIsInRange(32, 0, data[26]) || (data[26] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[26]) && (data[26] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[26])) ? 
                     (Double.isNaN(data[103]) || data[103 /* pclaim_severity_int */] < 33272.5f ? 
                        0.0034948047f : 
                        -0.015403659f) : 
                    0.02674706f)) : 
            0.014035042f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 9, static init size = 120B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_27 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_27_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_27_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[91 /* capital-loss */] < 21862.0f ? 
         (Double.isNaN(data[93]) || data[93 /* incident_hour_of_the_day */] < 16.5f ? 
             (Double.isNaN(data[57 /* auto_make_Volkswagen */]) || !GenModel.bitSetIsInRange(32, 0, data[57]) || (data[57] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[57]) && (data[57] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[57])) ? 
                 (!Double.isNaN(data[74 /* insured_hobbies_golf */]) && (GenModel.bitSetIsInRange(32, 0, data[74]) && (data[74] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[74])) ? 
                    -0.01604742f : 
                     (!Double.isNaN(data[69 /* insured_hobbies_camping */]) && (GenModel.bitSetIsInRange(32, 0, data[69]) && (data[69] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[69])) ? 
                        -0.013552358f : 
                        0.0016157372f)) : 
                0.019088306f) : 
             (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 100620.5f ? 
                 (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 73500.5f ? 
                     (Double.isNaN(data[103]) || data[103 /* pclaim_severity_int */] < 9755.5f ? 
                        -0.0020381287f : 
                        -0.018446669f) : 
                     (data[88 /* policy_annual_premium */] < 1221.1132f ? 
                        -3.063902E-4f : 
                        0.01877196f)) : 
                 (data[92 /* incident_severity */] < 2.5f ? 
                    -0.034919217f : 
                     (data[106 /* tclaim_severity_int */] < 181147.5f ? 
                        -0.004529915f : 
                        -0.01584141f)))) : 
         (data[86 /* age */] < 27.0f ? 
             (Double.isNaN(data[93]) || data[93 /* incident_hour_of_the_day */] < 12.0f ? 
                0.026213206f : 
                0.006013205f) : 
             (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[70])) ? 
                 (!Double.isNaN(data[51 /* auto_make_Jeep */]) && (GenModel.bitSetIsInRange(32, 0, data[51]) && (data[51] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[51])) ? 
                     (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 56432.0f ? 
                        -0.0054665655f : 
                        -0.018778272f) : 
                     (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[71])) ? 
                        2.133952E-4f : 
                        0.019453177f)) : 
                0.017039951f)));
    return pred;
  } // constant pool size = 100B, number of visited nodes = 17, static init size = 180B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_28 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_28_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_28_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[106 /* tclaim_severity_int */] < 3581.5f ? 
         (Double.isNaN(data[99]) || data[99 /* property_claim */] < 947.5f ? 
             (data[88 /* policy_annual_premium */] < 1002.135f ? 
                -0.0106862765f : 
                 (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 1.94976563E10f ? 
                     (Double.isNaN(data[44 /* authorities_contacted_Police */]) || !GenModel.bitSetIsInRange(32, 0, data[44]) || (data[44] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[44]) && (data[44] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[44])) ? 
                        -0.006177952f : 
                        -0.0029485652f) : 
                    -0.008864057f)) : 
            0.0021177952f) : 
         (data[97 /* total_claim_amount */] < 55492.5f ? 
             (Double.isNaN(data[97]) || data[97 /* total_claim_amount */] < 52655.5f ? 
                 (Double.isNaN(data[105]) || data[105 /* iclaim_severity_int */] < 16803.5f ? 
                     (data[87 /* policy_deductable */] < 758.0f ? 
                        -0.0033422632f : 
                        0.0065209293f) : 
                     (data[99 /* property_claim */] < 5084.5f ? 
                        0.0011845567f : 
                        -0.018525656f)) : 
                 (!Double.isNaN(data[65 /* policy_csl_500/1000 */]) && (GenModel.bitSetIsInRange(32, 0, data[65]) && (data[65] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[65])) ? 
                    -0.0014596067f : 
                     (Double.isNaN(data[95]) || data[95 /* bodily_injuries */] < 1.5f ? 
                        0.027617328f : 
                        0.0061381864f))) : 
             (data[97 /* total_claim_amount */] < 68028.5f ? 
                 (!Double.isNaN(data[33 /* insured_occupation_transport-moving */]) && (GenModel.bitSetIsInRange(32, 0, data[33]) && (data[33] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[33])) ? 
                    -0.020489343f : 
                     (data[93 /* incident_hour_of_the_day */] < 12.0f ? 
                        0.0014862692f : 
                        -0.007885372f)) : 
                 (Double.isNaN(data[95]) || data[95 /* bodily_injuries */] < 1.5f ? 
                     (Double.isNaN(data[94]) || data[94 /* number_of_vehicles_involved */] < 2.5f ? 
                        0.002939737f : 
                        -0.010620271f) : 
                     (Double.isNaN(data[99]) || data[99 /* property_claim */] < 13314.5f ? 
                        0.01680256f : 
                        -6.705378E-4f)))));
    return pred;
  } // constant pool size = 89B, number of visited nodes = 18, static init size = 90B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_29 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_29_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_29_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 2.48548835E11f ? 
         (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 82783.0f ? 
             (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1391.7969f ? 
                 (Double.isNaN(data[84 /* insured_hobbies_yachting */]) || !GenModel.bitSetIsInRange(32, 0, data[84]) || (data[84] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[84]) && (data[84] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[84])) ? 
                     (Double.isNaN(data[46 /* auto_make_BMW */]) || !GenModel.bitSetIsInRange(32, 0, data[46]) || (data[46] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[46]) && (data[46] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[46])) ? 
                        -5.8539934E-4f : 
                        0.010261495f) : 
                     (Double.isNaN(data[99]) || data[99 /* property_claim */] < 8322.0f ? 
                        -0.0017448493f : 
                        0.029075988f)) : 
                 (Double.isNaN(data[105]) || data[105 /* iclaim_severity_int */] < 34495.5f ? 
                     (data[102 /* policy_bind_year */] < 1992.5f ? 
                        -0.013079612f : 
                        6.888788E-4f) : 
                    -0.01991951f)) : 
            -0.019431785f) : 
         (data[104 /* vclaim_severity_int */] < 58707.5f ? 
             (Double.isNaN(data[1 /* policy_state_OH */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                -0.011751511f : 
                0.002394531f) : 
             (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 108686.5f ? 
                 (Double.isNaN(data[85]) || data[85 /* months_as_customer */] < 260.5f ? 
                     (data[95 /* bodily_injuries */] < 1.5f ? 
                        0.03307106f : 
                        0.015503137f) : 
                    0.004064723f) : 
                 (data[105 /* iclaim_severity_int */] < 17702.5f ? 
                    -0.012970032f : 
                     (data[97 /* total_claim_amount */] < 78603.0f ? 
                        -0.004490568f : 
                        0.014637898f)))));
    return pred;
  } // constant pool size = 77B, number of visited nodes = 15, static init size = 90B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_30 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_30_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_30_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6 /* insured_relationship_other-relative */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[6])) ? 
         (Double.isNaN(data[99]) || data[99 /* property_claim */] < 16597.5f ? 
             (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2010.5f ? 
                 (!Double.isNaN(data[3 /* collision_type_Side Collision */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
                     (data[98 /* injury_claim */] < 6792.5f ? 
                        0.0013871462f : 
                        -0.010083686f) : 
                     (Double.isNaN(data[43 /* authorities_contacted_Other */]) || !GenModel.bitSetIsInRange(32, 0, data[43]) || (data[43] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[43]) && (data[43] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[43])) ? 
                        -0.002305839f : 
                        0.006449881f)) : 
                 (data[86 /* age */] < 28.5f ? 
                    0.02109341f : 
                     (data[93 /* incident_hour_of_the_day */] < 10.5f ? 
                        -0.005378526f : 
                        0.006872135f))) : 
            0.017092798f) : 
         (Double.isNaN(data[52 /* auto_make_Mercedes */]) || !GenModel.bitSetIsInRange(32, 0, data[52]) || (data[52] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[52]) && (data[52] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[52])) ? 
             (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 73726.5f ? 
                 (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 59903.5f ? 
                     (Double.isNaN(data[87]) || data[87 /* policy_deductable */] < 1496.5f ? 
                        -0.0040984224f : 
                        0.006409166f) : 
                    -0.018203337f) : 
                 (data[106 /* tclaim_severity_int */] < 152790.5f ? 
                     (data[96 /* witnesses */] < 1.5f ? 
                        0.037296038f : 
                        0.0096708555f) : 
                     (Double.isNaN(data[105]) || data[105 /* iclaim_severity_int */] < 31995.5f ? 
                        0.0039158766f : 
                        -0.011311394f))) : 
            0.021089053f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 15, static init size = 120B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_31 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_31_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_31_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[64 /* policy_csl_250/500 */]) || !GenModel.bitSetIsInRange(32, 0, data[64]) || (data[64] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[64]) && (data[64] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[64])) ? 
         (Double.isNaN(data[86]) || data[86 /* age */] < 59.0f ? 
             (Double.isNaN(data[43 /* authorities_contacted_Other */]) || !GenModel.bitSetIsInRange(32, 0, data[43]) || (data[43] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[43]) && (data[43] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[43])) ? 
                 (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 21572.0f ? 
                     (Double.isNaN(data[21 /* insured_occupation_armed-forces */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (data[21] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[21]) && (data[21] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[21])) ? 
                        -0.0053196736f : 
                        0.007691027f) : 
                     (data[91 /* capital-loss */] < 45206.5f ? 
                        0.006769806f : 
                        -0.0021703863f)) : 
                 (Double.isNaN(data[93]) || data[93 /* incident_hour_of_the_day */] < 16.5f ? 
                     (Double.isNaN(data[5 /* insured_relationship_not-in-family */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (data[5] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[5])) ? 
                        0.007267653f : 
                        0.03092202f) : 
                     (data[91 /* capital-loss */] < 38996.5f ? 
                        -0.019155348f : 
                        0.0042469637f))) : 
            -0.017203f) : 
         (data[88 /* policy_annual_premium */] < 978.7733f ? 
             (Double.isNaN(data[96]) || data[96 /* witnesses */] < 1.5f ? 
                 (data[87 /* policy_deductable */] < 752.0f ? 
                    0.007766978f : 
                    -0.006687183f) : 
                -0.015397644f) : 
             (Double.isNaN(data[103]) || data[103 /* pclaim_severity_int */] < 13071.5f ? 
                 (!Double.isNaN(data[29 /* insured_occupation_prof-specialty */]) && (GenModel.bitSetIsInRange(32, 0, data[29]) && (data[29] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[29])) ? 
                    -0.013913595f : 
                     (Double.isNaN(data[35 /* property_damage_undocumented */]) || !GenModel.bitSetIsInRange(32, 0, data[35]) || (data[35] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[35]) && (data[35] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[35])) ? 
                        -0.001853307f : 
                        0.009758545f)) : 
                 (Double.isNaN(data[39 /* incident_state_SC */]) || !GenModel.bitSetIsInRange(32, 0, data[39]) || (data[39] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[39]) && (data[39] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[39])) ? 
                     (data[87 /* policy_deductable */] < 758.0f ? 
                        -0.0077292174f : 
                        0.008463842f) : 
                     (data[102 /* policy_bind_year */] < 2002.5f ? 
                        0.0063086483f : 
                        0.030041024f)))));
    return pred;
  } // constant pool size = 109B, number of visited nodes = 18, static init size = 210B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_32 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_32_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_32_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6 /* insured_relationship_other-relative */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[6])) ? 
         (Double.isNaN(data[99]) || data[99 /* property_claim */] < 16597.5f ? 
             (Double.isNaN(data[37 /* incident_state_OH */]) || !GenModel.bitSetIsInRange(32, 0, data[37]) || (data[37] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[37]) && (data[37] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[37])) ? 
                 (data[97 /* total_claim_amount */] < 56210.5f ? 
                     (Double.isNaN(data[100]) || data[100 /* vehicle_claim */] < 35232.5f ? 
                        -0.0019972268f : 
                        0.009536042f) : 
                     (data[96 /* witnesses */] < 0.5f ? 
                        -0.009263618f : 
                        -0.0014157672f)) : 
                0.012602131f) : 
            0.015115654f) : 
         (Double.isNaN(data[26 /* insured_occupation_machine-op-inspct */]) || !GenModel.bitSetIsInRange(32, 0, data[26]) || (data[26] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[26]) && (data[26] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[26])) ? 
             (Double.isNaN(data[97]) || data[97 /* total_claim_amount */] < 67826.5f ? 
                 (Double.isNaN(data[105]) || data[105 /* iclaim_severity_int */] < 15247.5f ? 
                     (Double.isNaN(data[106]) || data[106 /* tclaim_severity_int */] < 76676.5f ? 
                        -0.0027168693f : 
                        -0.0152525f) : 
                     (Double.isNaN(data[105]) || data[105 /* iclaim_severity_int */] < 22735.5f ? 
                        0.011219523f : 
                        -0.005134058f)) : 
                 (Double.isNaN(data[106]) || data[106 /* tclaim_severity_int */] < 169502.0f ? 
                     (data[104 /* vclaim_severity_int */] < 60690.5f ? 
                        0.002991197f : 
                        0.02805086f) : 
                    -0.00978427f)) : 
            0.017107146f));
    return pred;
  } // constant pool size = 69B, number of visited nodes = 13, static init size = 90B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_33 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_33_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_33_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[101 /* auto_year */] < 1995.5f ? 
         (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 37323.0f ? 
             (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2003.5f ? 
                 (data[99 /* property_claim */] < 6802.5f ? 
                    -0.023536129f : 
                    -0.0078037092f) : 
                0.0012313286f) : 
            0.008383647f) : 
         (data[101 /* auto_year */] < 1997.5f ? 
             (data[104 /* vclaim_severity_int */] < 53701.5f ? 
                 (Double.isNaN(data[100]) || data[100 /* vehicle_claim */] < 34435.0f ? 
                    -5.1630725E-4f : 
                    -0.0043334314f) : 
                 (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                     (!Double.isNaN(data[39 /* incident_state_SC */]) && (GenModel.bitSetIsInRange(32, 0, data[39]) && (data[39] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[39])) ? 
                        0.014740048f : 
                        0.025003523f) : 
                    0.0027236782f)) : 
             (!Double.isNaN(data[82 /* insured_hobbies_sleeping */]) && (GenModel.bitSetIsInRange(32, 0, data[82]) && (data[82] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[82])) ? 
                 (Double.isNaN(data[95]) || data[95 /* bodily_injuries */] < 1.5f ? 
                    -0.001410656f : 
                    -0.01817446f) : 
                 (Double.isNaN(data[100]) || data[100 /* vehicle_claim */] < 66519.5f ? 
                     (Double.isNaN(data[99]) || data[99 /* property_claim */] < 11095.5f ? 
                        9.837258E-4f : 
                        -0.0038622988f) : 
                    0.0109061375f))));
    return pred;
  } // constant pool size = 64B, number of visited nodes = 13, static init size = 60B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_34 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_34_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_34_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[69 /* insured_hobbies_camping */]) && (GenModel.bitSetIsInRange(32, 0, data[69]) && (data[69] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[69])) ? 
         (data[101 /* auto_year */] < 2002.5f ? 
            0.0042897775f : 
             (data[107 /* prem_claim_int */] < 6.3345884E7f ? 
                -0.016771073f : 
                -0.0058528157f)) : 
         (Double.isNaN(data[37 /* incident_state_OH */]) || !GenModel.bitSetIsInRange(32, 0, data[37]) || (data[37] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[37]) && (data[37] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[37])) ? 
             (Double.isNaN(data[85]) || data[85 /* months_as_customer */] < 407.5f ? 
                 (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 3.48562489E11f ? 
                     (Double.isNaN(data[85]) || data[85 /* months_as_customer */] < 323.5f ? 
                        -7.270137E-4f : 
                        0.0075548654f) : 
                     (data[100 /* vehicle_claim */] < 45592.5f ? 
                        0.024554178f : 
                        0.0025840607f)) : 
                 (Double.isNaN(data[90]) || data[90 /* capital-gains */] < 46698.5f ? 
                     (Double.isNaN(data[44 /* authorities_contacted_Police */]) || !GenModel.bitSetIsInRange(32, 0, data[44]) || (data[44] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[44]) && (data[44] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[44])) ? 
                        -0.02115011f : 
                        -7.209102E-4f) : 
                    0.008293615f)) : 
            0.010900772f));
    return pred;
  } // constant pool size = 57B, number of visited nodes = 10, static init size = 90B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_35 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_35_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_35_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[71])) ? 
         (Double.isNaN(data[84 /* insured_hobbies_yachting */]) || !GenModel.bitSetIsInRange(32, 0, data[84]) || (data[84] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[84]) && (data[84] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[84])) ? 
             (Double.isNaN(data[99]) || data[99 /* property_claim */] < 11095.5f ? 
                 (Double.isNaN(data[99]) || data[99 /* property_claim */] < 10489.5f ? 
                     (Double.isNaN(data[99]) || data[99 /* property_claim */] < 9670.5f ? 
                        3.2081595E-4f : 
                        -0.013719441f) : 
                     (data[104 /* vclaim_severity_int */] < 76456.5f ? 
                        0.0029188464f : 
                        0.018801512f)) : 
                 (!Double.isNaN(data[17 /* police_report_available_undocumented */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && (data[17] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[17])) ? 
                     (data[90 /* capital-gains */] < 13894.0f ? 
                        -0.0014396678f : 
                        -0.016174756f) : 
                     (data[97 /* total_claim_amount */] < 64686.5f ? 
                        -0.01146268f : 
                        0.0039400505f))) : 
             (Double.isNaN(data[99]) || data[99 /* property_claim */] < 8229.5f ? 
                 (Double.isNaN(data[100]) || data[100 /* vehicle_claim */] < 41088.0f ? 
                    -0.0083482f : 
                    -9.2180603E-4f) : 
                0.017351514f)) : 
         (data[105 /* iclaim_severity_int */] < 15060.0f ? 
            0.01869109f : 
            -0.0013328993f));
    return pred;
  } // constant pool size = 65B, number of visited nodes = 12, static init size = 90B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_36 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_36_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_36_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
         (!Double.isNaN(data[28 /* insured_occupation_priv-house-serv */]) && (GenModel.bitSetIsInRange(32, 0, data[28]) && (data[28] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[28])) ? 
             (!Double.isNaN(data[10 /* incident_city_Columbus */]) && (GenModel.bitSetIsInRange(32, 0, data[10]) && (data[10] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[10])) ? 
                -0.01657634f : 
                 (data[93 /* incident_hour_of_the_day */] < 13.5f ? 
                    -0.009550702f : 
                    0.0017771957f)) : 
             (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 1.13651472E8f ? 
                 (Double.isNaN(data[97]) || data[97 /* total_claim_amount */] < 87112.5f ? 
                     (Double.isNaN(data[43 /* authorities_contacted_Other */]) || !GenModel.bitSetIsInRange(32, 0, data[43]) || (data[43] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[43]) && (data[43] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[43])) ? 
                        -9.668397E-4f : 
                        0.0048365253f) : 
                     (data[91 /* capital-loss */] < 29511.5f ? 
                        0.0048110425f : 
                        0.018597804f)) : 
                 (Double.isNaN(data[105]) || data[105 /* iclaim_severity_int */] < 27496.5f ? 
                     (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 105527.5f ? 
                        -0.006936027f : 
                        0.014197823f) : 
                    -0.018054323f))) : 
         (data[86 /* age */] < 39.0f ? 
            0.019386455f : 
             (Double.isNaN(data[97]) || data[97 /* total_claim_amount */] < 59935.0f ? 
                0.011061131f : 
                -0.019039037f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 12, static init size = 120B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_37 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_37_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_37_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[101 /* auto_year */] < 1995.5f ? 
         (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 37323.0f ? 
             (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2003.5f ? 
                 (data[99 /* property_claim */] < 6802.5f ? 
                    -0.021261951f : 
                    -0.007037453f) : 
                8.553098E-4f) : 
            0.007011083f) : 
         (data[101 /* auto_year */] < 1997.5f ? 
             (data[104 /* vclaim_severity_int */] < 53701.5f ? 
                 (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 35241.5f ? 
                    -4.857922E-4f : 
                    -0.003645619f) : 
                 (!Double.isNaN(data[17 /* police_report_available_undocumented */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && (data[17] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[17])) ? 
                    0.002731306f : 
                    0.018100064f)) : 
             (!Double.isNaN(data[82 /* insured_hobbies_sleeping */]) && (GenModel.bitSetIsInRange(32, 0, data[82]) && (data[82] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[82])) ? 
                 (data[93 /* incident_hour_of_the_day */] < 12.0f ? 
                    0.0023585083f : 
                    -0.013188601f) : 
                 (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 5.04359387E11f ? 
                     (Double.isNaN(data[99]) || data[99 /* property_claim */] < 11095.5f ? 
                        8.875405E-4f : 
                        -0.0031339473f) : 
                    0.012065114f))));
    return pred;
  } // constant pool size = 60B, number of visited nodes = 12, static init size = 60B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_38 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_38_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_38_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[51 /* auto_make_Jeep */]) && (GenModel.bitSetIsInRange(32, 0, data[51]) && (data[51] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[51])) ? 
         (data[102 /* policy_bind_year */] < 1995.5f ? 
            0.007546015f : 
             (data[95 /* bodily_injuries */] < 0.5f ? 
                -0.01707116f : 
                 (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 7.5761192E7f ? 
                    -0.0072586387f : 
                    0.0054473677f))) : 
         (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[71])) ? 
             (!Double.isNaN(data[30 /* insured_occupation_protective-serv */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[30])) ? 
                 (data[100 /* vehicle_claim */] < 37021.0f ? 
                    -0.014349895f : 
                     (Double.isNaN(data[99]) || data[99 /* property_claim */] < 11246.0f ? 
                        0.006293545f : 
                        -0.008035249f)) : 
                 (!Double.isNaN(data[69 /* insured_hobbies_camping */]) && (GenModel.bitSetIsInRange(32, 0, data[69]) && (data[69] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[69])) ? 
                     (data[102 /* policy_bind_year */] < 1997.5f ? 
                        0.004786493f : 
                        -0.009966095f) : 
                     (Double.isNaN(data[37 /* incident_state_OH */]) || !GenModel.bitSetIsInRange(32, 0, data[37]) || (data[37] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[37]) && (data[37] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[37])) ? 
                        5.356636E-4f : 
                        0.011783429f))) : 
             (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 1999.5f ? 
                -0.0024202121f : 
                0.021057552f)));
    return pred;
  } // constant pool size = 75B, number of visited nodes = 12, static init size = 150B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_39 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_39_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_39_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[85 /* months_as_customer */] < 146.5f ? 
         (Double.isNaN(data[86]) || data[86 /* age */] < 35.0f ? 
             (Double.isNaN(data[93]) || data[93 /* incident_hour_of_the_day */] < 20.5f ? 
                 (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2010.5f ? 
                     (Double.isNaN(data[60 /* insured_education_level_JD */]) || !GenModel.bitSetIsInRange(32, 0, data[60]) || (data[60] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[60]) && (data[60] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[60])) ? 
                        -0.0020071734f : 
                        0.008580905f) : 
                     (data[99 /* property_claim */] < 6287.5f ? 
                        7.020644E-4f : 
                        0.02197069f)) : 
                 (Double.isNaN(data[98]) || data[98 /* injury_claim */] < 7379.5f ? 
                    -0.0060046203f : 
                    -0.020330597f)) : 
             (data[93 /* incident_hour_of_the_day */] < 13.5f ? 
                -0.023729153f : 
                -0.0050320616f)) : 
         (data[85 /* months_as_customer */] < 186.5f ? 
             (Double.isNaN(data[62 /* insured_education_level_Masters */]) || !GenModel.bitSetIsInRange(32, 0, data[62]) || (data[62] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[62]) && (data[62] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[62])) ? 
                 (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                     (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 70976.5f ? 
                        0.0015665789f : 
                        0.02671236f) : 
                     (Double.isNaN(data[100]) || data[100 /* vehicle_claim */] < 46686.5f ? 
                        -0.0053329426f : 
                        0.0012788208f)) : 
                0.024947472f) : 
             (Double.isNaN(data[6 /* insured_relationship_other-relative */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[6])) ? 
                 (data[96 /* witnesses */] < 1.5f ? 
                     (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2004.5f ? 
                        -0.0010911558f : 
                        -0.011792088f) : 
                     (Double.isNaN(data[93]) || data[93 /* incident_hour_of_the_day */] < 22.5f ? 
                        0.0019944364f : 
                        -0.015177977f)) : 
                 (Double.isNaN(data[61 /* insured_education_level_MD */]) || !GenModel.bitSetIsInRange(32, 0, data[61]) || (data[61] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[61]) && (data[61] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[61])) ? 
                     (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 9.3849384E7f ? 
                        -5.749005E-4f : 
                        0.015187785f) : 
                    0.02019418f))));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 19, static init size = 120B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_40 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_40_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_40_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 84899.0f ? 
         (!Double.isNaN(data[3 /* collision_type_Side Collision */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
             (Double.isNaN(data[0 /* policy_state_IN */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (data[0] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[0])) ? 
                 (Double.isNaN(data[93]) || data[93 /* incident_hour_of_the_day */] < 14.5f ? 
                     (data[98 /* injury_claim */] < 6792.5f ? 
                        0.0058518704f : 
                        -0.005412573f) : 
                     (!Double.isNaN(data[17 /* police_report_available_undocumented */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && (data[17] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[17])) ? 
                        -0.018397981f : 
                        -0.004355667f)) : 
                 (!Double.isNaN(data[59 /* insured_education_level_High School */]) && (GenModel.bitSetIsInRange(32, 0, data[59]) && (data[59] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[59])) ? 
                    -0.012395057f : 
                     (data[99 /* property_claim */] < 5917.5f ? 
                        -0.0035543037f : 
                        0.012614444f))) : 
             (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 1.28364856E8f ? 
                 (Double.isNaN(data[43 /* authorities_contacted_Other */]) || !GenModel.bitSetIsInRange(32, 0, data[43]) || (data[43] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[43]) && (data[43] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[43])) ? 
                     (data[87 /* policy_deductable */] < 758.0f ? 
                        -0.0033291087f : 
                        0.002373508f) : 
                     (Double.isNaN(data[101]) || data[101 /* auto_year */] < 2012.5f ? 
                        0.0023112523f : 
                        0.022693628f)) : 
                -0.014123359f)) : 
        -0.010379527f);
    return pred;
  } // constant pool size = 75B, number of visited nodes = 12, static init size = 150B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_41 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_41_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_41_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[64 /* policy_csl_250/500 */]) || !GenModel.bitSetIsInRange(32, 0, data[64]) || (data[64] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[64]) && (data[64] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[64])) ? 
         (Double.isNaN(data[86]) || data[86 /* age */] < 59.0f ? 
             (Double.isNaN(data[43 /* authorities_contacted_Other */]) || !GenModel.bitSetIsInRange(32, 0, data[43]) || (data[43] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[43]) && (data[43] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[43])) ? 
                 (Double.isNaN(data[45 /* auto_make_Audi */]) || !GenModel.bitSetIsInRange(32, 0, data[45]) || (data[45] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[45]) && (data[45] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[45])) ? 
                     (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1673.7662f ? 
                        -0.0025437945f : 
                        0.010332334f) : 
                     (!Double.isNaN(data[44 /* authorities_contacted_Police */]) && (GenModel.bitSetIsInRange(32, 0, data[44]) && (data[44] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[44])) ? 
                        -0.0029423798f : 
                        0.013525804f)) : 
                 (Double.isNaN(data[95]) || data[95 /* bodily_injuries */] < 1.5f ? 
                     (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 53547.5f ? 
                        -0.004297018f : 
                        0.012806783f) : 
                     (Double.isNaN(data[98]) || data[98 /* injury_claim */] < 11989.0f ? 
                        0.005616322f : 
                        0.0304454f))) : 
            -0.014187244f) : 
         (data[88 /* policy_annual_premium */] < 1046.5596f ? 
             (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 1999.5f ? 
                 (data[99 /* property_claim */] < 7125.5f ? 
                    -0.008923929f : 
                    0.011015995f) : 
                 (Double.isNaN(data[44 /* authorities_contacted_Police */]) || !GenModel.bitSetIsInRange(32, 0, data[44]) || (data[44] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[44]) && (data[44] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[44])) ? 
                    -0.018937027f : 
                    -0.0032912714f)) : 
             (Double.isNaN(data[95]) || data[95 /* bodily_injuries */] < 1.5f ? 
                 (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2011.5f ? 
                     (!Double.isNaN(data[57 /* auto_make_Volkswagen */]) && (GenModel.bitSetIsInRange(32, 0, data[57]) && (data[57] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[57])) ? 
                        -0.012760308f : 
                        0.005767377f) : 
                    0.026337275f) : 
                 (Double.isNaN(data[105]) || data[105 /* iclaim_severity_int */] < 23001.5f ? 
                     (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 69480.5f ? 
                        -0.0017593951f : 
                        -0.016497696f) : 
                    0.015342322f))));
    return pred;
  } // constant pool size = 104B, number of visited nodes = 18, static init size = 180B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_42 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_42_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_42_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[69 /* insured_hobbies_camping */]) && (GenModel.bitSetIsInRange(32, 0, data[69]) && (data[69] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[69])) ? 
         (data[99 /* property_claim */] < 5155.0f ? 
            0.0038195706f : 
             (data[97 /* total_claim_amount */] < 64842.0f ? 
                -0.01604508f : 
                -0.0027523122f)) : 
         (data[99 /* property_claim */] < 5270.5f ? 
             (Double.isNaN(data[99]) || data[99 /* property_claim */] < 4756.5f ? 
                 (Double.isNaN(data[98]) || data[98 /* injury_claim */] < 7057.0f ? 
                     (Double.isNaN(data[98]) || data[98 /* injury_claim */] < 992.5f ? 
                        6.8867364E-4f : 
                        -0.0050794873f) : 
                     (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                        0.0152635975f : 
                        -0.0035591468f)) : 
                 (data[98 /* injury_claim */] < 5187.5f ? 
                    -0.0016449767f : 
                    -0.018893536f)) : 
             (data[97 /* total_claim_amount */] < 55716.5f ? 
                 (Double.isNaN(data[100]) || data[100 /* vehicle_claim */] < 35110.5f ? 
                     (data[98 /* injury_claim */] < 4859.5f ? 
                        0.0103575f : 
                        -0.00573706f) : 
                     (data[86 /* age */] < 29.5f ? 
                        0.029582253f : 
                        0.00901223f)) : 
                 (data[98 /* injury_claim */] < 6165.5f ? 
                     (Double.isNaN(data[86]) || data[86 /* age */] < 38.5f ? 
                        0.0028659813f : 
                        -0.018005598f) : 
                     (data[85 /* months_as_customer */] < 149.5f ? 
                        -0.00408006f : 
                        0.0033825245f)))));
    return pred;
  } // constant pool size = 71B, number of visited nodes = 16, static init size = 30B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_43 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_43_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_43_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[101 /* auto_year */] < 1995.5f ? 
         (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 32332.5f ? 
             (!Double.isNaN(data[59 /* insured_education_level_High School */]) && (GenModel.bitSetIsInRange(32, 0, data[59]) && (data[59] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[59])) ? 
                -0.017846474f : 
                 (!Double.isNaN(data[1 /* policy_state_OH */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
                    -0.011689525f : 
                    0.0021492222f)) : 
            0.005614439f) : 
         (Double.isNaN(data[89]) || data[89 /* umbrella_limit */] < 6503907.0f ? 
             (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 82815.0f ? 
                 (Double.isNaN(data[64 /* policy_csl_250/500 */]) || !GenModel.bitSetIsInRange(32, 0, data[64]) || (data[64] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[64]) && (data[64] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[64])) ? 
                     (Double.isNaN(data[86]) || data[86 /* age */] < 58.5f ? 
                        -4.7136063E-4f : 
                        -0.016981596f) : 
                     (data[88 /* policy_annual_premium */] < 1038.6775f ? 
                        -0.0037670275f : 
                        0.0041438f)) : 
                -0.013146772f) : 
             (data[105 /* iclaim_severity_int */] < 7874.0f ? 
                -0.0054165744f : 
                0.014704703f)));
    return pred;
  } // constant pool size = 57B, number of visited nodes = 10, static init size = 90B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_44 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_44_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_44_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1390.2205f ? 
         (Double.isNaN(data[84 /* insured_hobbies_yachting */]) || !GenModel.bitSetIsInRange(32, 0, data[84]) || (data[84] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[84]) && (data[84] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[84])) ? 
             (Double.isNaN(data[23 /* insured_occupation_exec-managerial */]) || !GenModel.bitSetIsInRange(32, 0, data[23]) || (data[23] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[23]) && (data[23] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[23])) ? 
                 (Double.isNaN(data[100]) || data[100 /* vehicle_claim */] < 65898.5f ? 
                     (Double.isNaN(data[103]) || data[103 /* pclaim_severity_int */] < 22815.5f ? 
                        5.351428E-4f : 
                        -0.004407529f) : 
                    0.011858328f) : 
                 (Double.isNaN(data[35 /* property_damage_undocumented */]) || !GenModel.bitSetIsInRange(32, 0, data[35]) || (data[35] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[35]) && (data[35] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[35])) ? 
                     (data[95 /* bodily_injuries */] < 1.5f ? 
                        -0.01216638f : 
                        0.008548711f) : 
                    0.02633969f)) : 
             (Double.isNaN(data[99]) || data[99 /* property_claim */] < 9292.5f ? 
                0.0011902078f : 
                0.020698646f)) : 
         (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 3.3667969E10f ? 
             (Double.isNaN(data[105]) || data[105 /* iclaim_severity_int */] < 27661.0f ? 
                 (Double.isNaN(data[105]) || data[105 /* iclaim_severity_int */] < 24635.5f ? 
                     (data[93 /* incident_hour_of_the_day */] < 3.5f ? 
                        -0.012522762f : 
                        -0.0018327005f) : 
                    0.012795286f) : 
                -0.01347998f) : 
             (!Double.isNaN(data[42 /* authorities_contacted_Fire */]) && (GenModel.bitSetIsInRange(32, 0, data[42]) && (data[42] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[42])) ? 
                -0.0057458016f : 
                 (Double.isNaN(data[93]) || data[93 /* incident_hour_of_the_day */] < 12.0f ? 
                    0.019467983f : 
                    0.0013687739f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 14, static init size = 120B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_45 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_45_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_45_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[71])) ? 
         (data[92 /* incident_severity */] < 1.5f ? 
             (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[70])) ? 
                 (Double.isNaN(data[74 /* insured_hobbies_golf */]) || !GenModel.bitSetIsInRange(32, 0, data[74]) || (data[74] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[74]) && (data[74] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[74])) ? 
                     (Double.isNaN(data[7 /* insured_relationship_own-child */]) || !GenModel.bitSetIsInRange(32, 0, data[7]) || (data[7] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[7])) ? 
                        -0.0032005063f : 
                        0.0015025015f) : 
                     (Double.isNaN(data[86]) || data[86 /* age */] < 37.5f ? 
                        0.012733487f : 
                        -0.0045612254f)) : 
                0.0062511223f) : 
             (!Double.isNaN(data[76 /* insured_hobbies_kayaking */]) && (GenModel.bitSetIsInRange(32, 0, data[76]) && (data[76] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[76])) ? 
                -0.01046343f : 
                 (data[104 /* vclaim_severity_int */] < 58252.5f ? 
                    0.016169267f : 
                     (!Double.isNaN(data[78 /* insured_hobbies_paintball */]) && (GenModel.bitSetIsInRange(32, 0, data[78]) && (data[78] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[78])) ? 
                        -0.009977608f : 
                        0.001443258f)))) : 
         (data[95 /* bodily_injuries */] < 0.5f ? 
            -0.0052896976f : 
            0.012866534f));
    return pred;
  } // constant pool size = 72B, number of visited nodes = 10, static init size = 180B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_46 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_46_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_46_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6 /* insured_relationship_other-relative */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[6])) ? 
         (Double.isNaN(data[99]) || data[99 /* property_claim */] < 16597.5f ? 
             (data[97 /* total_claim_amount */] < 56210.5f ? 
                 (Double.isNaN(data[97]) || data[97 /* total_claim_amount */] < 52265.5f ? 
                     (Double.isNaN(data[100]) || data[100 /* vehicle_claim */] < 36978.5f ? 
                        -0.0015584966f : 
                        0.012283115f) : 
                     (data[88 /* policy_annual_premium */] < 1132.6188f ? 
                        0.022690985f : 
                        0.0058913045f)) : 
                 (data[96 /* witnesses */] < 0.5f ? 
                     (!Double.isNaN(data[3 /* collision_type_Side Collision */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
                        -0.015187835f : 
                        -0.0030002624f) : 
                     (!Double.isNaN(data[27 /* insured_occupation_other-service */]) && (GenModel.bitSetIsInRange(32, 0, data[27]) && (data[27] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[27])) ? 
                        -0.012699516f : 
                        3.0353328E-4f))) : 
            0.012443275f) : 
         (Double.isNaN(data[26 /* insured_occupation_machine-op-inspct */]) || !GenModel.bitSetIsInRange(32, 0, data[26]) || (data[26] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[26]) && (data[26] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[26])) ? 
             (Double.isNaN(data[97]) || data[97 /* total_claim_amount */] < 67826.5f ? 
                 (Double.isNaN(data[105]) || data[105 /* iclaim_severity_int */] < 15247.5f ? 
                     (Double.isNaN(data[106]) || data[106 /* tclaim_severity_int */] < 76676.5f ? 
                        -0.0023357153f : 
                        -0.013635307f) : 
                     (Double.isNaN(data[105]) || data[105 /* iclaim_severity_int */] < 22735.5f ? 
                        0.009133041f : 
                        -0.0039581903f)) : 
                 (Double.isNaN(data[106]) || data[106 /* tclaim_severity_int */] < 169502.0f ? 
                     (data[104 /* vclaim_severity_int */] < 60690.5f ? 
                        0.0025320528f : 
                        0.022611484f) : 
                    -0.007986852f)) : 
            0.014736896f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 16, static init size = 120B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_47 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_47_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_47_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[69 /* insured_hobbies_camping */]) && (GenModel.bitSetIsInRange(32, 0, data[69]) && (data[69] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[69])) ? 
         (data[99 /* property_claim */] < 5155.0f ? 
            0.0036189656f : 
             (data[97 /* total_claim_amount */] < 64842.0f ? 
                -0.014345491f : 
                -0.002829802f)) : 
         (Double.isNaN(data[46 /* auto_make_BMW */]) || !GenModel.bitSetIsInRange(32, 0, data[46]) || (data[46] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[46]) && (data[46] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[46])) ? 
             (Double.isNaN(data[108]) || data[108 /* umlimit_tclaim_int */] < 4.71351558E11f ? 
                 (Double.isNaN(data[37 /* incident_state_OH */]) || !GenModel.bitSetIsInRange(32, 0, data[37]) || (data[37] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[37]) && (data[37] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[37])) ? 
                     (Double.isNaN(data[98]) || data[98 /* injury_claim */] < 7665.5f ? 
                        8.597025E-4f : 
                        -0.0024923864f) : 
                    0.009460468f) : 
                0.009596417f) : 
             (Double.isNaN(data[42 /* authorities_contacted_Fire */]) || !GenModel.bitSetIsInRange(32, 0, data[42]) || (data[42] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[42]) && (data[42] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[42])) ? 
                 (data[102 /* policy_bind_year */] < 2000.5f ? 
                    -0.009168116f : 
                     (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2007.5f ? 
                        0.013993151f : 
                        -0.005371646f)) : 
                0.024265207f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 10, static init size = 120B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_48 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_48_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_48_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[107 /* prem_claim_int */] < 3476279.5f ? 
        -0.0084481845f : 
         (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[71])) ? 
             (Double.isNaN(data[84 /* insured_hobbies_yachting */]) || !GenModel.bitSetIsInRange(32, 0, data[84]) || (data[84] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[84]) && (data[84] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[84])) ? 
                 (Double.isNaN(data[99]) || data[99 /* property_claim */] < 11095.5f ? 
                     (Double.isNaN(data[99]) || data[99 /* property_claim */] < 10402.5f ? 
                        -1.8752927E-4f : 
                        0.0087021785f) : 
                     (!Double.isNaN(data[17 /* police_report_available_undocumented */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && (data[17] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[17])) ? 
                        -0.0077588023f : 
                        -7.355105E-5f)) : 
                 (Double.isNaN(data[103]) || data[103 /* pclaim_severity_int */] < 23291.0f ? 
                     (data[90 /* capital-gains */] < 39134.0f ? 
                        0.004096624f : 
                        -0.008171896f) : 
                    0.018088657f)) : 
             (data[105 /* iclaim_severity_int */] < 14997.5f ? 
                0.018970957f : 
                -0.0015352482f)));
    return pred;
  } // constant pool size = 53B, number of visited nodes = 9, static init size = 90B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_49 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_49_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_49_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[97]) || data[97 /* total_claim_amount */] < 68162.5f ? 
         (Double.isNaN(data[100]) || data[100 /* vehicle_claim */] < 50838.5f ? 
             (Double.isNaN(data[98]) || data[98 /* injury_claim */] < 9499.5f ? 
                 (data[87 /* policy_deductable */] < 752.0f ? 
                     (Double.isNaN(data[99]) || data[99 /* property_claim */] < 10952.5f ? 
                        -7.763192E-4f : 
                        -0.016211024f) : 
                     (!Double.isNaN(data[33 /* insured_occupation_transport-moving */]) && (GenModel.bitSetIsInRange(32, 0, data[33]) && (data[33] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[33])) ? 
                        -0.009951684f : 
                        0.0030820013f)) : 
                 (data[85 /* months_as_customer */] < 57.5f ? 
                    -0.021545788f : 
                     (!Double.isNaN(data[62 /* insured_education_level_Masters */]) && (GenModel.bitSetIsInRange(32, 0, data[62]) && (data[62] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[62])) ? 
                        -0.014190979f : 
                        -4.2514596E-4f))) : 
            -0.01348773f) : 
         (Double.isNaN(data[95]) || data[95 /* bodily_injuries */] < 1.5f ? 
             (Double.isNaN(data[94]) || data[94 /* number_of_vehicles_involved */] < 2.5f ? 
                 (Double.isNaN(data[42 /* authorities_contacted_Fire */]) || !GenModel.bitSetIsInRange(32, 0, data[42]) || (data[42] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[42]) && (data[42] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[42])) ? 
                     (Double.isNaN(data[103]) || data[103 /* pclaim_severity_int */] < 25951.5f ? 
                        -0.006117425f : 
                        0.006003962f) : 
                     (data[93 /* incident_hour_of_the_day */] < 10.0f ? 
                        0.0016602285f : 
                        0.024581859f)) : 
                 (Double.isNaN(data[105]) || data[105 /* iclaim_severity_int */] < 35495.5f ? 
                     (Double.isNaN(data[103]) || data[103 /* pclaim_severity_int */] < 22566.5f ? 
                        -0.002726092f : 
                        -0.026627136f) : 
                    0.0045106565f)) : 
             (Double.isNaN(data[99]) || data[99 /* property_claim */] < 13592.5f ? 
                 (Double.isNaN(data[93]) || data[93 /* incident_hour_of_the_day */] < 18.0f ? 
                     (Double.isNaN(data[93]) || data[93 /* incident_hour_of_the_day */] < 11.5f ? 
                        0.017160831f : 
                        -0.0019245655f) : 
                    0.024967482f) : 
                 (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2010.0f ? 
                     (Double.isNaN(data[85]) || data[85 /* months_as_customer */] < 239.5f ? 
                        -0.00337049f : 
                        0.011394679f) : 
                    -0.01604238f))));
    return pred;
  } // constant pool size = 97B, number of visited nodes = 20, static init size = 90B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_50 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_50_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_50_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[106 /* tclaim_severity_int */] < 3581.5f ? 
         (data[85 /* months_as_customer */] < 65.5f ? 
            0.00339851f : 
             (Double.isNaN(data[86]) || data[86 /* age */] < 44.5f ? 
                 (Double.isNaN(data[93]) || data[93 /* incident_hour_of_the_day */] < 7.5f ? 
                     (Double.isNaN(data[101]) || data[101 /* auto_year */] < 2006.5f ? 
                        -3.8966245E-4f : 
                        -0.004939892f) : 
                    -0.005166361f) : 
                -0.007240658f)) : 
         (data[107 /* prem_claim_int */] < 6103669.0f ? 
             (data[86 /* age */] < 35.5f ? 
                -0.004831838f : 
                0.02119184f) : 
             (Double.isNaN(data[85]) || data[85 /* months_as_customer */] < 463.5f ? 
                 (Double.isNaN(data[71 /* insured_hobbies_cross-fit */]) || !GenModel.bitSetIsInRange(32, 0, data[71]) || (data[71] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[71]) && (data[71] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[71])) ? 
                     (!Double.isNaN(data[40 /* incident_state_VA */]) && (GenModel.bitSetIsInRange(32, 0, data[40]) && (data[40] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[40])) ? 
                        -0.0043150326f : 
                        4.8457205E-4f) : 
                     (Double.isNaN(data[105]) || data[105 /* iclaim_severity_int */] < 18497.5f ? 
                        0.016584234f : 
                        -0.0025758436f)) : 
                -0.012586854f)));
    return pred;
  } // constant pool size = 56B, number of visited nodes = 11, static init size = 60B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_51 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_51_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_51_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[85 /* months_as_customer */] < 8.5f ? 
        -0.0076573673f : 
         (data[85 /* months_as_customer */] < 17.5f ? 
            0.013993408f : 
             (data[85 /* months_as_customer */] < 56.5f ? 
                 (Double.isNaN(data[85]) || data[85 /* months_as_customer */] < 44.0f ? 
                     (Double.isNaN(data[90]) || data[90 /* capital-gains */] < 17062.5f ? 
                        0.005212289f : 
                        -0.0065967576f) : 
                    -0.02251978f) : 
                 (data[104 /* vclaim_severity_int */] < 3202.5f ? 
                     (!Double.isNaN(data[64 /* policy_csl_250/500 */]) && (GenModel.bitSetIsInRange(32, 0, data[64]) && (data[64] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[64])) ? 
                        -0.0057320055f : 
                        -0.0016667872f) : 
                     (data[105 /* iclaim_severity_int */] < 999.5f ? 
                        0.0065463977f : 
                        3.0130488E-4f)))));
    return pred;
  } // constant pool size = 39B, number of visited nodes = 8, static init size = 30B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_52 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_52_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_52_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[101 /* auto_year */] < 1995.5f ? 
         (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 32332.5f ? 
             (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2003.5f ? 
                 (data[99 /* property_claim */] < 6802.5f ? 
                    -0.019138256f : 
                    -0.00589978f) : 
                0.001423149f) : 
            0.005246943f) : 
         (data[101 /* auto_year */] < 1997.5f ? 
             (Double.isNaN(data[6 /* insured_relationship_other-relative */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[6])) ? 
                 (data[88 /* policy_annual_premium */] < 1215.2372f ? 
                     (Double.isNaN(data[86]) || data[86 /* age */] < 39.5f ? 
                        0.002104774f : 
                        -0.0092888465f) : 
                     (data[92 /* incident_severity */] < 1.5f ? 
                        -0.0015197919f : 
                        0.011666346f)) : 
                0.015839987f) : 
             (data[86 /* age */] < 25.5f ? 
                 (Double.isNaN(data[96]) || data[96 /* witnesses */] < 0.5f ? 
                    -0.0033282517f : 
                    0.016587114f) : 
                 (data[85 /* months_as_customer */] < 57.5f ? 
                     (Double.isNaN(data[86]) || data[86 /* age */] < 35.5f ? 
                        -2.942556E-4f : 
                        -0.018695008f) : 
                     (!Double.isNaN(data[82 /* insured_hobbies_sleeping */]) && (GenModel.bitSetIsInRange(32, 0, data[82]) && (data[82] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[82])) ? 
                        -0.0059992187f : 
                        3.3657436E-4f)))));
    return pred;
  } // constant pool size = 68B, number of visited nodes = 14, static init size = 60B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_53 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_53_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_53_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[88]) || data[88 /* policy_annual_premium */] < 1390.2205f ? 
         (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 8.7727904E7f ? 
             (Double.isNaN(data[98]) || data[98 /* injury_claim */] < 15331.5f ? 
                 (Double.isNaN(data[98]) || data[98 /* injury_claim */] < 9582.5f ? 
                     (Double.isNaN(data[23 /* insured_occupation_exec-managerial */]) || !GenModel.bitSetIsInRange(32, 0, data[23]) || (data[23] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[23]) && (data[23] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[23])) ? 
                        1.6893997E-4f : 
                        0.010673764f) : 
                     (!Double.isNaN(data[5 /* insured_relationship_not-in-family */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                        -0.012053476f : 
                        -0.0018487807f)) : 
                0.010936731f) : 
             (!Double.isNaN(data[40 /* incident_state_VA */]) && (GenModel.bitSetIsInRange(32, 0, data[40]) && (data[40] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[40])) ? 
                -0.010390395f : 
                 (Double.isNaN(data[93]) || data[93 /* incident_hour_of_the_day */] < 16.5f ? 
                     (data[92 /* incident_severity */] < 1.5f ? 
                        0.0018067705f : 
                        0.017899407f) : 
                     (Double.isNaN(data[103]) || data[103 /* pclaim_severity_int */] < 29471.5f ? 
                        -0.0053839115f : 
                        0.0029740273f)))) : 
         (Double.isNaN(data[106]) || data[106 /* tclaim_severity_int */] < 198448.5f ? 
             (Double.isNaN(data[90]) || data[90 /* capital-gains */] < 48628.5f ? 
                 (Double.isNaN(data[90]) || data[90 /* capital-gains */] < 22985.0f ? 
                     (Double.isNaN(data[105]) || data[105 /* iclaim_severity_int */] < 21657.0f ? 
                        -0.0030572873f : 
                        0.012401656f) : 
                     (Double.isNaN(data[93]) || data[93 /* incident_hour_of_the_day */] < 10.5f ? 
                        -0.0026466171f : 
                        -0.017567327f)) : 
                 (Double.isNaN(data[85]) || data[85 /* months_as_customer */] < 248.0f ? 
                     (Double.isNaN(data[34 /* property_damage_YES */]) || !GenModel.bitSetIsInRange(32, 0, data[34]) || (data[34] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[34]) && (data[34] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[34])) ? 
                        -0.007940651f : 
                        0.012241169f) : 
                     (data[103 /* pclaim_severity_int */] < 14373.5f ? 
                        0.0058813123f : 
                        0.020546054f))) : 
            -0.0115083195f));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 18, static init size = 120B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_54 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_54_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_54_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[69 /* insured_hobbies_camping */]) && (GenModel.bitSetIsInRange(32, 0, data[69]) && (data[69] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[69])) ? 
         (data[102 /* policy_bind_year */] < 1997.5f ? 
            0.004840658f : 
             (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2008.0f ? 
                 (data[106 /* tclaim_severity_int */] < 73364.5f ? 
                    -0.0025810848f : 
                    -0.018373867f) : 
                -2.5787022E-5f)) : 
         (data[99 /* property_claim */] < 5270.5f ? 
             (Double.isNaN(data[99]) || data[99 /* property_claim */] < 4756.5f ? 
                 (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 57785.5f ? 
                     (Double.isNaN(data[101]) || data[101 /* auto_year */] < 2008.5f ? 
                        0.0032480275f : 
                        -0.0040133987f) : 
                     (Double.isNaN(data[97]) || data[97 /* total_claim_amount */] < 6604.5f ? 
                        -0.004094588f : 
                        -0.013535684f)) : 
                 (!Double.isNaN(data[19 /* incident_type_Single Vehicle Collision */]) && (GenModel.bitSetIsInRange(32, 0, data[19]) && (data[19] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[19])) ? 
                    -0.018448599f : 
                    -0.0023465536f)) : 
             (data[97 /* total_claim_amount */] < 55716.5f ? 
                 (Double.isNaN(data[100]) || data[100 /* vehicle_claim */] < 35110.5f ? 
                     (data[98 /* injury_claim */] < 4859.5f ? 
                        0.008576385f : 
                        -0.004734004f) : 
                     (!Double.isNaN(data[65 /* policy_csl_500/1000 */]) && (GenModel.bitSetIsInRange(32, 0, data[65]) && (data[65] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[65])) ? 
                        -0.0038714793f : 
                        0.015284915f)) : 
                 (data[98 /* injury_claim */] < 6165.5f ? 
                     (Double.isNaN(data[86]) || data[86 /* age */] < 38.5f ? 
                        0.0024865281f : 
                        -0.0152741475f) : 
                     (data[85 /* months_as_customer */] < 149.5f ? 
                        -0.0029886076f : 
                        0.0027031156f)))));
    return pred;
  } // constant pool size = 85B, number of visited nodes = 17, static init size = 90B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_55 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_55_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_55_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 1.13914216E8f ? 
         (Double.isNaN(data[107]) || data[107 /* prem_claim_int */] < 1.11025624E8f ? 
             (Double.isNaN(data[91]) || data[91 /* capital-loss */] < 83542.5f ? 
                 (Double.isNaN(data[101]) || data[101 /* auto_year */] < 2012.5f ? 
                     (!Double.isNaN(data[25 /* insured_occupation_handlers-cleaners */]) && (GenModel.bitSetIsInRange(32, 0, data[25]) && (data[25] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[25])) ? 
                        -0.0088883815f : 
                        1.5321144E-4f) : 
                     (Double.isNaN(data[2 /* collision_type_Rear Collision */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[2])) ? 
                        -0.0010992417f : 
                        0.013644165f)) : 
                -0.011389713f) : 
            0.012152683f) : 
         (data[102 /* policy_bind_year */] < 1997.5f ? 
            -0.014754534f : 
             (data[97 /* total_claim_amount */] < 76697.5f ? 
                0.010257743f : 
                 (data[86 /* age */] < 35.5f ? 
                    0.001998352f : 
                    -0.00832532f))));
    return pred;
  } // constant pool size = 48B, number of visited nodes = 9, static init size = 60B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_56 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_56_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_56_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[51 /* auto_make_Jeep */]) && (GenModel.bitSetIsInRange(32, 0, data[51]) && (data[51] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[51])) ? 
         (data[102 /* policy_bind_year */] < 1995.5f ? 
            0.0054858206f : 
             (Double.isNaN(data[90]) || data[90 /* capital-gains */] < 49361.0f ? 
                 (data[95 /* bodily_injuries */] < 0.5f ? 
                    -0.0103848195f : 
                     (data[104 /* vclaim_severity_int */] < 53409.5f ? 
                        -0.0024528904f : 
                        0.006020688f)) : 
                -0.015596763f)) : 
         (!Double.isNaN(data[73 /* insured_hobbies_exercise */]) && (GenModel.bitSetIsInRange(32, 0, data[73]) && (data[73] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[73])) ? 
             (Double.isNaN(data[102]) || data[102 /* policy_bind_year */] < 2004.5f ? 
                 (data[103 /* pclaim_severity_int */] < 15118.5f ? 
                    -0.0063995747f : 
                    0.011485366f) : 
                -0.017193219f) : 
             (!Double.isNaN(data[3 /* collision_type_Side Collision */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[3])) ? 
                 (Double.isNaN(data[0 /* policy_state_IN */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (data[0] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[0]) && (data[0] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[0])) ? 
                     (data[88 /* policy_annual_premium */] < 899.952f ? 
                        -0.016058795f : 
                        -0.0028720126f) : 
                     (Double.isNaN(data[99]) || data[99 /* property_claim */] < 8876.5f ? 
                        -0.0026174139f : 
                        0.013547074f)) : 
                 (Double.isNaN(data[90]) || data[90 /* capital-gains */] < 47084.5f ? 
                     (Double.isNaN(data[86]) || data[86 /* age */] < 58.5f ? 
                        7.263529E-4f : 
                        -0.018575696f) : 
                     (data[90 /* capital-gains */] < 48701.5f ? 
                        0.022266792f : 
                        0.0029530488f)))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 15, static init size = 120B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_57 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_57_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_57_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[75 /* insured_hobbies_hiking */]) || !GenModel.bitSetIsInRange(32, 0, data[75]) || (data[75] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[75]) && (data[75] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[75])) ? 
         (!Double.isNaN(data[30 /* insured_occupation_protective-serv */]) && (GenModel.bitSetIsInRange(32, 0, data[30]) && (data[30] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[30])) ? 
             (data[100 /* vehicle_claim */] < 37020.5f ? 
                -0.0111201005f : 
                 (data[99 /* property_claim */] < 8541.5f ? 
                    0.004732059f : 
                    -0.0033114455f)) : 
             (data[85 /* months_as_customer */] < 149.5f ? 
                 (Double.isNaN(data[86]) || data[86 /* age */] < 35.5f ? 
                     (Double.isNaN(data[99]) || data[99 /* property_claim */] < 8876.5f ? 
                        -0.0028348288f : 
                        0.004516779f) : 
                     (data[93 /* incident_hour_of_the_day */] < 13.5f ? 
                        -0.021364188f : 
                        -0.0046337624f)) : 
                 (data[85 /* months_as_customer */] < 189.5f ? 
                     (Double.isNaN(data[92]) || data[92 /* incident_severity */] < 2.5f ? 
                        0.013349878f : 
                        -6.507192E-4f) : 
                     (Double.isNaN(data[6 /* insured_relationship_other-relative */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[6])) ? 
                        -0.001324599f : 
                        0.004779363f)))) : 
         (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 121966.5f ? 
             (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 52646.0f ? 
                -0.00414571f : 
                0.027246917f) : 
            -0.008815908f));
    return pred;
  } // constant pool size = 69B, number of visited nodes = 13, static init size = 90B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_58 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_58_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_58_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[69 /* insured_hobbies_camping */]) && (GenModel.bitSetIsInRange(32, 0, data[69]) && (data[69] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[69])) ? 
         (data[99 /* property_claim */] < 5155.0f ? 
            0.0035109809f : 
             (data[97 /* total_claim_amount */] < 64842.0f ? 
                -0.01261854f : 
                -0.0021904835f)) : 
         (data[86 /* age */] < 27.0f ? 
             (data[101 /* auto_year */] < 2000.5f ? 
                -0.0054828f : 
                 (data[93 /* incident_hour_of_the_day */] < 12.0f ? 
                    0.015956068f : 
                    0.0013840586f)) : 
             (data[85 /* months_as_customer */] < 73.5f ? 
                 (Double.isNaN(data[104]) || data[104 /* vclaim_severity_int */] < 102465.5f ? 
                     (Double.isNaN(data[99]) || data[99 /* property_claim */] < 9788.5f ? 
                        -0.003942041f : 
                        0.006363485f) : 
                     (data[98 /* injury_claim */] < 7093.5f ? 
                        -0.004373748f : 
                        -0.019732142f)) : 
                 (Double.isNaN(data[46 /* auto_make_BMW */]) || !GenModel.bitSetIsInRange(32, 0, data[46]) || (data[46] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[46]) && (data[46] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[46])) ? 
                     (Double.isNaN(data[43 /* authorities_contacted_Other */]) || !GenModel.bitSetIsInRange(32, 0, data[43]) || (data[43] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[43]) && (data[43] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[43])) ? 
                        -6.711888E-4f : 
                        0.0028067017f) : 
                     (Double.isNaN(data[42 /* authorities_contacted_Fire */]) || !GenModel.bitSetIsInRange(32, 0, data[42]) || (data[42] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[42]) && (data[42] < 2) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[42])) ? 
                        6.64456E-4f : 
                        0.02115437f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 13, static init size = 120B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
}


class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Forest_59 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_59_class_0.score0(fdata);
  }
}
class gbm_0719f438_93e7_41f1_baa2_005c9feaf623_Tree_59_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[99]) || data[99 /* property_claim */] < 11118.5f ? 
         (Double.isNaN(data[99]) || data[99 /* property_claim */] < 10912.5f ? 
             (Double.isNaN(data[70 /* insured_hobbies_chess */]) || !GenModel.bitSetIsInRange(32, 0, data[70]) || (data[70] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[70]) && (data[70] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[70])) ? 
                 (Double.isNaN(data[94]) || data[94 /* number_of_vehicles_involved */] < 3.5f ? 
                     (Double.isNaN(data[75 /* insured_hobbies_hiking */]) || !GenModel.bitSetIsInRange(32, 0, data[75]) || (data[75] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[75]) && (data[75] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[75])) ? 
                        -7.879393E-4f : 
                        0.0069218464f) : 
                    0.011839715f) : 
                 (Double.isNaN(data[101]) || data[101 /* auto_year */] < 2007.5f ? 
                     (data[104 /* vclaim_severity_int */] < 79609.5f ? 
                        0.008342297f : 
                        0.01950503f) : 
                    -0.008711187f)) : 
            0.018027756f) : 
         (Double.isNaN(data[85]) || data[85 /* months_as_customer */] < 336.5f ? 
             (data[86 /* age */] < 35.5f ? 
                 (Double.isNaN(data[86]) || data[86 /* age */] < 30.5f ? 
                     (!Double.isNaN(data[59 /* insured_education_level_High School */]) && (GenModel.bitSetIsInRange(32, 0, data[59]) && (data[59] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[59])) ? 
                        -0.011725598f : 
                        3.7947806E-4f) : 
                     (Double.isNaN(data[95]) || data[95 /* bodily_injuries */] < 1.5f ? 
                        0.012654539f : 
                        -0.004650702f)) : 
                 (data[97 /* total_claim_amount */] < 74014.5f ? 
                     (data[106 /* tclaim_severity_int */] < 115402.5f ? 
                        -0.0028725392f : 
                        -0.020124651f) : 
                     (Double.isNaN(data[87]) || data[87 /* policy_deductable */] < 1496.5f ? 
                        0.007046079f : 
                        -0.010869143f))) : 
             (data[85 /* months_as_customer */] < 404.0f ? 
                0.013004462f : 
                2.597591E-4f)));
    return pred;
  } // constant pool size = 81B, number of visited nodes = 16, static init size = 90B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
}


