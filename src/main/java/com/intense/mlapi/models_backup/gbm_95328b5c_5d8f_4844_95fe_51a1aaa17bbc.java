/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2024-10-10T14:06:22.635+05:30
  3.47.0.99999
  
  Standalone prediction code with sample test data for GBMModel named gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://172.16.0.18:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://172.16.0.18:54321/3/Models.java/gbm-95328b5c-5d8f-4844-95fe-51a1aaa17bbc > gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
package com.intense.mlapi.models;
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc", algorithm="gbm")
public class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Binomial; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 15; }
  public int nclasses() { return 2; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 2;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* age */ null,
    /* job */ gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_1.VALUES,
    /* marital */ gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_2.VALUES,
    /* education */ gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_3.VALUES,
    /* default */ gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_4.VALUES,
    /* housing */ gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_5.VALUES,
    /* loan */ gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_6.VALUES,
    /* contact */ gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_7.VALUES,
    /* month */ gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_8.VALUES,
    /* day_of_week */ gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_9.VALUES,
    /* duration */ null,
    /* campaign */ null,
    /* pdays */ null,
    /* previous */ null,
    /* poutcome */ gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_14.VALUES,
    /* y */ gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_15.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.8873444613050075,0.11265553869499241};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {0.8873444613050075,0.11265553869499241};

  public gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc() { super(NAMES,DOMAINS,"y"); }
  public String getUUID() { return Long.toString(1183911429266101890L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_0.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_1.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_2.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_3.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_4.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_5.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_6.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_7.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_8.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_9.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_10.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_11.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_12.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_13.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_14.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_15.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_16.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_17.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_18.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_19.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_20.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_21.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_22.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_23.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_24.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_25.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_26.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_27.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_28.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_29.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_30.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_31.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_32.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_33.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_34.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_35.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_36.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_37.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_38.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_39.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_40.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_41.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_42.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_43.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_44.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_45.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_46.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_47.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_48.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_49.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_50.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_51.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_52.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_53.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_54.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_55.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_56.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_57.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_58.score0(data,preds);
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_59.score0(data,preds);
    preds[2] = preds[1] + -2.0638984181654703;
    preds[2] = 1./(1. + Math.min(1e19, Math.exp(-(preds[2]))));
    preds[1] = 1.0-preds[2];
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.37797562700008197);
    return preds;
  }
}
// The class representing training column names
class NamesHolder_gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc implements java.io.Serializable {
  public static final String[] VALUES = new String[15];
  static {
    NamesHolder_gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_0.fill(VALUES);
  }
  static final class NamesHolder_gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "age";
      sa[1] = "job";
      sa[2] = "marital";
      sa[3] = "education";
      sa[4] = "default";
      sa[5] = "housing";
      sa[6] = "loan";
      sa[7] = "contact";
      sa[8] = "month";
      sa[9] = "day_of_week";
      sa[10] = "duration";
      sa[11] = "campaign";
      sa[12] = "pdays";
      sa[13] = "previous";
      sa[14] = "poutcome";
    }
  }
}
// The class representing column job
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_1 implements java.io.Serializable {
  public static final String[] VALUES = new String[12];
  static {
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_1_0.fill(VALUES);
  }
  static final class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_1_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "admin.";
      sa[1] = "blue-collar";
      sa[2] = "entrepreneur";
      sa[3] = "housemaid";
      sa[4] = "management";
      sa[5] = "retired";
      sa[6] = "self-employed";
      sa[7] = "services";
      sa[8] = "student";
      sa[9] = "technician";
      sa[10] = "unemployed";
      sa[11] = "unknown";
    }
  }
}
// The class representing column marital
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_2 implements java.io.Serializable {
  public static final String[] VALUES = new String[4];
  static {
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_2_0.fill(VALUES);
  }
  static final class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_2_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "divorced";
      sa[1] = "married";
      sa[2] = "single";
      sa[3] = "unknown";
    }
  }
}
// The class representing column education
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_3 implements java.io.Serializable {
  public static final String[] VALUES = new String[8];
  static {
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_3_0.fill(VALUES);
  }
  static final class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_3_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "basic.4y";
      sa[1] = "basic.6y";
      sa[2] = "basic.9y";
      sa[3] = "high.school";
      sa[4] = "illiterate";
      sa[5] = "professional.course";
      sa[6] = "university.degree";
      sa[7] = "unknown";
    }
  }
}
// The class representing column default
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_4 implements java.io.Serializable {
  public static final String[] VALUES = new String[3];
  static {
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_4_0.fill(VALUES);
  }
  static final class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_4_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "no";
      sa[1] = "unknown";
      sa[2] = "yes";
    }
  }
}
// The class representing column housing
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_5 implements java.io.Serializable {
  public static final String[] VALUES = new String[3];
  static {
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_5_0.fill(VALUES);
  }
  static final class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_5_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "no";
      sa[1] = "unknown";
      sa[2] = "yes";
    }
  }
}
// The class representing column loan
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_6 implements java.io.Serializable {
  public static final String[] VALUES = new String[3];
  static {
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_6_0.fill(VALUES);
  }
  static final class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_6_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "no";
      sa[1] = "unknown";
      sa[2] = "yes";
    }
  }
}
// The class representing column contact
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_7 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_7_0.fill(VALUES);
  }
  static final class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_7_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "cellular";
      sa[1] = "telephone";
    }
  }
}
// The class representing column month
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_8 implements java.io.Serializable {
  public static final String[] VALUES = new String[10];
  static {
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_8_0.fill(VALUES);
  }
  static final class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_8_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "apr";
      sa[1] = "aug";
      sa[2] = "dec";
      sa[3] = "jul";
      sa[4] = "jun";
      sa[5] = "mar";
      sa[6] = "may";
      sa[7] = "nov";
      sa[8] = "oct";
      sa[9] = "sep";
    }
  }
}
// The class representing column day_of_week
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_9 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_9_0.fill(VALUES);
  }
  static final class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_9_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "fri";
      sa[1] = "mon";
      sa[2] = "thu";
      sa[3] = "tue";
      sa[4] = "wed";
    }
  }
}
// The class representing column poutcome
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_14 implements java.io.Serializable {
  public static final String[] VALUES = new String[3];
  static {
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_14_0.fill(VALUES);
  }
  static final class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_14_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "failure";
      sa[1] = "nonexistent";
      sa[2] = "success";
    }
  }
}
// The class representing column y
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_15 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_15_0.fill(VALUES);
  }
  static final class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_ColInfo_15_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "no";
      sa[1] = "yes";
    }
  }
}

class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_0_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 523.5f ? 
         (data[12 /* pdays */] < 513.0f ? 
             (data[10 /* duration */] < 163.5f ? 
                 (Double.isNaN(data[11]) || data[11 /* campaign */] < 2.5f ? 
                     (data[10 /* duration */] < 79.5f ? 
                        -0.039498918f : 
                        0.26064336f) : 
                     (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[9])) ? 
                        -0.112695806f : 
                        0.05403044f)) : 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                        0.3136861f : 
                        0.600325f) : 
                     (Double.isNaN(data[11]) || data[11 /* campaign */] < 3.5f ? 
                        0.6945342f : 
                        0.4986338f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 62.5f ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 262.0f ? 
                        -0.09403169f : 
                        -0.022152958f) : 
                     (data[10 /* duration */] < 122.5f ? 
                        -0.049181044f : 
                        0.36530754f)) : 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 184.5f ? 
                     (data[10 /* duration */] < 95.5f ? 
                        -0.057881698f : 
                        0.16326489f) : 
                     (data[10 /* duration */] < 280.5f ? 
                        0.34306553f : 
                        0.54271084f)))) : 
         (Double.isNaN(data[10]) || data[10 /* duration */] < 833.5f ? 
             (data[12 /* pdays */] < 510.0f ? 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[9])) ? 
                        0.25107056f : 
                        0.6018453f) : 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[8])) ? 
                        0.5972354f : 
                        0.84286964f)) : 
                 (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[7])) ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
                        0.09739318f : 
                        0.51610035f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[8])) ? 
                        0.23234065f : 
                        0.37626818f))) : 
             (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[7])) ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[8])) ? 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[3])) ? 
                        0.2712798f : 
                        0.384256f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[1])) ? 
                        0.4836712f : 
                        0.88766176f)) : 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[8])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[1])) ? 
                        0.35468435f : 
                        0.501756f) : 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 1695.5f ? 
                        0.5582757f : 
                        0.33190754f)))));
    return pred;
  } // constant pool size = 206B, number of visited nodes = 31, static init size = 480B
  // {00011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {24, 0, 0, 0};
  // {01111100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {62, 3, 0, 0};
  // {10011101 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-71, 11, 0, 0};
  // {00100100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {36, 3, 0, 0};
  // {10110110 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {109, 7, 0, 0};
  // {01101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {22, 0, 0, 0};
  // {11110101 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-81, 3, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {11100100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {39, 1, 0, 0};
  // {01101110 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {118, 3, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {1, 0, 0, 0};
  // {11101101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-73, 0, 0, 0};
  // {01100111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-26, 0, 0, 0};
  // {00000100 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {32, 12, 0, 0};
  // {11001110 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {115, 2, 0, 0};
  // {11001011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {-45, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_1_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 523.5f ? 
         (data[12 /* pdays */] < 513.0f ? 
             (data[10 /* duration */] < 161.5f ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 125.5f ? 
                     (data[12 /* pdays */] < 3.5f ? 
                        0.15527053f : 
                        -0.03504196f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
                        0.059845533f : 
                        0.29385635f)) : 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                     (Double.isNaN(data[12]) || data[12 /* pdays */] < 8.5f ? 
                        0.35502252f : 
                        0.16221724f) : 
                     (data[10 /* duration */] < 190.5f ? 
                        0.30665293f : 
                        0.387068f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[8])) ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 62.5f ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 352.5f ? 
                        -0.085297175f : 
                        0.0098402295f) : 
                     (data[10 /* duration */] < 131.0f ? 
                        -0.018185074f : 
                        0.25425667f)) : 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 184.5f ? 
                     (data[10 /* duration */] < 95.5f ? 
                        -0.054634966f : 
                        0.1289038f) : 
                     (data[10 /* duration */] < 269.5f ? 
                        0.22883889f : 
                        0.32157123f)))) : 
         (Double.isNaN(data[10]) || data[10 /* duration */] < 833.5f ? 
             (data[12 /* pdays */] < 510.0f ? 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                        0.15894888f : 
                        0.39486182f) : 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[3])) ? 
                        0.3937206f : 
                        0.45091927f)) : 
                 (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[7])) ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[8])) ? 
                        0.083785444f : 
                        0.38155186f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
                        0.17384064f : 
                        0.25257403f))) : 
             (data[12 /* pdays */] < 508.0f ? 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[8])) ? 
                    0.28096643f : 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[3])) ? 
                        0.3641982f : 
                        0.56676424f)) : 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[8])) ? 
                     (Double.isNaN(data[11]) || data[11 /* campaign */] < 7.5f ? 
                        0.26864177f : 
                        -0.049943566f) : 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 1280.5f ? 
                        0.28880247f : 
                        0.3577812f)))));
    return pred;
  } // constant pool size = 182B, number of visited nodes = 30, static init size = 360B
  // {10011100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {57, 1, 0, 0};
  // {01111100 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {62, 2, 0, 0};
  // {00100100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {36, 3, 0, 0};
  // {01011101 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-70, 3, 0, 0};
  // {10110010 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {77, 6, 0, 0};
  // {00100010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {68, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10100100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {37, 1, 0, 0};
  // {01101110 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {118, 3, 0, 0};
  // {11010110 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {107, 3, 0, 0};
  // {00010101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-88, 0, 0, 0};
  // {11111100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {63, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_2_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 504.5f ? 
         (data[12 /* pdays */] < 513.0f ? 
             (data[10 /* duration */] < 162.5f ? 
                 (Double.isNaN(data[11]) || data[11 /* campaign */] < 2.5f ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
                        0.08077396f : 
                        0.23608573f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                        -0.11309237f : 
                        0.0535345f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                        0.1182189f : 
                        0.276335f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                        0.25455967f : 
                        0.29284889f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 240.5f ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                        -0.09635861f : 
                        0.09184825f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                        -0.03616343f : 
                        0.25461096f)) : 
                 (data[10 /* duration */] < 136.5f ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 93.5f ? 
                        -0.08275878f : 
                        0.049364462f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[8])) ? 
                        0.09016682f : 
                        0.19210044f)))) : 
         (data[10 /* duration */] < 703.5f ? 
             (data[12 /* pdays */] < 20.0f ? 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[8])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[1])) ? 
                        0.15806668f : 
                        0.34176332f) : 
                     (Double.isNaN(data[12]) || data[12 /* pdays */] < 9.5f ? 
                        0.33193102f : 
                        0.2495808f)) : 
                 (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[7])) ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[8])) ? 
                        0.04715143f : 
                        0.2878358f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[8])) ? 
                        0.10146599f : 
                        0.16928223f))) : 
             (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[7])) ? 
                 (data[10 /* duration */] < 868.5f ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[8])) ? 
                        0.11733471f : 
                        0.3254595f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[8])) ? 
                        0.18132651f : 
                        0.2297104f)) : 
                 (data[0 /* age */] < 36.5f ? 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[3])) ? 
                        0.2136386f : 
                        0.29719657f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[8])) ? 
                        0.1848612f : 
                        0.2304468f)))));
    return pred;
  } // constant pool size = 211B, number of visited nodes = 31, static init size = 510B
  // {00000101 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-96, 2, 0, 0};
  // {11100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {7, 0, 0, 0};
  // {10011101 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-71, 7, 0, 0};
  // {01111100 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {62, 2, 0, 0};
  // {00110100 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {44, 2, 0, 0};
  // {10100100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {37, 3, 0, 0};
  // {01111111 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-2, 3, 0, 0};
  // {01011101 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-70, 3, 0, 0};
  // {00110110 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {108, 6, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
  // {10100100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {37, 1, 0, 0};
  // {01101110 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {118, 3, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {1, 0, 0, 0};
  // {10100100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {37, 3, 0, 0};
  // {11111101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-65, 0, 0, 0};
  // {01011101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {-70, 0, 0, 0};
  // {01001110 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {114, 2, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_3_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 528.5f ? 
         (data[12 /* pdays */] < 513.0f ? 
             (data[10 /* duration */] < 161.5f ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 125.5f ? 
                     (data[12 /* pdays */] < 3.5f ? 
                        0.10437325f : 
                        -0.039575208f) : 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[9])) ? 
                        -0.0064537995f : 
                        0.18886647f)) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[3])) ? 
                        0.11573548f : 
                        0.20326966f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                        0.12244484f : 
                        0.24044235f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 392.5f ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                        -0.08437369f : 
                        0.10810947f) : 
                     (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[7])) ? 
                        -0.047498744f : 
                        0.06952742f)) : 
                 (data[10 /* duration */] < 136.5f ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 94.5f ? 
                        -0.078375965f : 
                        0.043287158f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[8])) ? 
                        0.08311868f : 
                        0.17164326f)))) : 
         (Double.isNaN(data[10]) || data[10 /* duration */] < 829.5f ? 
             (data[12 /* pdays */] < 508.0f ? 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[1])) ? 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                        0.09604687f : 
                        0.27164224f) : 
                     (!Double.isNaN(data[14 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[14])) ? 
                        0.082485706f : 
                        0.26941898f)) : 
                 (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[7])) ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[8])) ? 
                        0.05489531f : 
                        0.19522297f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[8])) ? 
                        0.12532558f : 
                        0.23701774f))) : 
             (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[7])) ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[8])) ? 
                     (Double.isNaN(data[11]) || data[11 /* campaign */] < 2.5f ? 
                        0.162021f : 
                        0.09800415f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                        0.17357701f : 
                        0.28821242f)) : 
                 (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[9])) ? 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[3])) ? 
                        0.14592208f : 
                        0.19144805f) : 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[3])) ? 
                        0.14004622f : 
                        0.22358316f)))));
    return pred;
  } // constant pool size = 216B, number of visited nodes = 31, static init size = 540B
  // {10111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {29, 0, 0, 0};
  // {00110100 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {44, 2, 0, 0};
  // {10011111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-7, 0, 0, 0};
  // {11111100 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {63, 7, 0, 0};
  // {10100100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {37, 3, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {01111111 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-2, 1, 0, 0};
  // {10110110 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {109, 6, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {4, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
  // {11100100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {39, 3, 0, 0};
  // {00101100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {52, 3, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {1, 0, 0, 0};
  // {11101101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-73, 0, 0, 0};
  // {00000100 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {32, 12, 0, 0};
  // {01010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {10, 0, 0, 0};
  // {01111001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-98, 0, 0, 0};
  // {11011110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {123, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_4_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 504.5f ? 
         (data[12 /* pdays */] < 513.0f ? 
             (data[10 /* duration */] < 162.5f ? 
                 (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[9])) ? 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
                        -0.03475757f : 
                        0.09964777f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                        -0.0019455001f : 
                        0.2105509f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                        0.08129789f : 
                        0.22485748f) : 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[9])) ? 
                        0.13985914f : 
                        0.1869063f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 192.5f ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 64.5f ? 
                        -0.09709549f : 
                        0.07260436f) : 
                     (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[7])) ? 
                        -0.08498578f : 
                        9.737575E-4f)) : 
                 (data[10 /* duration */] < 136.5f ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 93.5f ? 
                        -0.07717369f : 
                        0.03735947f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[8])) ? 
                        0.06271834f : 
                        0.12779842f)))) : 
         (data[10 /* duration */] < 634.5f ? 
             (data[12 /* pdays */] < 20.0f ? 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[1])) ? 
                    0.103660755f : 
                     (!Double.isNaN(data[2 /* marital */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 4) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[2])) ? 
                        0.17070824f : 
                        0.23768035f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[1])) ? 
                     (data[10 /* duration */] < 553.5f ? 
                        -0.006105165f : 
                        0.0492371f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[8])) ? 
                        0.059388455f : 
                        0.14323384f))) : 
             (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[7])) ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 869.5f ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[8])) ? 
                        0.054276515f : 
                        0.14285792f) : 
                     (data[0 /* age */] < 36.5f ? 
                        0.10869233f : 
                        0.161894f)) : 
                 (Double.isNaN(data[14 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (data[14] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[14])) ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[8])) ? 
                        0.13259147f : 
                        0.15850593f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[1])) ? 
                        0.082761824f : 
                        0.21552682f)))));
    return pred;
  } // constant pool size = 207B, number of visited nodes = 30, static init size = 510B
  // {00110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {12, 0, 0, 0};
  // {00000011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-64, 0, 0, 0};
  // {11010100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {43, 1, 0, 0};
  // {10011101 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-71, 7, 0, 0};
  // {10111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {29, 0, 0, 0};
  // {10100100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {37, 3, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {01111111 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-2, 3, 0, 0};
  // {10111110 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {125, 7, 0, 0};
  // {11010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {11, 0, 0, 0};
  // {10010100 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {41, 15, 0, 0};
  // {11101100 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {55, 2, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {1, 0, 0, 0};
  // {11101100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {55, 3, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {4, 0, 0, 0};
  // {01101010 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {86, 2, 0, 0};
  // {11100111 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-25, 3, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_5_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 456.5f ? 
         (data[12 /* pdays */] < 513.0f ? 
             (data[10 /* duration */] < 162.5f ? 
                 (Double.isNaN(data[11]) || data[11 /* campaign */] < 2.5f ? 
                     (data[10 /* duration */] < 80.5f ? 
                        -0.05293017f : 
                        0.098098285f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
                        -0.112992324f : 
                        0.025131218f)) : 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                     (Double.isNaN(data[12]) || data[12 /* pdays */] < 8.5f ? 
                        0.14143655f : 
                        -0.008367959f) : 
                     (!Double.isNaN(data[14 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[14])) ? 
                        0.0902488f : 
                        0.16158696f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 62.5f ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 192.5f ? 
                        -0.09061735f : 
                        -0.032564048f) : 
                     (data[10 /* duration */] < 136.5f ? 
                        -0.031904485f : 
                        0.13256766f)) : 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 184.5f ? 
                     (data[10 /* duration */] < 78.5f ? 
                        -0.08184518f : 
                        0.056344017f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                        0.06502374f : 
                        0.15205768f)))) : 
         (data[10 /* duration */] < 648.5f ? 
             (data[12 /* pdays */] < 20.0f ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 619.0f ? 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                        0.15494128f : 
                        0.21505237f) : 
                    0.06951288f) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
                     (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[7])) ? 
                        -0.014191821f : 
                        0.052583486f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[1])) ? 
                        0.057787392f : 
                        0.14609067f))) : 
             (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[7])) ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 882.5f ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[8])) ? 
                        0.06687846f : 
                        0.15852645f) : 
                     (data[0 /* age */] < 36.5f ? 
                        0.09045531f : 
                        0.14007342f)) : 
                 (Double.isNaN(data[14 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (data[14] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[14])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                        0.11962884f : 
                        0.2164166f) : 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 982.5f ? 
                        0.197549f : 
                        0.109375276f)))));
    return pred;
  } // constant pool size = 182B, number of visited nodes = 30, static init size = 360B
  // {01100000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {6, 2, 0, 0};
  // {11111100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {63, 3, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {4, 0, 0, 0};
  // {00100100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {36, 3, 0, 0};
  // {11100011 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-57, 14, 0, 0};
  // {11101100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {55, 3, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000110 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {97, 13, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {10100100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {37, 3, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {4, 0, 0, 0};
  // {00000000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {0, 1, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_6_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 408.5f ? 
         (data[12 /* pdays */] < 513.0f ? 
             (data[10 /* duration */] < 164.5f ? 
                 (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[9])) ? 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
                        -0.060868982f : 
                        0.05795719f) : 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[8])) ? 
                        -0.02548174f : 
                        0.133102f)) : 
                 (Double.isNaN(data[12]) || data[12 /* pdays */] < 7.5f ? 
                     (data[12 /* pdays */] < 1.5f ? 
                        0.008934575f : 
                        0.14319736f) : 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                        -0.021979846f : 
                        0.11745768f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 62.5f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                        -0.07723583f : 
                        0.090435915f) : 
                     (data[10 /* duration */] < 152.5f ? 
                        -0.01666699f : 
                        0.103957005f)) : 
                 (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[9])) ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[8])) ? 
                        -0.036687665f : 
                        0.06497283f) : 
                     (data[10 /* duration */] < 136.5f ? 
                        0.013165711f : 
                        0.11151298f)))) : 
         (Double.isNaN(data[10]) || data[10 /* duration */] < 646.5f ? 
             (data[12 /* pdays */] < 20.0f ? 
                 (data[12 /* pdays */] < 5.5f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[1])) ? 
                        0.07327605f : 
                        0.2128659f) : 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 618.5f ? 
                        0.19222234f : 
                        0.07839248f)) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[8])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 63.5f ? 
                        0.03656993f : 
                        0.3035002f) : 
                     (data[10 /* duration */] < 489.5f ? 
                        0.20318913f : 
                        0.09773132f))) : 
             (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[7])) ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 880.5f ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[8])) ? 
                        0.038369387f : 
                        0.1061183f) : 
                     (data[0 /* age */] < 36.5f ? 
                        0.07684514f : 
                        0.12064263f)) : 
                 (Double.isNaN(data[14 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (data[14] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[14])) ? 
                     (data[0 /* age */] < 35.5f ? 
                        0.11968825f : 
                        0.09287483f) : 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[3])) ? 
                        0.08173245f : 
                        0.17564748f)))));
    return pred;
  } // constant pool size = 196B, number of visited nodes = 31, static init size = 420B
  // {10110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {13, 0, 0, 0};
  // {00000011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-64, 0, 0, 0};
  // {01101101 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-74, 3, 0, 0};
  // {01111101 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-66, 3, 0, 0};
  // {10100100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {37, 3, 0, 0};
  // {00000000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {0, 1, 0, 0};
  // {00111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {28, 0, 0, 0};
  // {01111111 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-2, 1, 0, 0};
  // {01101010 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {86, 4, 0, 0};
  // {00100100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {36, 3, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {1, 0, 0, 0};
  // {11101100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {55, 3, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {4, 0, 0, 0};
  // {00011111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-8, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_7_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 393.5f ? 
         (data[12 /* pdays */] < 513.0f ? 
             (data[10 /* duration */] < 162.0f ? 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 132.5f ? 
                        -0.102483645f : 
                        0.035949383f) : 
                     (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[9])) ? 
                        0.030938096f : 
                        0.1254143f)) : 
                 (Double.isNaN(data[12]) || data[12 /* pdays */] < 7.5f ? 
                     (data[12 /* pdays */] < 1.5f ? 
                        0.008025391f : 
                        0.12547572f) : 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[8])) ? 
                        -0.023502894f : 
                        0.10203484f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 156.5f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                        -0.09844241f : 
                        -0.04993279f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                        -0.05084727f : 
                        0.12571084f)) : 
                 (data[10 /* duration */] < 104.5f ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 77.5f ? 
                        -0.096507914f : 
                        0.004705054f) : 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[9])) ? 
                        0.014645579f : 
                        0.088225745f)))) : 
         (Double.isNaN(data[10]) || data[10 /* duration */] < 632.5f ? 
             (data[12 /* pdays */] < 16.0f ? 
                 (data[12 /* pdays */] < 5.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* campaign */] < 1.5f ? 
                        0.15705463f : 
                        0.023055457f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
                        0.13193431f : 
                        0.18614338f)) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[8])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 63.5f ? 
                        0.029063603f : 
                        0.22704168f) : 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                        0.13446192f : 
                        -0.018211607f))) : 
             (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[7])) ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 867.5f ? 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[8])) ? 
                        -0.06774089f : 
                        0.06767621f) : 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[3])) ? 
                        0.06729805f : 
                        0.10772648f)) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[8])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 1436.5f ? 
                        0.07826033f : 
                        0.14379641f) : 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[3])) ? 
                        0.08645505f : 
                        0.13372329f)))));
    return pred;
  } // constant pool size = 191B, number of visited nodes = 31, static init size = 390B
  // {01101101 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-74, 3, 0, 0};
  // {00110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {12, 0, 0, 0};
  // {01111101 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-66, 3, 0, 0};
  // {10100100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {37, 3, 0, 0};
  // {00000100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {32, 1, 0, 0};
  // {00111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {28, 0, 0, 0};
  // {10101111 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-11, 13, 0, 0};
  // {00100100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {36, 3, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {11101110 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {119, 3, 0, 0};
  // {00100011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-60, 0, 0, 0};
  // {01001110 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {114, 2, 0, 0};
  // {01110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {14, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_8_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 456.5f ? 
         (data[12 /* pdays */] < 513.0f ? 
             (data[10 /* duration */] < 164.5f ? 
                 (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[9])) ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                        -0.09474478f : 
                        0.085356936f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                        -0.021114806f : 
                        0.093102396f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                        -0.054488488f : 
                        0.12834804f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
                        0.09644894f : 
                        0.12841731f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[8])) ? 
                 (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[7])) ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
                        -0.09915738f : 
                        0.015885077f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[8])) ? 
                        -0.05714991f : 
                        0.356063f)) : 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 264.5f ? 
                     (data[10 /* duration */] < 92.5f ? 
                        -0.06829102f : 
                        0.03412549f) : 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[9])) ? 
                        0.022815987f : 
                        0.12991378f)))) : 
         (data[10 /* duration */] < 640.5f ? 
             (data[12 /* pdays */] < 20.0f ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 619.0f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                        0.116329625f : 
                        0.18335016f) : 
                    0.03371291f) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[8])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[1])) ? 
                        0.019535668f : 
                        0.06738386f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                        0.07548706f : 
                        0.24585538f))) : 
             (data[12 /* pdays */] < 508.0f ? 
                 (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[1])) ? 
                        -0.010124477f : 
                        0.115419865f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[1])) ? 
                        0.0909918f : 
                        0.19503021f)) : 
                 (data[10 /* duration */] < 841.5f ? 
                     (!Double.isNaN(data[4 /* default */]) && (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 3) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[4])) ? 
                        0.020658245f : 
                        0.077709995f) : 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT19, 32, 0, data[3])) ? 
                        0.061361827f : 
                        0.0847951f)))));
    return pred;
  } // constant pool size = 222B, number of visited nodes = 30, static init size = 600B
  // {10111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {29, 0, 0, 0};
  // {00010101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-88, 0, 0, 0};
  // {10011110 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {121, 9, 0, 0};
  // {11011101 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-69, 7, 0, 0};
  // {01001000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {18, 2, 0, 0};
  // {00110100 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {44, 2, 0, 0};
  // {10100100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {37, 3, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {01000001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-126, 0, 0, 0};
  // {00001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {16, 0, 0, 0};
  // {00111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {28, 0, 0, 0};
  // {01101010 10100000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {86, 5, 0, 0};
  // {00100100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {36, 0, 0, 0};
  // {10000100 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {33, 9, 0, 0};
  // {00111111 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-4, 14, 0, 0};
  // {00110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {12, 0, 0, 0};
  // {11111111 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-1, 2, 0, 0};
  // {10100110 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {101, 15, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {1, 0, 0, 0};
  // {01110011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT19 = new byte[] {-50, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_9_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 393.5f ? 
         (data[12 /* pdays */] < 8.0f ? 
             (data[10 /* duration */] < 126.0f ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
                        -0.1191959f : 
                        0.0311688f) : 
                     (Double.isNaN(data[5 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (data[5] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 3) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                        0.02563467f : 
                        0.20230658f)) : 
                 (data[12 /* pdays */] < 1.5f ? 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                        -0.11947468f : 
                        0.07630146f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                        -0.03869473f : 
                        0.104070105f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 192.5f ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 64.5f ? 
                        -0.0814283f : 
                        0.038262345f) : 
                     (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[7])) ? 
                        -0.0786137f : 
                        0.012194193f)) : 
                 (data[10 /* duration */] < 92.5f ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[1])) ? 
                        -0.10825745f : 
                        0.010240704f) : 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[9])) ? 
                        0.040054534f : 
                        0.0958728f)))) : 
         (Double.isNaN(data[10]) || data[10 /* duration */] < 632.5f ? 
             (data[12 /* pdays */] < 16.0f ? 
                 (data[12 /* pdays */] < 5.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* campaign */] < 1.5f ? 
                        0.12880367f : 
                        0.008468915f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[1])) ? 
                        0.10844343f : 
                        0.1603772f)) : 
                 (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[7])) ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[8])) ? 
                        -0.032245126f : 
                        0.20371984f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[8])) ? 
                        0.03963458f : 
                        0.15697883f))) : 
             (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[7])) ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[8])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 1637.5f ? 
                        0.033096805f : 
                        0.14047298f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[1])) ? 
                        0.06687754f : 
                        0.17226383f)) : 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[8])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[1])) ? 
                        0.019228531f : 
                        0.09132375f) : 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[9])) ? 
                        0.0499086f : 
                        0.087504186f)))));
    return pred;
  } // constant pool size = 221B, number of visited nodes = 31, static init size = 570B
  // {00101100 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {52, 2, 0, 0};
  // {10000110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {97, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-126, 0, 0, 0};
  // {11011111 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-5, 15, 0, 0};
  // {00000100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {32, 1, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 3, 0, 0};
  // {10011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {25, 0, 0, 0};
  // {10101111 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-11, 13, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {1, 0, 0, 0};
  // {11100101 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-89, 1, 0, 0};
  // {00101100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {52, 1, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {1, 0, 0, 0};
  // {11101100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {55, 3, 0, 0};
  // {00001100 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {48, 8, 0, 0};
  // {01011110 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {122, 3, 0, 0};
  // {10010100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {41, 3, 0, 0};
  // {11011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {27, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_10 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_10_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_10_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 393.5f ? 
         (Double.isNaN(data[14 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (data[14] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[14])) ? 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 66.5f ? 
                        -0.06769344f : 
                        0.066120535f) : 
                     (data[10 /* duration */] < 128.5f ? 
                        -0.047011547f : 
                        0.15785693f)) : 
                 (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                     (data[0 /* age */] < 29.5f ? 
                        0.08021361f : 
                        -0.021472784f) : 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 289.5f ? 
                        0.040999997f : 
                        0.109380215f))) : 
             (data[10 /* duration */] < 140.0f ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                        -0.04796471f : 
                        0.04254972f) : 
                    0.14989598f) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[8])) ? 
                        -0.15345037f : 
                        0.08777085f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
                        0.07811477f : 
                        0.11702083f)))) : 
         (Double.isNaN(data[10]) || data[10 /* duration */] < 703.5f ? 
             (data[12 /* pdays */] < 20.0f ? 
                 (data[12 /* pdays */] < 5.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* campaign */] < 1.5f ? 
                        0.114765614f : 
                        0.025716996f) : 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[3])) ? 
                        0.08590169f : 
                        0.1402717f)) : 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[7])) ? 
                        -0.016531015f : 
                        0.027112968f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[8])) ? 
                        0.03887533f : 
                        0.09305837f))) : 
             (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[3])) ? 
                 (Double.isNaN(data[11]) || data[11 /* campaign */] < 2.5f ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 1253.5f ? 
                        0.041664455f : 
                        0.15008712f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                        -0.16344394f : 
                        -0.00968414f)) : 
                 (data[0 /* age */] < 35.5f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[1])) ? 
                        0.068550825f : 
                        0.1045946f) : 
                     (data[12 /* pdays */] < 500.5f ? 
                        0.13387355f : 
                        0.053754207f)))));
    return pred;
  } // constant pool size = 202B, number of visited nodes = 30, static init size = 480B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {10100100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {37, 3, 0, 0};
  // {00000000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {0, 1, 0, 0};
  // {00111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {28, 0, 0, 0};
  // {00000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {32, 0, 0, 0};
  // {10011110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {121, 0, 0, 0};
  // {11011101 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-69, 7, 0, 0};
  // {11111000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {31, 2, 0, 0};
  // {00110100 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {44, 2, 0, 0};
  // {11011010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {91, 0, 0, 0};
  // {10000100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {33, 1, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {1, 0, 0, 0};
  // {11101100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {55, 3, 0, 0};
  // {01111111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-2, 0, 0, 0};
  // {11000101 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-93, 2, 0, 0};
  // {00000110 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {96, 15, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_11 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_11_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_11_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 393.5f ? 
         (data[12 /* pdays */] < 8.0f ? 
             (data[10 /* duration */] < 122.0f ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
                     (Double.isNaN(data[12]) || data[12 /* pdays */] < 3.5f ? 
                        0.04318398f : 
                        -0.078402236f) : 
                    0.114269f) : 
                 (data[12 /* pdays */] < 2.5f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
                        -0.07659675f : 
                        0.09987072f) : 
                     (Double.isNaN(data[11]) || data[11 /* campaign */] < 3.5f ? 
                        0.091809876f : 
                        0.017968591f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 152.5f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                        -0.09266903f : 
                        -0.008728922f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                        -0.0368122f : 
                        0.10978532f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
                        -0.060917594f : 
                        0.051585805f) : 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 201.5f ? 
                        0.018551314f : 
                        0.068763055f)))) : 
         (Double.isNaN(data[10]) || data[10 /* duration */] < 606.5f ? 
             (data[12 /* pdays */] < 16.0f ? 
                 (data[12 /* pdays */] < 4.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* campaign */] < 1.5f ? 
                        0.11602696f : 
                        -0.007850042f) : 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[8])) ? 
                        0.081310086f : 
                        0.14175774f)) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[8])) ? 
                     (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[7])) ? 
                        -0.04963435f : 
                        0.018542998f) : 
                     (data[0 /* age */] < 27.5f ? 
                        0.16213666f : 
                        0.042301886f))) : 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 825.5f ? 
                 (!Double.isNaN(data[4 /* default */]) && (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 3) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[4])) ? 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[3])) ? 
                        -0.0019473538f : 
                        0.12731329f) : 
                     (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[7])) ? 
                        0.034414347f : 
                        0.060400266f)) : 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 3128.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* campaign */] < 11.5f ? 
                        0.06021535f : 
                        -0.0648653f) : 
                    -0.05645803f))));
    return pred;
  } // constant pool size = 178B, number of visited nodes = 29, static init size = 360B
  // {00001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {48, 0, 0, 0};
  // {10001000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {17, 2, 0, 0};
  // {10100100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {37, 3, 0, 0};
  // {00000000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {0, 1, 0, 0};
  // {10011110 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {121, 15, 0, 0};
  // {01011111 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-6, 3, 0, 0};
  // {01010011 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-54, 3, 0, 0};
  // {11101101 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-73, 3, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {1, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_12 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_12_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_12_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 379.5f ? 
         (data[12 /* pdays */] < 16.0f ? 
             (data[10 /* duration */] < 126.0f ? 
                 (data[12 /* pdays */] < 3.5f ? 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
                        -0.051637065f : 
                        0.10273977f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                        -0.0739928f : 
                        0.071060196f)) : 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[8])) ? 
                     (Double.isNaN(data[12]) || data[12 /* pdays */] < 7.5f ? 
                        0.060323354f : 
                        -0.020893518f) : 
                     (data[10 /* duration */] < 190.5f ? 
                        0.055936854f : 
                        0.09848363f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[4 /* default */]) && (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 3) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[4])) ? 
                        -0.10089621f : 
                        -0.061976396f) : 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 161.5f ? 
                        -0.06542177f : 
                        0.016728766f)) : 
                 (data[10 /* duration */] < 96.0f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
                        -0.062679045f : 
                        0.10730052f) : 
                     (!Double.isNaN(data[14 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[14])) ? 
                        0.0112064695f : 
                        0.0688624f)))) : 
         (Double.isNaN(data[10]) || data[10 /* duration */] < 699.5f ? 
             (!Double.isNaN(data[4 /* default */]) && (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 3) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[4])) ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 532.5f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[1])) ? 
                        -0.056635253f : 
                        0.073540635f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[1])) ? 
                        -0.047458615f : 
                        0.042244293f)) : 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[7])) ? 
                        -0.0031370614f : 
                        0.045046646f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[8])) ? 
                        0.05536965f : 
                        0.16438495f))) : 
             (Double.isNaN(data[14 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (data[14] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[14])) ? 
                 (data[0 /* age */] < 35.5f ? 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[3])) ? 
                        0.053698316f : 
                        0.1248534f) : 
                     (data[10 /* duration */] < 831.5f ? 
                        0.022050073f : 
                        0.048173156f)) : 
                 (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[3])) ? 
                    0.009097362f : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[1])) ? 
                        0.041809794f : 
                        0.14186668f)))));
    return pred;
  } // constant pool size = 212B, number of visited nodes = 30, static init size = 540B
  // {01000101 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-94, 2, 0, 0};
  // {00101100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {52, 0, 0, 0};
  // {01111100 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {62, 2, 0, 0};
  // {00000100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {32, 1, 0, 0};
  // {10001110 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {113, 13, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {00000010 10100000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {64, 5, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {00000010 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {64, 9, 0, 0};
  // {11000001 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-125, 4, 0, 0};
  // {00000100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {32, 1, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {1, 0, 0, 0};
  // {11001001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-109, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {4, 0, 0, 0};
  // {01000001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {-126, 0, 0, 0};
  // {00011111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-8, 0, 0, 0};
  // {11100110 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {103, 3, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_13 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_13_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_13_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 312.5f ? 
         (data[12 /* pdays */] < 16.0f ? 
             (data[10 /* duration */] < 168.5f ? 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                        -0.062494066f : 
                        0.081523f) : 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                        -0.060612924f : 
                        0.06777253f)) : 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 59.5f ? 
                        0.020059291f : 
                        0.15472788f) : 
                     (Double.isNaN(data[11]) || data[11 /* campaign */] < 3.5f ? 
                        0.0942066f : 
                        0.015667193f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 70.5f ? 
                        -0.07159314f : 
                        0.037114486f) : 
                     (Double.isNaN(data[7 /* contact */]) || !GenModel.bitSetIsInRange(32, 0, data[7]) || (data[7] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[7])) ? 
                        -0.07227986f : 
                        0.042497378f)) : 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 172.5f ? 
                     (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[9])) ? 
                        -0.015311261f : 
                        0.1383069f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[1])) ? 
                        0.022224773f : 
                        0.13978988f)))) : 
         (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[7])) ? 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 672.5f ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 481.5f ? 
                        -0.06679344f : 
                        0.0039574355f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[8])) ? 
                        0.022364134f : 
                        0.050273556f)) : 
                 (data[0 /* age */] < 33.5f ? 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[9])) ? 
                        0.09084715f : 
                        0.25559935f) : 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[3])) ? 
                        -0.051799845f : 
                        0.12971415f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 636.5f ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                        0.024027588f : 
                        0.14095716f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 56.5f ? 
                        0.042938583f : 
                        0.09617599f)) : 
                 (!Double.isNaN(data[14 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[14])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[1])) ? 
                        0.009750416f : 
                        0.07566182f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[8])) ? 
                        0.07751161f : 
                        0.20703599f)))));
    return pred;
  } // constant pool size = 216B, number of visited nodes = 31, static init size = 540B
  // {10011110 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {121, 1, 0, 0};
  // {00001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {48, 0, 0, 0};
  // {10111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {29, 0, 0, 0};
  // {01111100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {62, 3, 0, 0};
  // {00000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {32, 0, 0, 0};
  // {10001000 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {17, 3, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {00101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {20, 0, 0, 0};
  // {01110111 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-18, 6, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
  // {11100100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {39, 0, 0, 0};
  // {00001000 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {16, 3, 0, 0};
  // {00111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {28, 0, 0, 0};
  // {11001111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-13, 0, 0, 0};
  // {00101100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {52, 3, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {2, 0, 0, 0};
  // {10111001 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-99, 6, 0, 0};
  // {00001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {16, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_14 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_14_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_14_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 283.5f ? 
         (data[12 /* pdays */] < 8.0f ? 
             (data[10 /* duration */] < 118.0f ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 108.5f ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
                        -0.020087844f : 
                        0.13227375f) : 
                    -0.13917929f) : 
                 (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                        -0.16648191f : 
                        0.04443106f) : 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                        0.040057026f : 
                        0.10383848f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 58.0f ? 
                        -0.0838891f : 
                        -0.010782411f) : 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 154.5f ? 
                        -0.07693704f : 
                        0.012061406f)) : 
                 (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[1])) ? 
                        -0.06906673f : 
                        0.011114888f) : 
                     (data[10 /* duration */] < 81.5f ? 
                        -0.07205827f : 
                        0.061925124f)))) : 
         (data[12 /* pdays */] < 513.0f ? 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 47.0f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[1])) ? 
                        0.008335584f : 
                        0.073711f) : 
                     (Double.isNaN(data[12]) || data[12 /* pdays */] < 6.5f ? 
                        0.060838625f : 
                        0.15949045f)) : 
                 (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                        -0.08479331f : 
                        0.07920682f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[1])) ? 
                        0.069982596f : 
                        0.13867038f))) : 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 609.5f ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[8])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                        -0.02725078f : 
                        0.032601f) : 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[3])) ? 
                        0.0500545f : 
                        0.13307755f)) : 
                 (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[3])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[1])) ? 
                        0.008655f : 
                        0.062561505f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[1])) ? 
                        0.018044364f : 
                        0.04707864f)))));
    return pred;
  } // constant pool size = 217B, number of visited nodes = 30, static init size = 570B
  // {00100100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {36, 3, 0, 0};
  // {10000011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-63, 0, 0, 0};
  // {11000111 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-29, 7, 0, 0};
  // {10011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {25, 0, 0, 0};
  // {10000100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {33, 3, 0, 0};
  // {01001001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-110, 0, 0, 0};
  // {00011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {24, 0, 0, 0};
  // {10111110 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {125, 15, 0, 0};
  // {10010100 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {41, 2, 0, 0};
  // {00001111 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-16, 7, 0, 0};
  // {10111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {29, 0, 0, 0};
  // {11001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {51, 0, 0, 0};
  // {11111000 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {31, 6, 0, 0};
  // {00100100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {36, 3, 0, 0};
  // {10001100 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {49, 15, 0, 0};
  // {01010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {10, 0, 0, 0};
  // {01110010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {78, 0, 0, 0};
  // {00001111 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {-16, 8, 0, 0};
  // {11101100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {55, 3, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_15 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_15_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_15_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 264.5f ? 
         (data[12 /* pdays */] < 8.0f ? 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 214.5f ? 
                 (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
                     (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[2])) ? 
                        -0.019948747f : 
                        0.13089561f) : 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                        0.010154392f : 
                        0.085875854f)) : 
                 (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                        -0.043329813f : 
                        0.08924879f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                        -0.001628391f : 
                        0.13054341f))) : 
             (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[8])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[1])) ? 
                        -0.07571773f : 
                        0.040470563f) : 
                     (Double.isNaN(data[7 /* contact */]) || !GenModel.bitSetIsInRange(32, 0, data[7]) || (data[7] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[7])) ? 
                        -0.071838126f : 
                        0.033175945f)) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[8])) ? 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[9])) ? 
                        -0.020825302f : 
                        0.051818714f) : 
                     (data[10 /* duration */] < 152.5f ? 
                        0.06282757f : 
                        0.2249793f)))) : 
         (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[7])) ? 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 664.5f ? 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                        -0.04221818f : 
                        0.13996811f) : 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 1595.5f ? 
                        0.018555107f : 
                        0.10000656f)) : 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 53.5f ? 
                     (data[10 /* duration */] < 388.5f ? 
                        0.053557906f : 
                        0.12724818f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[8])) ? 
                        -0.117063455f : 
                        0.10292756f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 701.5f ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[1])) ? 
                        -0.010350877f : 
                        0.03897753f) : 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[9])) ? 
                        0.026173329f : 
                        0.04955084f)) : 
                 (data[10 /* duration */] < 337.5f ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[1])) ? 
                        0.069880895f : 
                        0.18137576f) : 
                     (Double.isNaN(data[5 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (data[5] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 3) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[5])) ? 
                        0.041363526f : 
                        0.10706046f)))));
    return pred;
  } // constant pool size = 221B, number of visited nodes = 31, static init size = 570B
  // {10000011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-63, 0, 0, 0};
  // {10010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {9, 0, 0, 0};
  // {10011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {25, 0, 0, 0};
  // {10101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {21, 0, 0, 0};
  // {01000100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {34, 3, 0, 0};
  // {10101110 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {117, 7, 0, 0};
  // {10001100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {49, 3, 0, 0};
  // {00000000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {0, 1, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {00010001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-120, 0, 0, 0};
  // {10011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {25, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {1, 0, 0, 0};
  // {11100100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {39, 1, 0, 0};
  // {10111111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-3, 0, 0, 0};
  // {00101100 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {52, 2, 0, 0};
  // {10011100 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {57, 15, 0, 0};
  // {01011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {26, 0, 0, 0};
  // {11110010 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {79, 7, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {3, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_16 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_16_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_16_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 379.5f ? 
         (data[12 /* pdays */] < 16.0f ? 
             (data[10 /* duration */] < 126.0f ? 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
                     (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[9])) ? 
                        -0.12084379f : 
                        0.017073276f) : 
                     (data[12 /* pdays */] < 3.5f ? 
                        0.0629433f : 
                        -0.03790274f)) : 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 363.5f ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                        -0.020505045f : 
                        0.054774288f) : 
                    -0.062174976f)) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                 (!Double.isNaN(data[4 /* default */]) && (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 3) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[4])) ? 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
                        -0.10174947f : 
                        -0.09360432f) : 
                     (data[10 /* duration */] < 129.5f ? 
                        -0.07367069f : 
                        0.0014235176f)) : 
                 (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[7])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[1])) ? 
                        -0.15855703f : 
                        0.020109568f) : 
                     (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[9])) ? 
                        0.047062483f : 
                        0.15451993f)))) : 
         (Double.isNaN(data[14 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (data[14] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[14])) ? 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 699.5f ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 58.5f ? 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[3])) ? 
                        0.0014736819f : 
                        0.03597563f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[8])) ? 
                        0.046617705f : 
                        0.1929205f)) : 
                 (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[3])) ? 
                     (Double.isNaN(data[11]) || data[11 /* campaign */] < 2.5f ? 
                        0.03461692f : 
                        -0.047021076f) : 
                     (data[0 /* age */] < 35.5f ? 
                        0.043633357f : 
                        0.025744632f))) : 
             (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[8])) ? 
                -0.03185435f : 
                 (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[3])) ? 
                     (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[9])) ? 
                        0.033966098f : 
                        0.1140451f) : 
                     (data[0 /* age */] < 29.5f ? 
                        0.035161093f : 
                        0.10633896f)))));
    return pred;
  } // constant pool size = 190B, number of visited nodes = 27, static init size = 480B
  // {01101101 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-74, 2, 0, 0};
  // {00011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {24, 0, 0, 0};
  // {11011101 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-69, 7, 0, 0};
  // {00000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {32, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {01111111 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-2, 3, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {00000011 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-64, 2, 0, 0};
  // {00001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {16, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {4, 0, 0, 0};
  // {00001010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {80, 0, 0, 0};
  // {10101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {21, 0, 0, 0};
  // {01111111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-2, 0, 0, 0};
  // {11011111 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-5, 3, 0, 0};
  // {11001110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {115, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {4, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_17 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_17_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_17_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 264.5f ? 
         (data[12 /* pdays */] < 8.0f ? 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 214.5f ? 
                 (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
                     (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[2])) ? 
                        -0.021918138f : 
                        0.115217425f) : 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                        0.0057988395f : 
                        0.07326467f)) : 
                 (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                        -0.04389545f : 
                        0.07956384f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                        -0.0058142073f : 
                        0.11985581f))) : 
             (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                 (data[0 /* age */] < 28.0f ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[8])) ? 
                        -0.01800578f : 
                        0.1383718f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[8])) ? 
                        -0.060586594f : 
                        0.018883308f)) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[1])) ? 
                        0.013978652f : 
                        0.20545687f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[1])) ? 
                        0.090771146f : 
                        0.3989997f)))) : 
         (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[7])) ? 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 483.5f ? 
                     (Double.isNaN(data[14 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (data[14] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[14])) ? 
                        -0.06934715f : 
                        0.09170172f) : 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 1592.5f ? 
                        0.010043371f : 
                        0.08688022f)) : 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 53.5f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                        0.07239078f : 
                        0.21533206f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[8])) ? 
                        -0.10926357f : 
                        0.09019693f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[8])) ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 58.0f ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 634.5f ? 
                        0.011999578f : 
                        0.02929671f) : 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[3])) ? 
                        -0.08671796f : 
                        0.08541776f)) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[8])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT19, 32, 0, data[1])) ? 
                        0.0406513f : 
                        0.10168269f) : 
                     (data[12 /* pdays */] < 16.5f ? 
                        0.0396561f : 
                        0.18669246f)))));
    return pred;
  } // constant pool size = 226B, number of visited nodes = 31, static init size = 600B
  // {10000011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-63, 0, 0, 0};
  // {10010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {9, 0, 0, 0};
  // {10011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {25, 0, 0, 0};
  // {10101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {21, 0, 0, 0};
  // {01000100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {34, 3, 0, 0};
  // {10101110 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {117, 7, 0, 0};
  // {11000101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-93, 0, 0, 0};
  // {00100100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {36, 1, 0, 0};
  // {00010001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-120, 0, 0, 0};
  // {00101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {20, 0, 0, 0};
  // {10001000 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {17, 10, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {1, 0, 0, 0};
  // {11100100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {39, 1, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {5, 0, 0, 0};
  // {00001010 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {80, 12, 0, 0};
  // {10111111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {-3, 0, 0, 0};
  // {00101100 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {52, 2, 0, 0};
  // {10011111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {-7, 0, 0, 0};
  // {00001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {16, 0, 0, 0};
  // {01100000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT19 = new byte[] {6, 2, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_18 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_18_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_18_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 225.5f ? 
         (data[12 /* pdays */] < 8.0f ? 
             (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[8])) ? 
                        -0.16528705f : 
                        -0.022975082f) : 
                     (!Double.isNaN(data[2 /* marital */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 4) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[2])) ? 
                        -0.01810014f : 
                        0.06959199f)) : 
                 (data[10 /* duration */] < 80.5f ? 
                    -0.087867305f : 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                        0.026003491f : 
                        0.08873288f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                     (Double.isNaN(data[14 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (data[14] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[14])) ? 
                        -0.07980292f : 
                        -0.02879961f) : 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[9])) ? 
                        -0.09091411f : 
                        0.062200572f)) : 
                 (Double.isNaN(data[7 /* contact */]) || !GenModel.bitSetIsInRange(32, 0, data[7]) || (data[7] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[7])) ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
                        -0.08781576f : 
                        0.08168546f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[8])) ? 
                        0.008621314f : 
                        0.211697f)))) : 
         (data[12 /* pdays */] < 513.0f ? 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[8])) ? 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                        -0.12869743f : 
                        0.05661242f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[1])) ? 
                        0.03526354f : 
                        0.08116005f)) : 
                 (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[9])) ? 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                        -0.03321976f : 
                        0.0994696f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                        0.034056146f : 
                        0.10829307f))) : 
             (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[7])) ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[8])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 519.5f ? 
                        -0.061529595f : 
                        0.013421475f) : 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[9])) ? 
                        -0.061976805f : 
                        0.095825404f)) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[8])) ? 
                     (!Double.isNaN(data[4 /* default */]) && (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 3) && !GenModel.bitSetContains(GRPSPLIT19, 32, 0, data[4])) ? 
                        -0.018472597f : 
                        0.024385188f) : 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 519.5f ? 
                        0.23747352f : 
                        0.0346261f)))));
    return pred;
  } // constant pool size = 222B, number of visited nodes = 30, static init size = 600B
  // {10000011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-63, 0, 0, 0};
  // {01000110 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {98, 3, 0, 0};
  // {11110110 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {111, 3, 0, 0};
  // {10110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {13, 0, 0, 0};
  // {10001100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {49, 3, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {5, 0, 0, 0};
  // {11011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {27, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {00000000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {0, 1, 0, 0};
  // {00001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {16, 0, 0, 0};
  // {10010100 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {41, 2, 0, 0};
  // {11001111 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-13, 7, 0, 0};
  // {00000111 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-32, 4, 0, 0};
  // {10111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {29, 0, 0, 0};
  // {11111000 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {31, 7, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {1, 0, 0, 0};
  // {11000001 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-125, 1, 0, 0};
  // {10111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {29, 0, 0, 0};
  // {00001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {16, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT19 = new byte[] {1, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_19 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_19_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_19_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 283.5f ? 
         (data[12 /* pdays */] < 8.0f ? 
             (data[10 /* duration */] < 80.0f ? 
                 (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[9])) ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                        -0.1192303f : 
                        -0.10770804f) : 
                    0.019334609f) : 
                 (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[3])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                        -0.059693184f : 
                        0.029157884f) : 
                     (Double.isNaN(data[12]) || data[12 /* pdays */] < 6.5f ? 
                        0.058152586f : 
                        -0.057294313f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[8])) ? 
                        -0.09051662f : 
                        0.096457176f) : 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                        -0.0566992f : 
                        0.09914666f)) : 
                 (data[0 /* age */] < 29.5f ? 
                     (data[10 /* duration */] < 113.5f ? 
                        -0.0374285f : 
                        0.09323332f) : 
                     (data[10 /* duration */] < 97.5f ? 
                        -0.080066584f : 
                        -0.0033574596f)))) : 
         (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[8])) ? 
             (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 609.5f ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 64.5f ? 
                        -0.014848244f : 
                        0.12411743f) : 
                     (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[9])) ? 
                        0.008288098f : 
                        0.04054891f)) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[8])) ? 
                     (Double.isNaN(data[12]) || data[12 /* pdays */] < 508.0f ? 
                        0.080783874f : 
                        -0.010832368f) : 
                     (Double.isNaN(data[12]) || data[12 /* pdays */] < 500.0f ? 
                        0.12066347f : 
                        0.39429104f))) : 
             (data[0 /* age */] < 33.5f ? 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[1])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 1385.5f ? 
                        0.052128278f : 
                        -0.07583162f) : 
                     (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[9])) ? 
                        0.06640334f : 
                        0.16684225f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[1])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 834.5f ? 
                        -0.025662025f : 
                        0.0391473f) : 
                     (!Double.isNaN(data[4 /* default */]) && (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 3) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[4])) ? 
                        -0.0067031463f : 
                        0.03534311f)))));
    return pred;
  } // constant pool size = 192B, number of visited nodes = 30, static init size = 420B
  // {00110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {12, 0, 0, 0};
  // {10000010 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {65, 1, 0, 0};
  // {00100011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-60, 0, 0, 0};
  // {11010110 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {107, 3, 0, 0};
  // {11001101 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-77, 3, 0, 0};
  // {10000100 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {33, 7, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {4, 0, 0, 0};
  // {11101100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {55, 3, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {3, 0, 0, 0};
  // {00010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {8, 0, 0, 0};
  // {00000000 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {0, 13, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {4, 0, 0, 0};
  // {10111110 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {125, 14, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {1, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_20 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_20_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_20_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 201.5f ? 
         (Double.isNaN(data[0]) || data[0 /* age */] < 61.0f ? 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 109.5f ? 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 2.5f ? 
                        -0.08439558f : 
                        -0.11825581f) : 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
                        -0.052503075f : 
                        0.003940052f)) : 
                 (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                     (data[10 /* duration */] < 121.5f ? 
                        0.011474313f : 
                        -0.040261533f) : 
                     (!Double.isNaN(data[14 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[14])) ? 
                        -0.027937006f : 
                        0.05902909f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                 (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                     (!Double.isNaN(data[14 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[14])) ? 
                        -0.107668996f : 
                        -0.013240058f) : 
                     (!Double.isNaN(data[14 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[14])) ? 
                        -0.0652388f : 
                        0.13581954f)) : 
                 (data[10 /* duration */] < 129.5f ? 
                     (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[9])) ? 
                        -4.3542945E-4f : 
                        0.1650077f) : 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[3])) ? 
                        0.074670345f : 
                        0.19372441f)))) : 
         (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[7])) ? 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 496.5f ? 
                     (data[12 /* pdays */] < 17.5f ? 
                        0.08570967f : 
                        -0.06508292f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[8])) ? 
                        0.0015531614f : 
                        0.030246567f)) : 
                 (data[0 /* age */] < 29.5f ? 
                     (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[9])) ? 
                        0.12347164f : 
                        0.35457498f) : 
                     (data[11 /* campaign */] < 1.5f ? 
                        0.14455493f : 
                        0.013351792f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[8])) ? 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 570.5f ? 
                        -0.02235691f : 
                        0.01910296f) : 
                     (data[0 /* age */] < 25.5f ? 
                        0.09700291f : 
                        0.022278905f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[1])) ? 
                     (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[9])) ? 
                        0.024386741f : 
                        0.089086466f) : 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 0.5f ? 
                        0.13432276f : 
                        0.06473074f)))));
    return pred;
  } // constant pool size = 211B, number of visited nodes = 31, static init size = 510B
  // {00000100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {32, 3, 0, 0};
  // {00001011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-48, 0, 0, 0};
  // {00111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {28, 0, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {6, 0, 0, 0};
  // {10010101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-87, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {3, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {4, 0, 0, 0};
  // {00001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {16, 0, 0, 0};
  // {01010100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {42, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
  // {11000001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-125, 0, 0, 0};
  // {00101101 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-76, 1, 0, 0};
  // {00011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {24, 0, 0, 0};
  // {00001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {48, 0, 0, 0};
  // {10001110 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {113, 15, 0, 0};
  // {11010011 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {-53, 6, 0, 0};
  // {10001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {17, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_21 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_21_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_21_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 201.5f ? 
         (data[12 /* pdays */] < 8.0f ? 
             (data[12 /* pdays */] < 2.5f ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
                    -0.16366379f : 
                    0.043086432f) : 
                 (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[8])) ? 
                        -0.039755475f : 
                        0.035456415f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                        0.025825758f : 
                        0.10986152f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 74.5f ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
                        -0.07617789f : 
                        -0.049765073f) : 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 137.5f ? 
                        -0.06949071f : 
                        0.18041362f)) : 
                 (Double.isNaN(data[7 /* contact */]) || !GenModel.bitSetIsInRange(32, 0, data[7]) || (data[7] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[7])) ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[8])) ? 
                        -0.09148173f : 
                        0.07621564f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
                        -0.0047320346f : 
                        0.082913324f)))) : 
         (!Double.isNaN(data[4 /* default */]) && (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 3) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[4])) ? 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 1252.5f ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[8])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 842.5f ? 
                        -0.04231716f : 
                        0.016458021f) : 
                    0.12335836f) : 
                 (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[8])) ? 
                        -0.09225119f : 
                        0.07283204f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[1])) ? 
                        0.076642916f : 
                        0.17450622f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[8])) ? 
                 (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 59.5f ? 
                        0.0010522344f : 
                        0.088229425f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[8])) ? 
                        0.050843377f : 
                        0.16453929f)) : 
                 (data[0 /* age */] < 33.5f ? 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 3.5f ? 
                        0.056483276f : 
                        -0.13643579f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[1])) ? 
                        -0.014212488f : 
                        0.029355727f)))));
    return pred;
  } // constant pool size = 199B, number of visited nodes = 28, static init size = 510B
  // {01000010 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {66, 2, 0, 0};
  // {00011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {24, 0, 0, 0};
  // {01011101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-70, 0, 0, 0};
  // {10100100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {37, 3, 0, 0};
  // {10001100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {49, 1, 0, 0};
  // {01000001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-126, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {00000000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {0, 1, 0, 0};
  // {00001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {48, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
  // {00100000 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {4, 3, 0, 0};
  // {10110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {13, 0, 0, 0};
  // {11010101 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-85, 3, 0, 0};
  // {10110001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-115, 0, 0, 0};
  // {11101100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {55, 3, 0, 0};
  // {00010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {8, 0, 0, 0};
  // {10111110 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {125, 14, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_22 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_22_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_22_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 350.5f ? 
         (data[12 /* pdays */] < 16.0f ? 
             (Double.isNaN(data[11]) || data[11 /* campaign */] < 3.5f ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 202.5f ? 
                     (data[12 /* pdays */] < 2.5f ? 
                        -0.06831639f : 
                        0.022847617f) : 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
                        0.013909198f : 
                        0.06863856f)) : 
                 (!Double.isNaN(data[2 /* marital */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 4) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[2])) ? 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[8])) ? 
                        -0.14205416f : 
                        -0.06549773f) : 
                     (data[10 /* duration */] < 163.5f ? 
                        -0.114810266f : 
                        0.07828743f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                 (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 67.5f ? 
                        -0.052398503f : 
                        0.05216194f) : 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 244.5f ? 
                        0.0363851f : 
                        0.24188799f)) : 
                 (Double.isNaN(data[7 /* contact */]) || !GenModel.bitSetIsInRange(32, 0, data[7]) || (data[7] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[7])) ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
                        -0.07512529f : 
                        0.0461178f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[8])) ? 
                        0.010187624f : 
                        0.17102788f)))) : 
         (data[0 /* age */] < 23.0f ? 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 511.5f ? 
                 (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[3])) ? 
                    0.10647111f : 
                    0.29169023f) : 
                 (Double.isNaN(data[11]) || data[11 /* campaign */] < 1.5f ? 
                     (data[0 /* age */] < 20.5f ? 
                        0.06684043f : 
                        0.0846665f) : 
                    -0.08607785f)) : 
             (Double.isNaN(data[0]) || data[0 /* age */] < 57.5f ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 707.5f ? 
                     (!Double.isNaN(data[4 /* default */]) && (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 3) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[4])) ? 
                        -0.021725738f : 
                        0.010909547f) : 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[3])) ? 
                        -0.010059581f : 
                        0.020875206f)) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[8])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                        -0.08928498f : 
                        0.0310476f) : 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[3])) ? 
                        -0.06201456f : 
                        0.12671706f)))));
    return pred;
  } // constant pool size = 179B, number of visited nodes = 28, static init size = 390B
  // {11111100 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {63, 2, 0, 0};
  // {10110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {13, 0, 0, 0};
  // {10000111 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-31, 2, 0, 0};
  // {10101100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {53, 3, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {00000000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {0, 1, 0, 0};
  // {00001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {16, 0, 0, 0};
  // {10001111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-15, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {01111111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-2, 0, 0, 0};
  // {10011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {25, 0, 0, 0};
  // {10111101 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-67, 9, 0, 0};
  // {10011111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-7, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_23 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_23_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_23_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 192.5f ? 
         (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
             (data[10 /* duration */] < 80.5f ? 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 77.5f ? 
                        -0.09140362f : 
                        0.08274366f) : 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                        -0.09566774f : 
                        -0.11463971f)) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[8])) ? 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                        -0.06560306f : 
                        0.0626321f) : 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[3])) ? 
                        -0.017496971f : 
                        0.0369764f))) : 
             (data[10 /* duration */] < 86.5f ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                        -0.09012827f : 
                        0.08245408f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
                        -0.11887237f : 
                        -0.010796367f)) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[8])) ? 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[8])) ? 
                        -0.12771036f : 
                        0.006691966f) : 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[3])) ? 
                        0.048152834f : 
                        0.26868224f)))) : 
         (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[7])) ? 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 488.5f ? 
                     (data[12 /* pdays */] < 17.5f ? 
                        0.07479407f : 
                        -0.06226489f) : 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[9])) ? 
                        -0.008632012f : 
                        0.019037891f)) : 
                 (data[0 /* age */] < 29.5f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[1])) ? 
                        0.08288117f : 
                        0.41693535f) : 
                     (data[11 /* campaign */] < 1.5f ? 
                        0.1178503f : 
                        0.0070191827f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[8])) ? 
                 (!Double.isNaN(data[4 /* default */]) && (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 3) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[4])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 1226.5f ? 
                        -0.026627893f : 
                        0.086157866f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[1])) ? 
                        -0.0011772731f : 
                        0.02576993f)) : 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 340.5f ? 
                     (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[9])) ? 
                        0.0806412f : 
                        0.15833074f) : 
                     (!Double.isNaN(data[14 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[14])) ? 
                        -0.0046939496f : 
                        0.05726747f)))));
    return pred;
  } // constant pool size = 216B, number of visited nodes = 31, static init size = 540B
  // {00000100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {32, 1, 0, 0};
  // {01011011 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-38, 2, 0, 0};
  // {10101100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {53, 3, 0, 0};
  // {00000011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-64, 0, 0, 0};
  // {00000100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {32, 1, 0, 0};
  // {10100000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {5, 1, 0, 0};
  // {11000101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-93, 0, 0, 0};
  // {11011111 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-5, 3, 0, 0};
  // {00001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {48, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
  // {11000001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-125, 0, 0, 0};
  // {11001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {19, 0, 0, 0};
  // {00111111 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-4, 6, 0, 0};
  // {00001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {48, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {1, 0, 0, 0};
  // {10001110 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {113, 15, 0, 0};
  // {10001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {17, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {2, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_24 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_24_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_24_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (data[14] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[14])) ? 
         (Double.isNaN(data[10]) || data[10 /* duration */] < 345.5f ? 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[3])) ? 
                        -0.071231864f : 
                        -0.03364547f) : 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 221.5f ? 
                        -0.052590344f : 
                        0.18675432f)) : 
                 (data[0 /* age */] < 29.5f ? 
                     (data[10 /* duration */] < 113.5f ? 
                        -0.02930878f : 
                        0.07320276f) : 
                     (!Double.isNaN(data[4 /* default */]) && (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 3) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[4])) ? 
                        -0.07983158f : 
                        -0.0011107064f))) : 
             (Double.isNaN(data[0]) || data[0 /* age */] < 58.0f ? 
                 (data[0 /* age */] < 33.5f ? 
                     (data[0 /* age */] < 22.5f ? 
                        0.10022121f : 
                        0.01756384f) : 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[3])) ? 
                        -0.0093198875f : 
                        0.015938371f)) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[8])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[1])) ? 
                        -0.14086375f : 
                        0.023550317f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 59.5f ? 
                        0.059503265f : 
                        0.13769004f)))) : 
         (data[10 /* duration */] < 134.5f ? 
             (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[1])) ? 
                     (data[10 /* duration */] < 98.5f ? 
                        -0.11062285f : 
                        -0.1370479f) : 
                    0.040203456f) : 
                 (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[9])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 118.5f ? 
                        0.0035285235f : 
                        -0.14633965f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                        -0.025421916f : 
                        0.07563009f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[8])) ? 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[1])) ? 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                        -0.09040526f : 
                        0.056568123f) : 
                     (Double.isNaN(data[11]) || data[11 /* campaign */] < 4.5f ? 
                        0.031980887f : 
                        -0.0781153f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                     (data[12 /* pdays */] < 2.5f ? 
                        -0.14346771f : 
                        0.03336966f) : 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[9])) ? 
                        0.015493554f : 
                        0.077912346f)))));
    return pred;
  } // constant pool size = 202B, number of visited nodes = 30, static init size = 480B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {11101101 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-73, 3, 0, 0};
  // {00000000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {0, 1, 0, 0};
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {64, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {01001011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-46, 0, 0, 0};
  // {10011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {25, 0, 0, 0};
  // {10111101 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-67, 11, 0, 0};
  // {01001101 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-78, 3, 0, 0};
  // {01000110 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {98, 8, 0, 0};
  // {10110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {13, 0, 0, 0};
  // {11110110 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {111, 1, 0, 0};
  // {10010100 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {41, 2, 0, 0};
  // {11001101 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-77, 7, 0, 0};
  // {11111000 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {31, 7, 0, 0};
  // {10111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {29, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_25 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_25_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_25_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 192.5f ? 
         (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
             (data[12 /* pdays */] < 4.0f ? 
                 (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[2 /* marital */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 4) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[2])) ? 
                        -0.036635f : 
                        0.04111257f) : 
                    0.12753193f) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 128.5f ? 
                        -0.082004584f : 
                        -0.03046079f) : 
                     (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[9])) ? 
                        -0.015263966f : 
                        0.049104728f))) : 
             (data[10 /* duration */] < 86.5f ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
                        -0.087989554f : 
                        0.07259825f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[8])) ? 
                        -0.118220724f : 
                        -0.022804542f)) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[8])) ? 
                     (Double.isNaN(data[11]) || data[11 /* campaign */] < 3.5f ? 
                        0.016332652f : 
                        -0.124924526f) : 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[3])) ? 
                        0.04163189f : 
                        0.20583135f)))) : 
         (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[7])) ? 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 488.5f ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[8])) ? 
                        -0.070786364f : 
                        0.035926607f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[8])) ? 
                        -0.002540534f : 
                        0.022553675f)) : 
                 (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[9])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                        -0.027753431f : 
                        0.074399516f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[1])) ? 
                        0.037633233f : 
                        0.12659489f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[8])) ? 
                 (!Double.isNaN(data[4 /* default */]) && (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 3) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[4])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 1226.5f ? 
                        -0.023705643f : 
                        0.07843092f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[1])) ? 
                        -4.253976E-4f : 
                        0.02283591f)) : 
                 (Double.isNaN(data[13]) || data[13 /* previous */] < 2.5f ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 668.5f ? 
                        0.107246585f : 
                        -0.02838879f) : 
                    -0.09342959f))));
    return pred;
  } // constant pool size = 213B, number of visited nodes = 29, static init size = 570B
  // {00000100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {32, 1, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {10110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {13, 0, 0, 0};
  // {10100100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {37, 1, 0, 0};
  // {00011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {24, 0, 0, 0};
  // {00000100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {32, 1, 0, 0};
  // {10100001 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-123, 1, 0, 0};
  // {11000101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-93, 0, 0, 0};
  // {00001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {48, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
  // {11100001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-121, 0, 0, 0};
  // {00010000 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {8, 3, 0, 0};
  // {00001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {48, 0, 0, 0};
  // {00111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {28, 0, 0, 0};
  // {00011101 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-72, 4, 0, 0};
  // {10011110 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {121, 8, 0, 0};
  // {00001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {16, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {1, 0, 0, 0};
  // {10001110 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {113, 15, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_26 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_26_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_26_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (data[14] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[14])) ? 
         (Double.isNaN(data[10]) || data[10 /* duration */] < 614.5f ? 
             (!Double.isNaN(data[4 /* default */]) && (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 3) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[4])) ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 533.5f ? 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[8])) ? 
                        -0.077576354f : 
                        -0.070134625f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                        -0.00519638f : 
                        0.10758406f)) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                        -0.015905721f : 
                        0.054778785f) : 
                     (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[7])) ? 
                        -0.023701234f : 
                        0.030002918f))) : 
             (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[8])) ? 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[9])) ? 
                        -0.10053321f : 
                        -0.0151394f) : 
                     (Double.isNaN(data[6 /* loan */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 3) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[6])) ? 
                        6.8730913E-4f : 
                        0.068199426f)) : 
                 (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[3])) ? 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[9])) ? 
                        -0.025685271f : 
                        0.010280655f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[1])) ? 
                        -0.06265312f : 
                        0.033915553f)))) : 
         (Double.isNaN(data[10]) || data[10 /* duration */] < 441.5f ? 
             (data[12 /* pdays */] < 2.5f ? 
                 (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[9])) ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[8])) ? 
                        -0.14752404f : 
                        0.02748965f) : 
                     (data[10 /* duration */] < 213.5f ? 
                        -0.05299847f : 
                        0.110090144f)) : 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[1])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 323.5f ? 
                        0.020764805f : 
                        -0.044097967f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[8])) ? 
                        0.025799137f : 
                        0.081689864f))) : 
             (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[8])) ? 
                -0.07113959f : 
                 (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT19, 32, 0, data[3])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT20, 32, 0, data[1])) ? 
                        -0.023269853f : 
                        0.060632534f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT21, 32, 0, data[1])) ? 
                        0.0064631887f : 
                        0.10245956f)))));
    return pred;
  } // constant pool size = 224B, number of visited nodes = 28, static init size = 660B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01111111 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-2, 3, 0, 0};
  // {10000011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-63, 0, 0, 0};
  // {10101100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {53, 1, 0, 0};
  // {00000000 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {0, 9, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {01111010 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {94, 2, 0, 0};
  // {10011100 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {57, 11, 0, 0};
  // {01111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {30, 0, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {6, 0, 0, 0};
  // {01110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {14, 0, 0, 0};
  // {11011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {27, 0, 0, 0};
  // {11101111 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-9, 7, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {4, 0, 0, 0};
  // {01001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {18, 0, 0, 0};
  // {00011101 10100000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-72, 5, 0, 0};
  // {00110110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {108, 0, 0, 0};
  // {11011111 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {-5, 3, 0, 0};
  // {00000111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT19 = new byte[] {-32, 0, 0, 0};
  // {11111001 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT20 = new byte[] {-97, 4, 0, 0};
  // {11100110 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT21 = new byte[] {103, 14, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_27 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_27_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_27_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 192.5f ? 
         (data[10 /* duration */] < 77.5f ? 
             (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                        -0.10601468f : 
                        -0.089051194f) : 
                    0.046973545f) : 
                 (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 64.5f ? 
                        -0.09460843f : 
                        -0.10990853f) : 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                        -0.116428f : 
                        0.02108713f))) : 
             (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                        -0.05856702f : 
                        0.056464728f) : 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[3])) ? 
                        -0.015858348f : 
                        0.030952448f)) : 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 188.5f ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[8])) ? 
                        4.315753E-4f : 
                        0.05436599f) : 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 0.5f ? 
                        0.05653356f : 
                        -0.24178731f)))) : 
         (Double.isNaN(data[0]) || data[0 /* age */] < 59.0f ? 
             (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 4) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[2])) ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[8])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 931.5f ? 
                        -0.007564155f : 
                        0.016400773f) : 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[3])) ? 
                        0.037823856f : 
                        0.10250688f)) : 
                 (data[0 /* age */] < 23.5f ? 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[3])) ? 
                        0.028725365f : 
                        0.1565539f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[8])) ? 
                        0.0048857387f : 
                        0.027775934f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 931.5f ? 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[9])) ? 
                        -0.016644986f : 
                        0.03852264f) : 
                    -0.123815514f) : 
                 (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[3])) ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[8])) ? 
                        -0.10485066f : 
                        0.11241118f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[1])) ? 
                        0.075424656f : 
                        0.17650059f)))));
    return pred;
  } // constant pool size = 208B, number of visited nodes = 29, static init size = 540B
  // {01111011 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-34, 2, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {4, 0, 0, 0};
  // {01010001 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-118, 2, 0, 0};
  // {00100010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {68, 0, 0, 0};
  // {00000100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {32, 1, 0, 0};
  // {10101100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {53, 3, 0, 0};
  // {00000011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-64, 0, 0, 0};
  // {11000101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-93, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {4, 0, 0, 0};
  // {00100000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {4, 2, 0, 0};
  // {11000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {35, 0, 0, 0};
  // {10001111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-15, 0, 0, 0};
  // {11001101 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-77, 3, 0, 0};
  // {10011001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-103, 0, 0, 0};
  // {10011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {25, 0, 0, 0};
  // {10011111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {-7, 0, 0, 0};
  // {00001001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-112, 0, 0, 0};
  // {11001000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {19, 8, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_28 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_28_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_28_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 192.5f ? 
         (Double.isNaN(data[0]) || data[0 /* age */] < 77.0f ? 
             (data[10 /* duration */] < 80.5f ? 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 77.5f ? 
                        -0.08976182f : 
                        0.13325083f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
                        -0.10519964f : 
                        -0.092045695f)) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[8])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 68.0f ? 
                        -0.05351028f : 
                        -0.058634125f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                        -0.010009929f : 
                        0.032793995f))) : 
             (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                 (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[3])) ? 
                    -0.1280543f : 
                    -0.0016981901f) : 
                 (data[10 /* duration */] < 122.5f ? 
                    0.0013244492f : 
                     (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 4) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[2])) ? 
                        0.09578595f : 
                        0.19659446f)))) : 
         (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[7])) ? 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
                 (data[12 /* pdays */] < 8.0f ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[1])) ? 
                        0.016566359f : 
                        0.13896327f) : 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 1581.5f ? 
                        -0.020475516f : 
                        0.044710957f)) : 
                 (data[0 /* age */] < 29.5f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[1])) ? 
                        0.06426176f : 
                        0.31470522f) : 
                     (data[11 /* campaign */] < 1.5f ? 
                        0.09382429f : 
                        -0.0051548155f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[8])) ? 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[8])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 58.0f ? 
                        -0.0041746404f : 
                        0.061316326f) : 
                     (!Double.isNaN(data[4 /* default */]) && (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 3) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[4])) ? 
                        -0.006228776f : 
                        0.022240125f)) : 
                 (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 510.5f ? 
                        0.10451745f : 
                        -0.0019015449f) : 
                     (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[9])) ? 
                        -0.084254615f : 
                        0.040720604f)))));
    return pred;
  } // constant pool size = 189B, number of visited nodes = 28, static init size = 450B
  // {01111011 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-34, 2, 0, 0};
  // {11111111 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-1, 6, 0, 0};
  // {11101101 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-73, 1, 0, 0};
  // {00001100 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {48, 13, 0, 0};
  // {10010111 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-23, 2, 0, 0};
  // {00011111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-8, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {11000101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-93, 0, 0, 0};
  // {10100111 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-27, 7, 0, 0};
  // {00011001 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-104, 6, 0, 0};
  // {00001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {16, 0, 0, 0};
  // {01101110 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {118, 3, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {1, 0, 0, 0};
  // {01101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {22, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_29 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_29_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_29_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (data[14] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[14])) ? 
         (Double.isNaN(data[10]) || data[10 /* duration */] < 345.5f ? 
             (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[8])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 194.5f ? 
                        -0.068231255f : 
                        -0.054394666f) : 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 264.5f ? 
                        -0.0197526f : 
                        0.07675945f)) : 
                 (data[0 /* age */] < 29.5f ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                        -0.013729462f : 
                        0.07105899f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 85.5f ? 
                        -0.011322946f : 
                        0.07971786f))) : 
             (Double.isNaN(data[0]) || data[0 /* age */] < 58.0f ? 
                 (data[0 /* age */] < 35.5f ? 
                     (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[9])) ? 
                        0.0033755666f : 
                        0.031050008f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
                        -0.002401307f : 
                        0.07125456f)) : 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[8])) ? 
                     (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[9])) ? 
                        -0.07519597f : 
                        0.015145057f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[1])) ? 
                        -0.019826502f : 
                        0.06304878f)))) : 
         (Double.isNaN(data[10]) || data[10 /* duration */] < 441.5f ? 
             (data[12 /* pdays */] < 2.5f ? 
                 (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[9])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 213.5f ? 
                        -0.041048028f : 
                        -0.18503611f) : 
                     (data[10 /* duration */] < 213.5f ? 
                        -0.05264655f : 
                        0.101612f)) : 
                 (Double.isNaN(data[11]) || data[11 /* campaign */] < 3.5f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[1])) ? 
                        0.014296084f : 
                        0.043662716f) : 
                     (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 4) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[2])) ? 
                        -0.09151076f : 
                        0.028225565f))) : 
             (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[8])) ? 
                -0.06846932f : 
                 (data[0 /* age */] < 24.5f ? 
                    -0.030575326f : 
                     (data[12 /* pdays */] < 4.5f ? 
                        0.026969083f : 
                        0.084108606f)))));
    return pred;
  } // constant pool size = 175B, number of visited nodes = 27, static init size = 390B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {10001110 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {113, 15, 0, 0};
  // {01100100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {38, 3, 0, 0};
  // {11001101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-77, 0, 0, 0};
  // {10010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {9, 0, 0, 0};
  // {00100000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {4, 1, 0, 0};
  // {11111011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-33, 0, 0, 0};
  // {10010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {9, 0, 0, 0};
  // {10111100 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {61, 9, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {4, 0, 0, 0};
  // {00011101 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-72, 4, 0, 0};
  // {10110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {13, 0, 0, 0};
  // {11011111 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-5, 3, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_30 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_30_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_30_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* duration */] < 134.5f ? 
         (data[12 /* pdays */] < 4.0f ? 
             (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
                     (data[0 /* age */] < 35.5f ? 
                        -0.14360908f : 
                        -0.03717067f) : 
                    0.08279867f) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                    -0.033541728f : 
                     (!Double.isNaN(data[2 /* marital */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 4) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[2])) ? 
                        0.026702793f : 
                        0.18281543f))) : 
             (!Double.isNaN(data[14 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[14])) ? 
                 (data[10 /* duration */] < 81.5f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                        -0.106964126f : 
                        0.21160449f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
                        -0.09467777f : 
                        0.015219055f)) : 
                 (data[12 /* pdays */] < 11.5f ? 
                    0.09269307f : 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                        -0.048879784f : 
                        -0.084927805f)))) : 
         (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[7])) ? 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 1592.5f ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 499.5f ? 
                        -0.061176687f : 
                        0.003649971f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[1])) ? 
                        -0.06389584f : 
                        0.1426274f)) : 
                 (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[8])) ? 
                        -0.0992534f : 
                        -0.013968166f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[1])) ? 
                        -0.011425934f : 
                        0.089776665f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[8])) ? 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[8])) ? 
                        -0.0020867123f : 
                        0.031570833f) : 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[3])) ? 
                        0.014090635f : 
                        0.04085962f)) : 
                 (!Double.isNaN(data[14 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[14])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[1])) ? 
                        -0.10992515f : 
                        0.05242847f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 37.5f ? 
                        0.12171873f : 
                        0.058002733f)))));
    return pred;
  } // constant pool size = 209B, number of visited nodes = 28, static init size = 570B
  // {01000101 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-94, 2, 0, 0};
  // {01000110 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {98, 8, 0, 0};
  // {10010011 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-55, 2, 0, 0};
  // {10110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {13, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {3, 0, 0, 0};
  // {10001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {49, 0, 0, 0};
  // {00000101 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-96, 1, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {11000001 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-125, 1, 0, 0};
  // {11110011 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-49, 13, 0, 0};
  // {10111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {29, 0, 0, 0};
  // {11111111 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-1, 2, 0, 0};
  // {11101011 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-41, 14, 0, 0};
  // {00001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {16, 0, 0, 0};
  // {10000100 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {33, 9, 0, 0};
  // {00100100 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {36, 2, 0, 0};
  // {10000001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-127, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {2, 0, 0, 0};
  // {11111011 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {-33, 14, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_31 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_31_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_31_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* duration */] < 134.5f ? 
         (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
             (Double.isNaN(data[13]) || data[13 /* previous */] < 2.5f ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 67.5f ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 63.0f ? 
                        -0.05262342f : 
                        0.058020774f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                        -0.093926966f : 
                        0.047514025f)) : 
                 (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                    -0.13582548f : 
                    -0.02111539f)) : 
             (!Double.isNaN(data[2 /* marital */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 4) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[2])) ? 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                     (Double.isNaN(data[6 /* loan */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 3) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[6])) ? 
                        -0.07653578f : 
                        0.0697671f) : 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[3])) ? 
                        -0.076247044f : 
                        0.14451103f)) : 
                 (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[3])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 45.5f ? 
                        -0.010724573f : 
                        0.06459569f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[1])) ? 
                        0.04196362f : 
                        0.20643644f)))) : 
         (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[3])) ? 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 546.5f ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[8])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 58.0f ? 
                        -0.029117942f : 
                        0.038810782f) : 
                     (data[0 /* age */] < 41.5f ? 
                        0.038515255f : 
                        -0.0022970329f)) : 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[8])) ? 
                     (Double.isNaN(data[11]) || data[11 /* campaign */] < 5.5f ? 
                        -0.016542083f : 
                        -0.16936459f) : 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[3])) ? 
                        0.002834445f : 
                        0.0260805f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[8])) ? 
                 (data[0 /* age */] < 25.5f ? 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[9])) ? 
                        -0.027510788f : 
                        0.11818088f) : 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                        0.0068409536f : 
                        0.04590216f)) : 
                 (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[9])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[1])) ? 
                        -0.026128946f : 
                        0.1281202f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[1])) ? 
                        -0.02151984f : 
                        0.09366102f)))));
    return pred;
  } // constant pool size = 208B, number of visited nodes = 29, static init size = 540B
  // {00000100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {32, 1, 0, 0};
  // {01110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {14, 0, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {5, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {00001000 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {16, 3, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {4, 0, 0, 0};
  // {00010010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {72, 0, 0, 0};
  // {00010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {8, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {3, 0, 0, 0};
  // {00001011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-48, 0, 0, 0};
  // {01100100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {38, 3, 0, 0};
  // {01111110 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {126, 2, 0, 0};
  // {01111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {30, 0, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {5, 0, 0, 0};
  // {01110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {14, 0, 0, 0};
  // {00111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {28, 0, 0, 0};
  // {00010100 10100000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {40, 5, 0, 0};
  // {10111110 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {125, 14, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_32 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_32_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_32_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[4 /* default */]) && (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 3) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[4])) ? 
         (Double.isNaN(data[10]) || data[10 /* duration */] < 1248.5f ? 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 1156.5f ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 1089.5f ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                        -0.036795516f : 
                        0.081554204f) : 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                        -0.0055757947f : 
                        0.19956815f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                    -0.18307811f : 
                    -0.006300213f)) : 
             (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                -0.06535969f : 
                 (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[5 /* housing */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 3) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[5])) ? 
                        -0.03162589f : 
                        0.10692817f) : 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[8])) ? 
                        0.08228345f : 
                        0.17972706f)))) : 
         (data[10 /* duration */] < 134.5f ? 
             (data[12 /* pdays */] < 4.0f ? 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[1])) ? 
                        -0.08302831f : 
                        0.075709775f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[1])) ? 
                        -0.021430543f : 
                        0.097998545f)) : 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[14 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[14])) ? 
                        -0.0478901f : 
                        -0.04391211f) : 
                     (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[9])) ? 
                        -0.0063489904f : 
                        0.1264486f))) : 
             (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[7])) ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[8])) ? 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                        -0.021843256f : 
                        0.05945959f) : 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                        0.053363778f : 
                        -0.087417334f)) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[8])) ? 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[3])) ? 
                        2.815038E-4f : 
                        0.017458454f) : 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                        0.078671716f : 
                        -0.015915237f)))));
    return pred;
  } // constant pool size = 196B, number of visited nodes = 26, static init size = 540B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {00100000 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {4, 3, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {5, 0, 0, 0};
  // {11000010 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {67, 8, 0, 0};
  // {11110111 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-17, 1, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {5, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {4, 0, 0, 0};
  // {00010011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-56, 0, 0, 0};
  // {01000101 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-94, 2, 0, 0};
  // {01000110 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {98, 8, 0, 0};
  // {11111011 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-33, 2, 0, 0};
  // {00000100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {32, 1, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {3, 0, 0, 0};
  // {00001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {16, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {1, 0, 0, 0};
  // {11000001 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {-125, 1, 0, 0};
  // {00001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {16, 0, 0, 0};
  // {00001111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {-16, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_33 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_33_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_33_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* age */] < 26.5f ? 
         (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
             (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
                 (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                        -0.071511105f : 
                        -0.013115416f) : 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 1076.5f ? 
                        0.051620513f : 
                        -0.09210821f)) : 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 345.5f ? 
                     (data[0 /* age */] < 24.5f ? 
                        0.2619449f : 
                        -0.16054666f) : 
                    0.23249544f)) : 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 192.5f ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 25.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* campaign */] < 1.5f ? 
                        0.09956083f : 
                        -0.113965705f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                        0.02817379f : 
                        0.36878544f)) : 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 24.5f ? 
                     (data[0 /* age */] < 20.5f ? 
                        0.13732323f : 
                        0.015249938f) : 
                     (!Double.isNaN(data[5 /* housing */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 3) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                        0.09932449f : 
                        0.25508878f)))) : 
         (Double.isNaN(data[10]) || data[10 /* duration */] < 826.5f ? 
             (Double.isNaN(data[0]) || data[0 /* age */] < 59.5f ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[8])) ? 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                        -0.013808501f : 
                        0.030435057f) : 
                     (Double.isNaN(data[5 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (data[5] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 3) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                        0.0021707327f : 
                        0.040604353f)) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[1])) ? 
                        -0.008512548f : 
                        0.088583015f) : 
                     (data[10 /* duration */] < 129.5f ? 
                        0.021333711f : 
                        0.07123137f))) : 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 3136.5f ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 2342.5f ? 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[9])) ? 
                        -0.0050427504f : 
                        0.017138816f) : 
                    0.09116341f) : 
                -0.11736831f)));
    return pred;
  } // constant pool size = 161B, number of visited nodes = 26, static init size = 330B
  // {11000001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-125, 0, 0, 0};
  // {00000000 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {0, 12, 0, 0};
  // {10010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {9, 0, 0, 0};
  // {11011111 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-5, 2, 0, 0};
  // {01000000 10100000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 5, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {6, 0, 0, 0};
  // {00100100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {36, 3, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {10010001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-119, 0, 0, 0};
  // {01101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {22, 0, 0, 0};
  // {01111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {30, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_34 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_34_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_34_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 283.5f ? 
         (data[0 /* age */] < 27.0f ? 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 243.5f ? 
                        -0.019201588f : 
                        -0.15713052f) : 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 162.5f ? 
                        -0.03598123f : 
                        0.068111666f)) : 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 204.0f ? 
                     (data[0 /* age */] < 21.5f ? 
                        -0.06948523f : 
                        0.077084474f) : 
                     (!Double.isNaN(data[14 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[14])) ? 
                        -0.02432883f : 
                        0.20411679f))) : 
             (Double.isNaN(data[0]) || data[0 /* age */] < 77.5f ? 
                 (!Double.isNaN(data[4 /* default */]) && (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 3) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[4])) ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                        -0.092081666f : 
                        0.08165262f) : 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
                        -0.032098334f : 
                        0.0025057674f)) : 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[8])) ? 
                    -0.07842017f : 
                     (data[10 /* duration */] < 97.5f ? 
                        -0.06016372f : 
                        0.06598515f)))) : 
         (Double.isNaN(data[0]) || data[0 /* age */] < 59.0f ? 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 3144.5f ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 1580.5f ? 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[8])) ? 
                        -0.0032915894f : 
                        0.009786164f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[1])) ? 
                        0.015142472f : 
                        0.12821761f)) : 
                -0.104151055f) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 935.5f ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[1])) ? 
                        -0.14509518f : 
                        0.01885158f) : 
                    -0.108975105f) : 
                 (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[3])) ? 
                    -0.0862716f : 
                     (!Double.isNaN(data[2 /* marital */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 4) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[2])) ? 
                        0.016490074f : 
                        0.13437292f)))));
    return pred;
  } // constant pool size = 167B, number of visited nodes = 25, static init size = 390B
  // {11000001 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-125, 2, 0, 0};
  // {00011010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {88, 0, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {6, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {00100100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {36, 3, 0, 0};
  // {11101101 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-73, 2, 0, 0};
  // {11010101 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-85, 3, 0, 0};
  // {01101110 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {118, 3, 0, 0};
  // {00011010 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {88, 13, 0, 0};
  // {10011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {25, 0, 0, 0};
  // {10111111 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-3, 3, 0, 0};
  // {10011111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-7, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {2, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_35 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_35_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_35_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[7])) ? 
         (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 1594.5f ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 1482.5f ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 463.5f ? 
                        -0.068679295f : 
                        0.003851642f) : 
                    -0.09472682f) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                    -0.070183255f : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                        0.071426265f : 
                        0.16189839f))) : 
             (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                 (!Double.isNaN(data[14 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[14])) ? 
                     (!Double.isNaN(data[2 /* marital */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 4) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[2])) ? 
                        -0.15333886f : 
                        -0.041609023f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 53.5f ? 
                        0.036773756f : 
                        -0.04299715f)) : 
                 (data[10 /* duration */] < 76.5f ? 
                     (Double.isNaN(data[14 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (data[14] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[14])) ? 
                        -0.10231258f : 
                        0.211862f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
                        0.063025795f : 
                        0.101977535f)))) : 
         (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[8])) ? 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 307.5f ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[8])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                        -0.021603027f : 
                        0.023995385f) : 
                     (!Double.isNaN(data[14 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[14])) ? 
                        -0.021126641f : 
                        0.030112956f)) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[8])) ? 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[9])) ? 
                        -0.008184169f : 
                        0.010100614f) : 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[3])) ? 
                        0.010640671f : 
                        0.051657327f))) : 
             (Double.isNaN(data[13]) || data[13 /* previous */] < 2.5f ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 744.5f ? 
                     (data[10 /* duration */] < 147.5f ? 
                        0.05098572f : 
                        0.071624905f) : 
                    -0.07620386f) : 
                 (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[9])) ? 
                    -0.15631332f : 
                    0.008695525f))));
    return pred;
  } // constant pool size = 191B, number of visited nodes = 26, static init size = 510B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {11100001 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-121, 1, 0, 0};
  // {11110011 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-49, 13, 0, 0};
  // {01111101 11100000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-66, 7, 0, 0};
  // {11001001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-109, 12, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {3, 0, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {5, 0, 0, 0};
  // {00000000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {0, 1, 0, 0};
  // {00001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {16, 0, 0, 0};
  // {00100100 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {36, 2, 0, 0};
  // {00000100 10100000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {32, 5, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {6, 0, 0, 0};
  // {00000010 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {64, 1, 0, 0};
  // {00111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {28, 0, 0, 0};
  // {01000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {66, 0, 0, 0};
  // {01001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {18, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_36 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_36_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_36_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* campaign */] < 1.5f ? 
         (Double.isNaN(data[10]) || data[10 /* duration */] < 701.5f ? 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
                 (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[7])) ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[8])) ? 
                        -0.060193148f : 
                        0.06400226f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                        0.0026410786f : 
                        0.040026724f)) : 
                 (Double.isNaN(data[7 /* contact */]) || !GenModel.bitSetIsInRange(32, 0, data[7]) || (data[7] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[7])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                        0.0041479846f : 
                        0.04999108f) : 
                     (data[10 /* duration */] < 77.5f ? 
                        -0.057150126f : 
                        0.106843494f))) : 
             (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[9])) ? 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[1])) ? 
                     (Double.isNaN(data[5 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (data[5] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 3) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[5])) ? 
                        -0.04881473f : 
                        0.008740997f) : 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[8])) ? 
                        -0.07781575f : 
                        0.098188564f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[3])) ? 
                        -0.14194135f : 
                        0.007279983f) : 
                     (Double.isNaN(data[6 /* loan */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 3) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[6])) ? 
                        0.04228722f : 
                        0.10718575f)))) : 
         (Double.isNaN(data[10]) || data[10 /* duration */] < 1335.5f ? 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 1153.5f ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 1054.5f ? 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[8])) ? 
                        -0.035990056f : 
                        -0.00610349f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                        -0.03377741f : 
                        0.06546944f)) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[8])) ? 
                     (data[10 /* duration */] < 1215.0f ? 
                        -0.14618613f : 
                        -0.044804882f) : 
                     (data[10 /* duration */] < 1202.5f ? 
                        -0.054242067f : 
                        0.10410335f))) : 
             (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[3])) ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[8])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 1649.5f ? 
                        -0.056822136f : 
                        -0.16716932f) : 
                     (!Double.isNaN(data[5 /* housing */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 3) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[5])) ? 
                        0.009475104f : 
                        0.12055493f)) : 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT19, 32, 0, data[8])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT20, 32, 0, data[1])) ? 
                        -0.10445228f : 
                        0.08823647f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT21, 32, 0, data[1])) ? 
                        -0.013435238f : 
                        0.08298357f)))));
    return pred;
  } // constant pool size = 236B, number of visited nodes = 31, static init size = 660B
  // {10000101 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-95, 1, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {14, 0, 0, 0};
  // {00001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {16, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {00010100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {40, 1, 0, 0};
  // {10011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {25, 0, 0, 0};
  // {00100001 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-124, 13, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {3, 0, 0, 0};
  // {11010110 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {107, 2, 0, 0};
  // {01111101 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-66, 3, 0, 0};
  // {10111011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-35, 0, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {6, 0, 0, 0};
  // {11111110 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {127, 2, 0, 0};
  // {11100111 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-25, 12, 0, 0};
  // {11000000 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {3, 3, 0, 0};
  // {01111011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-34, 0, 0, 0};
  // {01101101 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {-74, 3, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {6, 0, 0, 0};
  // {10011111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT19 = new byte[] {-7, 0, 0, 0};
  // {01111111 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT20 = new byte[] {-2, 15, 0, 0};
  // {11011010 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT21 = new byte[] {91, 14, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_37 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_37_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_37_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (data[14] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[14])) ? 
         (data[0 /* age */] < 23.0f ? 
             (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
                 (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                        -0.10094962f : 
                        0.0082281595f) : 
                     (data[0 /* age */] < 18.5f ? 
                        -0.101100326f : 
                        0.07869868f)) : 
                 (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[9])) ? 
                    0.16689683f : 
                    0.6172902f)) : 
             (Double.isNaN(data[13]) || data[13 /* previous */] < 3.5f ? 
                 (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[3])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 538.5f ? 
                        -0.01974217f : 
                        0.00827685f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[8])) ? 
                        0.0024132696f : 
                        0.039500102f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[1])) ? 
                    -0.2164192f : 
                    0.011176222f))) : 
         (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[3])) ? 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[8])) ? 
                 (data[0 /* age */] < 25.5f ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[1])) ? 
                        -0.12373243f : 
                        -0.032098286f) : 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 393.5f ? 
                        -9.020452E-4f : 
                        0.024127766f)) : 
                 (data[0 /* age */] < 25.5f ? 
                    0.13657266f : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                        0.01629279f : 
                        0.09473114f))) : 
             (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[9])) ? 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[8])) ? 
                    -0.12570861f : 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 307.5f ? 
                        -0.051331993f : 
                        0.12998106f)) : 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[7])) ? 
                        -0.064868435f : 
                        0.052549463f) : 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[8])) ? 
                        0.025396656f : 
                        0.12359164f)))));
    return pred;
  } // constant pool size = 187B, number of visited nodes = 25, static init size = 510B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
  // {00000010 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {64, 6, 0, 0};
  // {11011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {27, 0, 0, 0};
  // {00101011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-44, 0, 0, 0};
  // {10110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {13, 0, 0, 0};
  // {00001011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-48, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10001000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {17, 2, 0, 0};
  // {00000101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-96, 0, 0, 0};
  // {00010100 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {40, 2, 0, 0};
  // {00000000 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {0, 9, 0, 0};
  // {01111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {30, 0, 0, 0};
  // {10111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {29, 0, 0, 0};
  // {01011011 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-38, 3, 0, 0};
  // {10111110 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {125, 4, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {1, 0, 0, 0};
  // {11101111 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-9, 2, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_38 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_38_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_38_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[4 /* default */]) && (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 3) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[4])) ? 
         (Double.isNaN(data[10]) || data[10 /* duration */] < 1248.5f ? 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 1156.5f ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 1089.5f ? 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                        -0.064938046f : 
                        -0.026168598f) : 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[3])) ? 
                        0.014122518f : 
                        0.15545449f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                    -0.16632198f : 
                    -0.007040987f)) : 
             (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                -0.06837483f : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[3])) ? 
                        -0.05530446f : 
                        0.073745966f) : 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[3])) ? 
                        0.06461153f : 
                        0.15559301f)))) : 
         (data[10 /* duration */] < 124.5f ? 
             (Double.isNaN(data[0]) || data[0 /* age */] < 69.5f ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 2.5f ? 
                        -0.05461669f : 
                        -0.11579257f) : 
                     (data[10 /* duration */] < 76.5f ? 
                        -0.07564892f : 
                        0.034142066f)) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[8])) ? 
                     (data[10 /* duration */] < 92.5f ? 
                        -0.110206656f : 
                        -0.13272597f) : 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[3])) ? 
                        -0.029412996f : 
                        0.16834767f))) : 
             (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[7])) ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[8])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 499.5f ? 
                        -0.059373386f : 
                        0.007099621f) : 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 1473.5f ? 
                        0.035087224f : 
                        -0.103328094f)) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[8])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                        -0.00555458f : 
                        0.012209532f) : 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                        0.06209226f : 
                        -0.023729425f)))));
    return pred;
  } // constant pool size = 181B, number of visited nodes = 26, static init size = 450B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01111111 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-2, 3, 0, 0};
  // {11001011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-45, 0, 0, 0};
  // {11000010 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {67, 8, 0, 0};
  // {11110111 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-17, 1, 0, 0};
  // {01010001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-118, 0, 0, 0};
  // {10011111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-7, 0, 0, 0};
  // {10100010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {69, 0, 0, 0};
  // {10000100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {33, 3, 0, 0};
  // {01110100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {46, 0, 0, 0};
  // {01111101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-66, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {1, 0, 0, 0};
  // {11010001 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-117, 1, 0, 0};
  // {00001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {16, 0, 0, 0};
  // {10011110 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {121, 15, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_39 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_39_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_39_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* campaign */] < 1.5f ? 
         (Double.isNaN(data[10]) || data[10 /* duration */] < 2041.5f ? 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 702.5f ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
                        -0.013728545f : 
                        0.014888621f) : 
                     (Double.isNaN(data[7 /* contact */]) || !GenModel.bitSetIsInRange(32, 0, data[7]) || (data[7] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[7])) ? 
                        0.010749496f : 
                        0.08327127f)) : 
                 (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                        -0.016084675f : 
                        0.06302557f) : 
                     (Double.isNaN(data[6 /* loan */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 3) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[6])) ? 
                        0.024615692f : 
                        0.08747955f))) : 
             (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[8])) ? 
                -0.21012937f : 
                0.036585316f)) : 
         (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[8])) ? 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 1479.5f ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 1261.5f ? 
                     (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[9])) ? 
                        -0.04490436f : 
                        -0.010151643f) : 
                    -0.11957917f) : 
                0.07792669f) : 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 1287.5f ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 1157.5f ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 1121.5f ? 
                        -0.0048097824f : 
                        0.04853448f) : 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[9])) ? 
                        -0.12870021f : 
                        -0.010110238f)) : 
                 (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[3])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 1697.5f ? 
                        0.024540566f : 
                        -0.14387517f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                        0.029596224f : 
                        0.16428621f)))));
    return pred;
  } // constant pool size = 146B, number of visited nodes = 21, static init size = 360B
  // {10000101 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-95, 1, 0, 0};
  // {10001000 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {17, 12, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {25, 0, 0, 0};
  // {00100001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-124, 12, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {6, 0, 0, 0};
  // {00111110 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {124, 2, 0, 0};
  // {11111110 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {127, 2, 0, 0};
  // {10010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {9, 0, 0, 0};
  // {01110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {14, 0, 0, 0};
  // {01111011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-34, 0, 0, 0};
  // {00010010 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {72, 4, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_40 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_40_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_40_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* age */] < 31.5f ? 
         (Double.isNaN(data[13]) || data[13 /* previous */] < 3.5f ? 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 1123.5f ? 
                        -0.023266919f : 
                        -0.062281433f) : 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 591.5f ? 
                        0.0036251557f : 
                        0.020107865f)) : 
                 (data[0 /* age */] < 28.5f ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[8])) ? 
                        0.021379104f : 
                        0.13270281f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                        -0.013213461f : 
                        0.037301693f))) : 
             (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                -0.18099996f : 
                -0.040534757f)) : 
         (Double.isNaN(data[0]) || data[0 /* age */] < 58.5f ? 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
                 (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[3])) ? 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[8])) ? 
                        -0.036206637f : 
                        -0.015243306f) : 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 461.5f ? 
                        -0.006758725f : 
                        0.012906183f)) : 
                 (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[3])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 44.5f ? 
                        0.0349716f : 
                        -0.024601286f) : 
                     (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[9])) ? 
                        0.073574044f : 
                        0.2650366f))) : 
             (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[8])) ? 
                 (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[3])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 922.5f ? 
                        -0.020552587f : 
                        -0.16086291f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[1])) ? 
                        0.014781746f : 
                        0.20324412f)) : 
                 (data[10 /* duration */] < 192.5f ? 
                     (Double.isNaN(data[14 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (data[14] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[14])) ? 
                        0.0035216245f : 
                        0.091034345f) : 
                     (Double.isNaN(data[11]) || data[11 /* campaign */] < 5.5f ? 
                        0.045527704f : 
                        0.21415086f)))));
    return pred;
  } // constant pool size = 172B, number of visited nodes = 25, static init size = 420B
  // {11001001 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-109, 2, 0, 0};
  // {10101011 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-43, 3, 0, 0};
  // {01000001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-126, 0, 0, 0};
  // {10111110 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {125, 3, 0, 0};
  // {10010010 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {73, 2, 0, 0};
  // {00100100 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {36, 2, 0, 0};
  // {01001011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-46, 0, 0, 0};
  // {01111111 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-2, 3, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {3, 0, 0, 0};
  // {01010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {10, 0, 0, 0};
  // {10011111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-7, 0, 0, 0};
  // {00010001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-120, 0, 0, 0};
  // {10001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {17, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {4, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_41 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_41_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_41_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[7])) ? 
         (Double.isNaN(data[13]) || data[13 /* previous */] < 2.5f ? 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 1614.5f ? 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                        -0.026125696f : 
                        0.06838359f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                        -0.04664975f : 
                        0.1254839f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 52.5f ? 
                        0.00765396f : 
                        -0.04321921f) : 
                     (data[10 /* duration */] < 76.5f ? 
                        -0.055708833f : 
                        0.0630933f))) : 
            -0.1404478f) : 
         (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 307.5f ? 
                 (data[12 /* pdays */] < 8.0f ? 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
                        -0.006929367f : 
                        0.037568193f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
                        -0.029516151f : 
                        0.0068035754f)) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[8])) ? 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[9])) ? 
                        -0.0075942134f : 
                        0.008413367f) : 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 1089.5f ? 
                        0.025998084f : 
                        -0.036200315f))) : 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 326.5f ? 
                 (data[10 /* duration */] < 154.5f ? 
                     (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[9])) ? 
                        -0.01075012f : 
                        0.10361855f) : 
                     (!Double.isNaN(data[14 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[14])) ? 
                        3.3748607E-4f : 
                        0.095968366f)) : 
                 (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[3])) ? 
                    -0.15165824f : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[1])) ? 
                        -0.025856452f : 
                        0.080189355f)))));
    return pred;
  } // constant pool size = 159B, number of visited nodes = 23, static init size = 390B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {11100001 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-121, 1, 0, 0};
  // {11110001 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-113, 13, 0, 0};
  // {11001001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-109, 12, 0, 0};
  // {00001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {16, 0, 0, 0};
  // {01101110 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {118, 2, 0, 0};
  // {10010110 10100000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {105, 5, 0, 0};
  // {00000010 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {64, 1, 0, 0};
  // {00111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {28, 0, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {6, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {3, 0, 0, 0};
  // {11111011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-33, 0, 0, 0};
  // {01000001 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-126, 6, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_42 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_42_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_42_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* age */] < 18.5f ? 
         (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
            -0.1423487f : 
            -0.065262064f) : 
         (data[0 /* age */] < 22.5f ? 
             (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
                 (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[3])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                        -0.100733705f : 
                        0.040378645f) : 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                        0.0033155712f : 
                        0.42224532f)) : 
                 (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[3])) ? 
                    0.15673967f : 
                    0.33030975f)) : 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 249.5f ? 
                 (!Double.isNaN(data[4 /* default */]) && (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 3) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[4])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 61.0f ? 
                        -0.08985274f : 
                        0.035396285f) : 
                     (data[10 /* duration */] < 78.5f ? 
                        -0.08008242f : 
                        0.0023584086f)) : 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 83.5f ? 
                     (Double.isNaN(data[14 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (data[14] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[14])) ? 
                        0.0028841437f : 
                        0.019416537f) : 
                    0.08800175f))));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 14, static init size = 240B
  // {11000000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {3, 2, 0, 0};
  // {00000010 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {64, 6, 0, 0};
  // {10000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {33, 0, 0, 0};
  // {10000000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 1, 0, 0};
  // {11010001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-117, 0, 0, 0};
  // {00010010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {72, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {4, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_43 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_43_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_43_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* age */] < 18.5f ? 
         (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
            -0.12556376f : 
            -0.049212646f) : 
         (data[0 /* age */] < 22.5f ? 
             (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
                 (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[3])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                        -0.095544085f : 
                        0.036102086f) : 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                        0.002984769f : 
                        0.3429059f)) : 
                 (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[9])) ? 
                    0.123192206f : 
                    0.2571428f)) : 
             (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[7])) ? 
                 (Double.isNaN(data[13]) || data[13 /* previous */] < 2.5f ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[8])) ? 
                        -0.021845417f : 
                        0.025979513f) : 
                    -0.12739943f) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 307.5f ? 
                        -0.0085272165f : 
                        0.0056387535f) : 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 307.5f ? 
                        0.038820926f : 
                        -0.0012796165f)))));
    return pred;
  } // constant pool size = 103B, number of visited nodes = 14, static init size = 270B
  // {01000000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 2, 0, 0};
  // {00000010 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {64, 6, 0, 0};
  // {10000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {33, 0, 0, 0};
  // {10000000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 1, 0, 0};
  // {11010001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-117, 0, 0, 0};
  // {10110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {13, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {11100001 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-121, 1, 0, 0};
  // {00001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {48, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_44 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_44_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_44_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* duration */] < 124.5f ? 
         (Double.isNaN(data[0]) || data[0 /* age */] < 69.0f ? 
             (data[12 /* pdays */] < 4.0f ? 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
                        -0.09519542f : 
                        0.092347406f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                        -0.036573775f : 
                        0.119081095f)) : 
                 (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                        -0.05021392f : 
                        0.024702031f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                        -0.11769013f : 
                        -0.06549717f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
                 (data[10 /* duration */] < 92.5f ? 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 0.5f ? 
                        -0.10721462f : 
                        -0.114458606f) : 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[8])) ? 
                        -0.13934717f : 
                        -0.1133499f)) : 
                 (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[3])) ? 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
                        -0.11068985f : 
                        0.005881152f) : 
                    0.14332049f))) : 
         (Double.isNaN(data[0]) || data[0 /* age */] < 59.0f ? 
             (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 4) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[2])) ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[8])) ? 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[3])) ? 
                        -0.017335411f : 
                        0.0067411466f) : 
                     (Double.isNaN(data[14 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (data[14] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[14])) ? 
                        0.0039556343f : 
                        0.06270234f)) : 
                 (Double.isNaN(data[13]) || data[13 /* previous */] < 3.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* campaign */] < 6.0f ? 
                        0.014186504f : 
                        -0.033889394f) : 
                     (data[0 /* age */] < 27.5f ? 
                        -0.130442f : 
                        0.0048926193f))) : 
             (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[8])) ? 
                 (Double.isNaN(data[11]) || data[11 /* campaign */] < 3.5f ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 914.5f ? 
                        0.008791363f : 
                        -0.11403645f) : 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[3])) ? 
                        -0.13728517f : 
                        0.06335719f)) : 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[1])) ? 
                     (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[9])) ? 
                        0.02506144f : 
                        0.063204035f) : 
                     (!Double.isNaN(data[4 /* default */]) && (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 3) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[4])) ? 
                        0.06857773f : 
                        0.26638687f)))));
    return pred;
  } // constant pool size = 212B, number of visited nodes = 30, static init size = 540B
  // {01000101 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-94, 2, 0, 0};
  // {01100011 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-58, 13, 0, 0};
  // {10000011 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-63, 2, 0, 0};
  // {00000100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {32, 3, 0, 0};
  // {01110101 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-82, 14, 0, 0};
  // {01110100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {46, 0, 0, 0};
  // {11111111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-1, 0, 0, 0};
  // {01111101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-66, 0, 0, 0};
  // {00000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {32, 0, 0, 0};
  // {00110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {12, 0, 0, 0};
  // {01101100 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {54, 2, 0, 0};
  // {01001010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {82, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {1, 0, 0, 0};
  // {10011011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-39, 0, 0, 0};
  // {00010001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-120, 0, 0, 0};
  // {00001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {16, 0, 0, 0};
  // {01001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {18, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {1, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_45 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_45_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_45_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* campaign */] < 1.5f ? 
         (Double.isNaN(data[10]) || data[10 /* duration */] < 2109.0f ? 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 700.5f ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                        -0.0051398175f : 
                        0.024796044f) : 
                     (Double.isNaN(data[7 /* contact */]) || !GenModel.bitSetIsInRange(32, 0, data[7]) || (data[7] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[7])) ? 
                        0.009701771f : 
                        0.0688944f)) : 
                 (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                        -0.017207623f : 
                        0.059365213f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                        -0.002044596f : 
                        0.047736708f))) : 
            -0.08983266f) : 
         (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 1479.5f ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 1261.5f ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 574.5f ? 
                        -0.029599f : 
                        -0.027679255f) : 
                    -0.10824693f) : 
                0.07065638f) : 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 1287.5f ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 1157.5f ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 1121.5f ? 
                        -0.0037560158f : 
                        0.045969103f) : 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[9])) ? 
                        -0.11316285f : 
                        -0.0076165483f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[3])) ? 
                        -0.12128493f : 
                        0.037952054f) : 
                     (!Double.isNaN(data[6 /* loan */]) && (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 3) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[6])) ? 
                        -0.028045677f : 
                        0.05979385f)))));
    return pred;
  } // constant pool size = 132B, number of visited nodes = 20, static init size = 300B
  // {10000101 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-95, 1, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {25, 0, 0, 0};
  // {00100001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-124, 12, 0, 0};
  // {01111101 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-66, 2, 0, 0};
  // {11111110 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {127, 2, 0, 0};
  // {01110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {14, 0, 0, 0};
  // {11011111 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-5, 12, 0, 0};
  // {01101011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-42, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_46 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_46_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_46_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 264.5f ? 
         (data[0 /* age */] < 19.0f ? 
            -0.15091117f : 
             (data[0 /* age */] < 26.5f ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                        -0.053630445f : 
                        0.014274083f) : 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 208.5f ? 
                        0.029759912f : 
                        0.12951012f)) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[8])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 58.5f ? 
                        -0.037608173f : 
                        0.022257179f) : 
                     (Double.isNaN(data[11]) || data[11 /* campaign */] < 3.5f ? 
                        0.007981454f : 
                        -0.05971162f)))) : 
         (Double.isNaN(data[0]) || data[0 /* age */] < 85.0f ? 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 3137.5f ? 
                 (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                     (data[0 /* age */] < 34.0f ? 
                        0.019164769f : 
                        -0.015810896f) : 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                        -0.0065309284f : 
                        0.008814591f)) : 
                -0.08003585f) : 
            0.07821802f));
    return pred;
  } // constant pool size = 83B, number of visited nodes = 14, static init size = 150B
  // {11000001 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-125, 2, 0, 0};
  // {11011111 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-5, 2, 0, 0};
  // {01001101 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-78, 3, 0, 0};
  // {11101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {23, 0, 0, 0};
  // {11111110 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {127, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_47 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_47_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_47_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[4 /* default */]) && (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 3) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[4])) ? 
         (Double.isNaN(data[10]) || data[10 /* duration */] < 557.5f ? 
             (Double.isNaN(data[0]) || data[0 /* age */] < 63.0f ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                     (data[12 /* pdays */] < 500.0f ? 
                        -0.111184046f : 
                        -0.055464525f) : 
                    0.06359793f) : 
                 (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[3])) ? 
                     (data[0 /* age */] < 72.0f ? 
                        0.11704501f : 
                        -0.06739271f) : 
                    0.16059595f)) : 
             (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[3])) ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 1479.5f ? 
                        -0.01884282f : 
                        0.07825243f) : 
                     (!Double.isNaN(data[2 /* marital */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 4) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[2])) ? 
                        -0.05865531f : 
                        0.046864193f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[7])) ? 
                        -0.119448744f : 
                        -0.041380387f) : 
                     (!Double.isNaN(data[2 /* marital */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 4) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[2])) ? 
                        0.0029237317f : 
                        0.08695272f)))) : 
         (data[10 /* duration */] < 96.5f ? 
             (Double.isNaN(data[14 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (data[14] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[14])) ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 80.5f ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[8])) ? 
                        -0.062328536f : 
                        0.11498263f) : 
                    -0.12221676f) : 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[8])) ? 
                        -0.06986194f : 
                        0.09601887f) : 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[8])) ? 
                        -0.012004122f : 
                        0.14445694f))) : 
             (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[7])) ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[8])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 473.5f ? 
                        -0.06010745f : 
                        0.00883564f) : 
                     (Double.isNaN(data[11]) || data[11 /* campaign */] < 3.5f ? 
                        0.03616759f : 
                        -0.037493806f)) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[8])) ? 
                     (Double.isNaN(data[11]) || data[11 /* campaign */] < 5.5f ? 
                        0.0073996847f : 
                        -0.030302608f) : 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 323.5f ? 
                        0.055957153f : 
                        -0.008329586f)))));
    return pred;
  } // constant pool size = 199B, number of visited nodes = 28, static init size = 510B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {00100100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {36, 3, 0, 0};
  // {00000101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-96, 0, 0, 0};
  // {01010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {10, 0, 0, 0};
  // {01001000 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {18, 3, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {3, 0, 0, 0};
  // {11100101 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-89, 6, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {4, 0, 0, 0};
  // {00000000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {0, 2, 0, 0};
  // {10001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {17, 0, 0, 0};
  // {00100101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-92, 0, 0, 0};
  // {00001001 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-112, 3, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {1, 0, 0, 0};
  // {11110001 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {-113, 1, 0, 0};
  // {00001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {16, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_48 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_48_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_48_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* age */] < 18.5f ? 
         (Double.isNaN(data[10]) || data[10 /* duration */] < 341.0f ? 
            -0.14289674f : 
            -0.032113403f) : 
         (data[0 /* age */] < 22.5f ? 
             (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
                 (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
                     (!Double.isNaN(data[14 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[14])) ? 
                        -0.05892514f : 
                        0.031747237f) : 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                        -0.002473352f : 
                        0.28749362f)) : 
                 (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[9])) ? 
                    0.11092966f : 
                    0.20936018f)) : 
             (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[3])) ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 538.5f ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[8])) ? 
                        -0.024608552f : 
                        0.011196174f) : 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[8])) ? 
                        -0.0252598f : 
                        0.014828057f)) : 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 0.5f ? 
                        -0.0024299112f : 
                        0.015189506f) : 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[9])) ? 
                        -0.0282981f : 
                        0.051080875f)))));
    return pred;
  } // constant pool size = 112B, number of visited nodes = 15, static init size = 300B
  // {00000010 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 6, 0, 0};
  // {10000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {33, 0, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {6, 0, 0, 0};
  // {11010001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-117, 0, 0, 0};
  // {10110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {13, 0, 0, 0};
  // {01001111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-14, 0, 0, 0};
  // {01100100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {38, 1, 0, 0};
  // {01111010 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {94, 2, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {5, 0, 0, 0};
  // {00111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {28, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_49 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_49_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_49_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 192.5f ? 
         (Double.isNaN(data[0]) || data[0 /* age */] < 77.0f ? 
             (Double.isNaN(data[0]) || data[0 /* age */] < 68.0f ? 
                 (Double.isNaN(data[0]) || data[0 /* age */] < 65.5f ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
                        -0.023864243f : 
                        0.010598292f) : 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                        -0.02034915f : 
                        0.17624761f)) : 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[8])) ? 
                     (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 4) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[2])) ? 
                        -0.109476976f : 
                        0.002477385f) : 
                     (Double.isNaN(data[14 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (data[14] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[14])) ? 
                        -0.020155814f : 
                        0.07466539f))) : 
             (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
                 (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[3])) ? 
                    -0.12852548f : 
                    -0.010021687f) : 
                 (!Double.isNaN(data[5 /* housing */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 3) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                    -0.042713046f : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 82.5f ? 
                        0.19254386f : 
                        0.012961915f)))) : 
         (data[0 /* age */] < 23.0f ? 
             (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[3])) ? 
                 (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[14 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[14])) ? 
                        -0.119109474f : 
                        -0.020447167f) : 
                     (!Double.isNaN(data[5 /* housing */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 3) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[5])) ? 
                        -0.042174347f : 
                        0.15562516f)) : 
                 (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[9])) ? 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[3])) ? 
                        0.0066026268f : 
                        0.15804878f) : 
                    0.258536f)) : 
             (Double.isNaN(data[0]) || data[0 /* age */] < 57.5f ? 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 562.5f ? 
                        -0.019265268f : 
                        0.007109546f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[8])) ? 
                        0.0044886204f : 
                        0.027025469f)) : 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[8])) ? 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[9])) ? 
                        -0.0500798f : 
                        0.013287988f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[1])) ? 
                        0.0200481f : 
                        0.10585495f)))));
    return pred;
  } // constant pool size = 205B, number of visited nodes = 27, static init size = 570B
  // {10100000 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {5, 1, 0, 0};
  // {01000101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-94, 0, 0, 0};
  // {01011011 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-38, 1, 0, 0};
  // {10110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {13, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {10010111 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-23, 2, 0, 0};
  // {00011111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-8, 0, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {6, 0, 0, 0};
  // {10001111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-15, 0, 0, 0};
  // {10010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {9, 0, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {6, 0, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {6, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {2, 0, 0, 0};
  // {10000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {33, 0, 0, 0};
  // {10110001 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-115, 14, 0, 0};
  // {00100100 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {36, 2, 0, 0};
  // {10011011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-39, 0, 0, 0};
  // {10011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {25, 0, 0, 0};
  // {11001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {19, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_50 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_50_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_50_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* age */] < 31.5f ? 
         (Double.isNaN(data[13]) || data[13 /* previous */] < 3.5f ? 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 1123.5f ? 
                        -0.011242928f : 
                        -0.044956837f) : 
                     (data[10 /* duration */] < 177.5f ? 
                        -0.03110089f : 
                        0.023447627f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 591.5f ? 
                        0.011617007f : 
                        -0.02973625f) : 
                     (data[10 /* duration */] < 118.5f ? 
                        0.004404914f : 
                        0.037881248f))) : 
             (data[10 /* duration */] < 207.5f ? 
                -0.038814973f : 
                -0.12865151f)) : 
         (Double.isNaN(data[0]) || data[0 /* age */] < 58.5f ? 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 883.5f ? 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[3])) ? 
                        -0.018606482f : 
                        -0.001388352f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                        -0.02130246f : 
                        0.015091337f)) : 
                 (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[3])) ? 
                     (Double.isNaN(data[5 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (data[5] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 3) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                        -0.015403316f : 
                        0.033648714f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 45.5f ? 
                        0.22939764f : 
                        0.079096556f))) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[3])) ? 
                        -0.05773639f : 
                        0.004222656f) : 
                     (Double.isNaN(data[14 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (data[14] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[14])) ? 
                        0.010094056f : 
                        0.094591394f)) : 
                 (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                     (Double.isNaN(data[5 /* housing */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (data[5] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 3) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[5])) ? 
                        0.027143812f : 
                        0.16685738f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 69.0f ? 
                        0.16738574f : 
                        -0.016129948f)))));
    return pred;
  } // constant pool size = 167B, number of visited nodes = 25, static init size = 390B
  // {11001001 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-109, 2, 0, 0};
  // {00101011 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-44, 3, 0, 0};
  // {10010010 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {73, 13, 0, 0};
  // {00100000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {4, 2, 0, 0};
  // {01001111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-14, 0, 0, 0};
  // {11011111 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-5, 4, 0, 0};
  // {11000001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-125, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {3, 0, 0, 0};
  // {10010001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-119, 0, 0, 0};
  // {11101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {23, 0, 0, 0};
  // {11011101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-69, 0, 0, 0};
  // {10100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {5, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {2, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_51 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_51_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_51_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* age */] < 18.5f ? 
         (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
            -0.10575407f : 
            -0.053906687f) : 
         (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[7])) ? 
             (Double.isNaN(data[13]) || data[13 /* previous */] < 2.5f ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[8])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 461.5f ? 
                        -0.06716742f : 
                        0.0075501623f) : 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                        -0.0059973965f : 
                        0.055210076f)) : 
                -0.1187535f) : 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                 (data[0 /* age */] < 27.0f ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
                        0.004856833f : 
                        0.055953134f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 59.5f ? 
                        -0.0017862837f : 
                        0.014938475f)) : 
                 (Double.isNaN(data[13]) || data[13 /* previous */] < 2.5f ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 675.5f ? 
                        0.040348012f : 
                        -0.06171063f) : 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[9])) ? 
                        -0.1430356f : 
                        0.002965237f)))));
    return pred;
  } // constant pool size = 93B, number of visited nodes = 14, static init size = 210B
  // {11000000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {3, 2, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {11010001 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-117, 3, 0, 0};
  // {10001000 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {17, 12, 0, 0};
  // {00001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {16, 0, 0, 0};
  // {11000001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-125, 0, 0, 0};
  // {01001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {18, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_52 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_52_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_52_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 3139.5f ? 
         (data[10 /* duration */] < 79.5f ? 
             (data[12 /* pdays */] < 4.0f ? 
                 (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
                    -0.11807668f : 
                    0.053041864f) : 
                 (Double.isNaN(data[14 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (data[14] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[14])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 60.5f ? 
                        -0.08206378f : 
                        -0.105456375f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[8])) ? 
                        -0.105829716f : 
                        0.1904084f))) : 
             (!Double.isNaN(data[4 /* default */]) && (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 3) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[4])) ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 551.5f ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 544.5f ? 
                        -0.040591385f : 
                        -0.1288394f) : 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                        -0.032785136f : 
                        0.015743403f)) : 
                 (Double.isNaN(data[11]) || data[11 /* campaign */] < 6.5f ? 
                     (!Double.isNaN(data[7 /* contact */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[7])) ? 
                        -0.0056030736f : 
                        0.0075793443f) : 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 880.5f ? 
                        -0.04108658f : 
                        0.03623548f)))) : 
        -0.07782195f);
    return pred;
  } // constant pool size = 88B, number of visited nodes = 14, static init size = 180B
  // {00010100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {40, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {4, 0, 0, 0};
  // {00101001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-108, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {01011110 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {122, 3, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_53 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_53_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_53_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* campaign */] < 1.5f ? 
         (Double.isNaN(data[10]) || data[10 /* duration */] < 1369.0f ? 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 1291.5f ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 707.5f ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 597.5f ? 
                        0.0065459646f : 
                        -0.018775497f) : 
                     (Double.isNaN(data[6 /* loan */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 3) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[6])) ? 
                        0.0043911715f : 
                        0.060227167f)) : 
                0.13657735f) : 
             (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                        -0.16639769f : 
                        -0.049180936f) : 
                    -0.020480854f) : 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                    -0.06131133f : 
                    0.11352772f))) : 
         (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 1479.5f ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 1261.5f ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 928.5f ? 
                        -0.030719707f : 
                        0.029248593f) : 
                    -0.09820427f) : 
                0.06357598f) : 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 1287.5f ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 1157.5f ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 1121.5f ? 
                        -0.0023214447f : 
                        0.0388625f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[8])) ? 
                        -0.09469937f : 
                        0.0043385727f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[1])) ? 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[3])) ? 
                        -0.057163656f : 
                        0.043307185f) : 
                     (data[10 /* duration */] < 1424.5f ? 
                        0.074306384f : 
                        0.008832576f)))));
    return pred;
  } // constant pool size = 131B, number of visited nodes = 21, static init size = 270B
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {6, 0, 0, 0};
  // {11000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {35, 0, 0, 0};
  // {00100101 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-92, 3, 0, 0};
  // {01010101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-86, 0, 0, 0};
  // {10011010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {89, 0, 0, 0};
  // {11111110 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {127, 2, 0, 0};
  // {11101101 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-73, 3, 0, 0};
  // {11011110 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {123, 12, 0, 0};
  // {00100011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-60, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_54 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_54_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_54_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* age */] < 18.5f ? 
         (Double.isNaN(data[10]) || data[10 /* duration */] < 341.0f ? 
            -0.13347287f : 
            -0.026561607f) : 
         (data[10 /* duration */] < 76.5f ? 
             (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
                    -0.10538275f : 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                        -0.10366322f : 
                        -0.10316608f)) : 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                        -0.08532754f : 
                        0.23798834f) : 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                        -0.08395872f : 
                        -0.06585884f))) : 
             (!Double.isNaN(data[4 /* default */]) && (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 3) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[4])) ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 530.5f ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 63.0f ? 
                        -0.047801323f : 
                        0.038311254f) : 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[9])) ? 
                        -0.011418917f : 
                        0.02363831f)) : 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 1098.5f ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 1067.5f ? 
                        0.004453818f : 
                        0.056989364f) : 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[9])) ? 
                        -0.072598785f : 
                        0.0038629498f)))));
    return pred;
  } // constant pool size = 106B, number of visited nodes = 16, static init size = 240B
  // {11111111 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-1, 2, 0, 0};
  // {11011101 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-69, 10, 0, 0};
  // {11110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {15, 0, 0, 0};
  // {01111011 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-34, 3, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {4, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {11100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {7, 0, 0, 0};
  // {01111000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {30, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_55 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_55_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_55_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* age */] < 18.5f ? 
         (Double.isNaN(data[10]) || data[10 /* duration */] < 341.0f ? 
            -0.1263401f : 
            -0.023711955f) : 
         (data[0 /* age */] < 22.5f ? 
             (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
                 (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
                     (!Double.isNaN(data[14 /* poutcome */]) && (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[14])) ? 
                        -0.060432978f : 
                        0.022203855f) : 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                        -0.013103361f : 
                        0.24309118f)) : 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                    0.05403539f : 
                    0.24473064f)) : 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 3141.5f ? 
                 (Double.isNaN(data[14 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (data[14] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[14])) ? 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 3.5f ? 
                        -0.0010461743f : 
                        -0.07823478f) : 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                        -0.0012112707f : 
                        0.026241258f)) : 
                -0.06705087f)));
    return pred;
  } // constant pool size = 80B, number of visited nodes = 12, static init size = 180B
  // {00000010 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 6, 0, 0};
  // {10000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {33, 0, 0, 0};
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {6, 0, 0, 0};
  // {11010001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-117, 0, 0, 0};
  // {00010011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-56, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {4, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_56 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_56_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_56_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* campaign */] < 1.5f ? 
         (Double.isNaN(data[10]) || data[10 /* duration */] < 1369.0f ? 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 1291.5f ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 707.5f ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 597.5f ? 
                        0.005989049f : 
                        -0.017305115f) : 
                     (Double.isNaN(data[6 /* loan */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (data[6] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 3) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[6])) ? 
                        0.0034568186f : 
                        0.054140024f)) : 
                0.12685151f) : 
             (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
                 (Double.isNaN(data[2 /* marital */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (data[2] >= 4) || (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 4) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[2])) ? 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                        -0.18698525f : 
                        -0.07065859f) : 
                    -0.0029977318f) : 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                    -0.03707594f : 
                    0.12401269f))) : 
         (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 1479.5f ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 1261.5f ? 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[9])) ? 
                        -0.057533108f : 
                        -0.016225796f) : 
                    -0.08856905f) : 
                0.059357252f) : 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 1287.5f ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 1157.5f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[1])) ? 
                        -0.0034218975f : 
                        0.024875537f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
                        -0.0852462f : 
                        0.0049531115f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[3])) ? 
                        -0.10242016f : 
                        0.030623486f) : 
                     (!Double.isNaN(data[6 /* loan */]) && (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 3) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[6])) ? 
                        -0.029656691f : 
                        0.049512226f)))));
    return pred;
  } // constant pool size = 146B, number of visited nodes = 21, static init size = 360B
  // {01100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {6, 0, 0, 0};
  // {11000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {35, 0, 0, 0};
  // {00110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {12, 0, 0, 0};
  // {10110101 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-83, 11, 0, 0};
  // {00011010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {88, 0, 0, 0};
  // {11111110 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {127, 2, 0, 0};
  // {11110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {15, 0, 0, 0};
  // {00000000 10100000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {0, 5, 0, 0};
  // {11101101 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-73, 3, 0, 0};
  // {11011111 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-5, 12, 0, 0};
  // {01101011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-42, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {1, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_57 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_57_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_57_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* duration */] < 264.5f ? 
         (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
             (Double.isNaN(data[13]) || data[13 /* previous */] < 1.5f ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 82.5f ? 
                        -0.027378814f : 
                        -0.115793705f) : 
                     (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                        -0.08630435f : 
                        0.024359884f)) : 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 208.5f ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 183.5f ? 
                        -0.015760792f : 
                        -0.17769498f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
                        -0.04327778f : 
                        0.1105165f))) : 
             (Double.isNaN(data[0]) || data[0 /* age */] < 78.5f ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                     (data[12 /* pdays */] < 16.5f ? 
                        0.02017895f : 
                        -0.012551125f) : 
                     (Double.isNaN(data[7 /* contact */]) || !GenModel.bitSetIsInRange(32, 0, data[7]) || (data[7] >= 2) || (GenModel.bitSetIsInRange(32, 0, data[7]) && (data[7] < 2) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[7])) ? 
                        -0.0625231f : 
                        0.029108752f)) : 
                0.1114291f)) : 
         (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[9])) ? 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[8])) ? 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[3])) ? 
                        -0.053458214f : 
                        -0.008503387f) : 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 49.5f ? 
                        -0.004779124f : 
                        0.028788695f)) : 
                 (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[9])) ? 
                     (!Double.isNaN(data[6 /* loan */]) && (GenModel.bitSetIsInRange(32, 0, data[6]) && (data[6] < 3) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[6])) ? 
                        -0.048223447f : 
                        0.002622459f) : 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 1683.0f ? 
                        0.02447031f : 
                        -0.09159725f))) : 
             (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[8])) ? 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[1])) ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 555.5f ? 
                        -0.069530696f : 
                        -0.0755838f) : 
                     (!Double.isNaN(data[2 /* marital */]) && (GenModel.bitSetIsInRange(32, 0, data[2]) && (data[2] < 4) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[2])) ? 
                        -0.051769305f : 
                        0.10965905f)) : 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 1028.5f ? 
                     (Double.isNaN(data[13]) || data[13 /* previous */] < 2.5f ? 
                        0.035441227f : 
                        -0.13480479f) : 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[3])) ? 
                        -0.06666037f : 
                        0.03399677f)))));
    return pred;
  } // constant pool size = 194B, number of visited nodes = 28, static init size = 480B
  // {00001111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-16, 0, 0, 0};
  // {00000100 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {32, 3, 0, 0};
  // {11101111 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-9, 3, 0, 0};
  // {01110101 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-82, 1, 0, 0};
  // {10001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {49, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {11101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {23, 0, 0, 0};
  // {11111001 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-97, 4, 0, 0};
  // {10101111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-11, 0, 0, 0};
  // {00101000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {20, 0, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {3, 0, 0, 0};
  // {01011111 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-6, 3, 0, 0};
  // {00010100 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {40, 6, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {2, 0, 0, 0};
  // {11100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {7, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_58 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_58_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_58_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* age */] < 31.5f ? 
         (Double.isNaN(data[13]) || data[13 /* previous */] < 3.5f ? 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 1079.5f ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 978.5f ? 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 902.5f ? 
                        0.009221854f : 
                        -0.059582576f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[8])) ? 
                        0.032265566f : 
                        0.14904389f)) : 
                 (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
                     (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[3])) ? 
                        -0.07916097f : 
                        0.004466083f) : 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                        -0.05342081f : 
                        0.11224018f))) : 
             (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                -0.13931116f : 
                -0.01780676f)) : 
         (Double.isNaN(data[0]) || data[0 /* age */] < 58.5f ? 
             (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
                 (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[3])) ? 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[8])) ? 
                        -0.029336328f : 
                        -0.0093071945f) : 
                     (Double.isNaN(data[10]) || data[10 /* duration */] < 384.5f ? 
                        -0.005157996f : 
                        0.008482566f)) : 
                 (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[3])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 44.5f ? 
                        0.027133808f : 
                        -0.028377825f) : 
                     (Double.isNaN(data[9 /* day_of_week */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (data[9] >= 5) || (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[9])) ? 
                        0.05810045f : 
                        0.21957265f))) : 
             (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[8])) ? 
                 (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[3])) ? 
                     (Double.isNaN(data[0]) || data[0 /* age */] < 63.0f ? 
                        -0.0041447887f : 
                        -0.0855633f) : 
                     (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[9])) ? 
                        -0.044313785f : 
                        0.0186586f)) : 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 691.5f ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[1])) ? 
                        0.018110905f : 
                        0.1301628f) : 
                     (!Double.isNaN(data[5 /* housing */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && (data[5] < 3) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[5])) ? 
                        0.026662135f : 
                        0.12468354f)))));
    return pred;
  } // constant pool size = 177B, number of visited nodes = 25, static init size = 450B
  // {10110101 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-83, 3, 0, 0};
  // {00100111 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-28, 14, 0, 0};
  // {01010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {10, 0, 0, 0};
  // {01110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {14, 0, 0, 0};
  // {10010010 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {73, 2, 0, 0};
  // {00100100 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {36, 2, 0, 0};
  // {01001011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-46, 0, 0, 0};
  // {01111111 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-2, 3, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {3, 0, 0, 0};
  // {01010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {10, 0, 0, 0};
  // {10011111 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-7, 0, 0, 0};
  // {11011101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-69, 0, 0, 0};
  // {11011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {27, 0, 0, 0};
  // {00001000 00100000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {16, 4, 0, 0};
  // {11000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {3, 0, 0, 0};
}


class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Forest_59 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_59_class_0.score0(fdata);
  }
}
class gbm_95328b5c_5d8f_4844_95fe_51a1aaa17bbc_Tree_59_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[4 /* default */]) && (GenModel.bitSetIsInRange(32, 0, data[4]) && (data[4] < 3) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[4])) ? 
         (Double.isNaN(data[10]) || data[10 /* duration */] < 1248.5f ? 
             (Double.isNaN(data[10]) || data[10 /* duration */] < 1156.5f ? 
                 (Double.isNaN(data[10]) || data[10 /* duration */] < 1089.5f ? 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[8])) ? 
                        -0.019723348f : 
                        0.0731236f) : 
                     (!Double.isNaN(data[3 /* education */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[3])) ? 
                        6.6109956E-4f : 
                        0.13393468f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                    -0.15449114f : 
                    -0.007743059f)) : 
             (!Double.isNaN(data[9 /* day_of_week */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && (data[9] < 5) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[9])) ? 
                 (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[8])) ? 
                    -0.10598369f : 
                    0.04690945f) : 
                 (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[3])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[1])) ? 
                        -0.033538006f : 
                        0.123437434f) : 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[8])) ? 
                        0.0834582f : 
                        0.14820111f)))) : 
         (Double.isNaN(data[3 /* education */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (data[3] >= 8) || (GenModel.bitSetIsInRange(32, 0, data[3]) && (data[3] < 8) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[3])) ? 
             (data[10 /* duration */] < 76.5f ? 
                 (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[8])) ? 
                     (Double.isNaN(data[1 /* job */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (data[1] >= 12) || (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                        -0.087471664f : 
                        0.16503447f) : 
                     (Double.isNaN(data[14 /* poutcome */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (data[14] >= 3) || (GenModel.bitSetIsInRange(32, 0, data[14]) && (data[14] < 3) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[14])) ? 
                        -0.08843297f : 
                        0.026582904f)) : 
                 (!Double.isNaN(data[1 /* job */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && (data[1] < 12) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[1])) ? 
                     (!Double.isNaN(data[8 /* month */]) && (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[8])) ? 
                        -0.022252433f : 
                        4.4083747E-4f) : 
                     (Double.isNaN(data[8 /* month */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (data[8] >= 10) || (GenModel.bitSetIsInRange(32, 0, data[8]) && (data[8] < 10) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[8])) ? 
                        0.0030697535f : 
                        0.01526501f))) : 
            0.2696973f));
    return pred;
  } // constant pool size = 162B, number of visited nodes = 20, static init size = 480B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {00100000 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {4, 3, 0, 0};
  // {11001011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-45, 0, 0, 0};
  // {11000010 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {67, 8, 0, 0};
  // {10110000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {13, 0, 0, 0};
  // {11010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {11, 0, 0, 0};
  // {10000011 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-63, 0, 0, 0};
  // {10111011 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-35, 9, 0, 0};
  // {00011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {24, 0, 0, 0};
  // {00001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {16, 0, 0, 0};
  // {01111011 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-34, 2, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {4, 0, 0, 0};
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {4, 0, 0, 0};
  // {10111100 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {61, 15, 0, 0};
  // {01111110 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {126, 3, 0, 0};
  // {10001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {17, 0, 0, 0};
}


